{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Project.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Project.vue","mtime":1634772343679},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.regexp.split\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\nimport \"core-js/modules/es6.array.sort\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserService from \"../services/user.service\";\nimport InvRow from \"@/views/components/InvRow\";\nimport TaskEdit from \"@/views/components/TaskEdit\";\nimport Stat from \"@/views/components/Stat\";\nimport HorizontalScroll from 'vue-horizontal-scroll';\nimport 'vue-horizontal-scroll/dist/vue-horizontal-scroll.css';\nexport default {\n  name: 'Projects',\n  data: function data() {\n    return {\n      content: '',\n      active: 0,\n      hover: 0,\n      completed: true,\n      overdue: true,\n      inWork: true,\n      findTask: '',\n      interval_start: '',\n      interval_end: '',\n      tasks: [],\n      task: {},\n      openParents: [],\n      isHidden: true,\n      selected: [],\n      findUser: '',\n      users: [],\n      project: {\n        owner: {},\n        managers: [],\n        workerInfos: [],\n        invitations: []\n      },\n      sortW: '',\n      sortM: ''\n    };\n  },\n  components: {\n    'v-invRow': InvRow,\n    'horizontal-scroll': HorizontalScroll,\n    'v-taskEdit': TaskEdit,\n    'v-stat': Stat\n  },\n  computed: {\n    parents: function parents() {\n      var _this = this;\n\n      if (!this.project.tasks) return [];\n      return this.project.tasks.filter(function (item) {\n        return !item.parent;\n      }).filter(function (item) {\n        return (!_this.interval_start || new Date(item.task_start).getTime() >= new Date(_this.interval_start).getTime()) && (!_this.interval_end || new Date(item.task_end).getTime() <= new Date(_this.interval_end).getTime());\n      }).sort(function (f, s) {\n        return f.task_start > s.task_start ? 1 : -1;\n      }).filter(function (item) {\n        return item.taskName.toLowerCase().includes(_this.findTask.toLowerCase());\n      }).filter(function (item) {\n        return (_this.completed || !item.taskComplete) && (_this.overdue || item.taskComplete || new Date(item.task_end).getTime() > new Date().getTime()) && (_this.inWork || item.taskComplete || new Date(item.task_end).getTime() < new Date().getTime());\n      });\n    },\n    children_task: function children_task() {\n      var _this2 = this;\n\n      return this.project.tasks.filter(function (item) {\n        return item.parent;\n      }).filter(function (item) {\n        return (_this2.completed || !item.taskComplete) && (_this2.overdue || item.taskComplete || new Date(item.task_end).getTime() > new Date().getTime()) && (_this2.inWork || item.taskComplete || new Date(item.task_end).getTime() < new Date().getTime());\n      }).sort(function (f, s) {\n        return f.task_start > s.task_start ? 1 : -1;\n      });\n    },\n\n    /*\n    items () {\n      return this.project.workerInfos.map(function (item) {\n        return {user: item, list: 1}\n      }).concat(this.project.managers.map(function (item) {\n        return {user: item, list: 2}\n      }))\n    },\n    listOne () {\n      return this.items.filter(item => (item.list === 1 && (item.user.username.toLowerCase().includes(this.sortW.toLowerCase()) || item.user.email.toLowerCase().includes(this.sortW.toLowerCase()) )))\n    },\n    listTwo () {\n      return this.items.filter(item => (item.list === 2 && (item.user.username.toLowerCase().includes(this.sortM.toLowerCase()) || item.user.email.toLowerCase().includes(this.sortM.toLowerCase()) )))\n    },\n    */\n    workerInfos: function workerInfos() {\n      var _this3 = this;\n\n      return this.project.workerInfos.filter(function (item) {\n        return item.username.toLowerCase().includes(_this3.sortM.toLowerCase()) || item.email.toLowerCase().includes(_this3.sortM.toLowerCase());\n      });\n    },\n    minDate: function minDate() {\n      return this.parents.length > 0 ? new Date(this.parents.reduce(function (p, v) {\n        return p < v.task_start ? p : v.task_start;\n      }, this.parents[0].task_start)) : 0;\n    },\n    maxDate: function maxDate() {\n      var res = this.parents.length > 0 ? new Date(this.parents.reduce(function (p, v) {\n        return p > v.task_end ? p : v.task_end;\n      }, this.parents[0].task_end)) : 0;\n      var buf = 0;\n\n      if (this.$refs.tasks && res) {\n        buf = this.$refs.tasks.clientWidth * 0.7;\n        buf = (buf - buf % 40) / 40;\n        buf -= (res.getTime() - this.minDate.getTime()) / 86400000;\n        if (buf > 0) res.setTime(res.getTime() + buf * 86400000);\n      }\n\n      return res;\n    },\n    tableHeight: function tableHeight() {\n      return 50 * (1 + this.parents.length) + this.openParents.reduce(function (p, v) {\n        return v.isOpen && this.parents.find(function (item) {\n          return item.id === v.id;\n        }) ? p += this.children_task.filter(function (item) {\n          return item.parent.id === v.id;\n        }).length : p;\n      }.bind(this), 0) * 30 + 17;\n    },\n    tableWidth: function tableWidth() {\n      return ((this.maxDate - this.minDate) / 86400000 + 1) * 40;\n    },\n    taskProps: function taskProps() {\n      var _this4 = this;\n\n      return function (task) {\n        return {\n          width: ((new Date(task.task_end) - new Date(task.task_start)) / 86400000 + 1) * 40 - 30 + 'px',\n          left: (new Date(task.task_start) - _this4.minDate) / 86400000 * 40 + 'px',\n          background: task.taskComplete ? '#66cdaa' : new Date(task.task_end) < new Date() ? '#FF7373' : '#6c7bfe'\n        };\n      };\n    },\n    datesList: function datesList() {\n      if (this.minDate === 0) return [{\n        id: 1,\n        title: 'Задач не найдено',\n        days: []\n      }];\n      var res = [];\n      var id = 1;\n      var i = new Date(this.minDate);\n\n      for (i; i <= this.maxDate; i.setDate(i.getDate() + 1)) {\n        var obj = {\n          id: 1,\n          title: '',\n          days: []\n        };\n        obj.title = i.toLocaleString('ru', {\n          month: 'short'\n        });\n        if (new Date().getFullYear() != i.getFullYear()) obj.title += i.getFullYear();\n\n        while (i <= this.maxDate) {\n          obj.days.push(i.getDate());\n          if (i.getDay() === 0) break;\n          i.setDate(i.getDate() + 1);\n        }\n\n        obj.id = id;\n        id += 1;\n        res.push(obj); //res.push(Object.assign({}, obj));\n      }\n\n      return res;\n    },\n    formatDate: function formatDate() {\n      return function (date) {\n        var formDate = new Date(date);\n        var dd = formDate.getDate();\n        if (dd < 10) dd = '0' + dd;\n        var mm = formDate.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        var yy = formDate.getFullYear();\n        if (yy < 10) yy = '0' + yy;\n        return yy + '-' + mm + '-' + dd;\n      };\n    },\n    currentUser: function currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isWorker: function isWorker() {\n      var _this5 = this;\n\n      return this.project.workerInfos.findIndex(function (item) {\n        return item.id === _this5.currentUser.id;\n      }) >= 0;\n    },\n    isManager: function isManager() {\n      return this.isUserManager || this.isUserAdmin;\n    },\n    areAllowed: function areAllowed() {\n      return !(this.isManager || this.isWorker);\n    },\n    isUserAdmin: function isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserManager: function isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n\n      return false;\n    }\n  },\n  mounted: function mounted() {\n    var _this6 = this;\n\n    UserService.getProject(this.$route.params.id).then(function (response) {\n      _this6.project = response.data;\n    }, function (error) {\n      _this6.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    /*\n    startDrag(evt, item) {\n      if (!this.isManager) return;\n      evt.dataTransfer.dropEffect = 'move'\n      evt.dataTransfer.effectAllowed = 'move'\n      evt.dataTransfer.setData('itemID', item.user.id)\n     },\n    onDrop (evt, list) {\n      if (!this.isManager) return;\n      const itemID = evt.dataTransfer.getData('itemID')\n      const item = this.items.find(item => item.user.id == itemID)\n      if (list === 3){\n        if (this.project.workerInfos.find(i => i.id == itemID)){\n          this.project.workerInfos.splice(this.project.workerInfos.findIndex(i => i.id == itemID),1)\n        } else {\n          this.project.managers.splice(this.project.managers.findIndex(i => i.id == itemID),1)\n        }\n        UserService.changeUsers(this.project).then(\n            response => {\n              response.data;//not used yet\n            },\n            error => {\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        );\n      } else if(item.list != list) {\n        if (this.project.workerInfos.find(i => i.id == itemID)){\n          this.project.managers.push(this.project.workerInfos.splice(this.project.workerInfos.findIndex(i => i.id == itemID),1)[0])\n        } else{\n          this.project.workerInfos.push(this.project.managers.splice(this.project.managers.findIndex(i => i.id == itemID),1)[0])\n        }\n        UserService.changeUsers(this.project).then(\n            response => {\n              response.data;//not used yet\n            },\n            error => {\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        );\n      }\n    },\n    */\n    delWorker: function delWorker(workerInfo) {\n      var _this7 = this;\n\n      if (!this.isManager) return;\n      this.project.workerInfos.splice(this.project.workerInfos.findIndex(function (i) {\n        return i.id == workerInfo.id;\n      }), 1);\n      UserService.changeUsers(this.project).then(function (response) {\n        response.data; //not used yet\n      }, function (error) {\n        _this7.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    open: function open(task) {\n      var parent = this.openParents.find(function (item) {\n        return item.id === task.id;\n      });\n\n      if (parent) {\n        parent.isOpen = !parent.isOpen;\n        this.openParents.splice(this.openParents.findIndex(function (item) {\n          return item.id === parent.id;\n        }), 1, parent);\n      } else {\n        this.openParents.push({\n          id: task.id,\n          isOpen: true\n        });\n      }\n    },\n    children: function children(parent) {\n      return this.children_task.filter(function (item) {\n        return item.parent.id === parent.id;\n      });\n    },\n    children_open: function children_open(parent) {\n      if (this.openParents.find(function (item) {\n        return item.id === parent.id;\n      }) && this.openParents.find(function (item) {\n        return item.id === parent.id;\n      }).isOpen) {\n        return this.children(parent);\n      } else return [];\n    },\n    changeName: function changeName() {\n      var _this8 = this;\n\n      if (!this.isManager) return;\n      UserService.changeProjectName(this.project).then(function (response) {\n        response.data; //not used yet\n      }, function (error) {\n        _this8.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    findUsers: function findUsers() {\n      var _this9 = this;\n\n      if (this.findUser) {\n        UserService.getUsersByEmail(this.findUser).then(function (response) {\n          //if (response.data.findIndex(item => item.email === this.currentUser.email) >= 0){response.data.splice(response.data.findIndex(item => item.email === this.currentUser.email),1)}\n          _this9.users = response.data.filter(function (el) {\n            return this.project.workerInfos.findIndex(function (item) {\n              return item.id === el.id;\n            }) < 0 && this.project.invitations.findIndex(function (item) {\n              return item.id === el.id;\n            }) < 0;\n          }, _this9);\n          _this9.selected = [];\n        }, function (error) {\n          //probably not needed\n          _this9.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        }).catch(function (e) {\n          // eslint-disable-next-line no-console\n          console.log(e);\n        });\n      } else {\n        this.users = [];\n      }\n    },\n    addInv: function addInv() {\n      var _this10 = this;\n\n      if (!this.isManager) return;\n\n      if (this.selected[0]) {\n        // eslint-disable-next-line no-console\n        console.log(this.selected[0]);\n        this.project.invitations.push(this.users[this.users.findIndex(function (item) {\n          return item.email === _this10.selected[0].split(' - ')[1];\n        })]);\n        this.findUsers();\n        UserService.changeInvitation(this.project).then(function (response) {\n          response.data; //not used yet\n\n          _this10.message = 'Приглашение добавлено!';\n        }, function (error) {\n          _this10.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        });\n      }\n    },\n    delInv: function delInv(user) {\n      var _this11 = this;\n\n      if (!this.isManager) return;\n      this.project.invitations.splice(this.project.invitations.findIndex(function (item) {\n        return item.id === user.id;\n      }), 1);\n      UserService.changeInvitation(this.project).then(function (response) {\n        response.data; //not used yet\n\n        _this11.message = 'Приглашение удалено!';\n      }, function (error) {\n        _this11.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    //                        task update\n    //                        task update\n    //                        task update\n    openEdit: function openEdit(task) {\n      if (task === 0) {\n        this.task = {};\n      } else {\n        this.task = {};\n        Object.assign(this.task, task);\n      }\n\n      this.isHidden = false;\n    },\n    post_task: function post_task(task) {\n      this.project.tasks.push(task);\n      Object.assign(this.task, task);\n      if (task.parent && !task.taskComplete) this.parents.find(function (item) {\n        return item.id == task.parent.id;\n      }).taskComplete = false;\n      this.task_update('Задача добавлена');\n    },\n    put_task: function put_task(task) {\n      var _this12 = this;\n\n      this.project.tasks.splice(this.project.tasks.findIndex(function (item) {\n        return item.id == task.id;\n      }), 1, task); //because otherwise computed property doesnt recomputed\n\n      if (this.children(task).length > 0) {\n        this.children(task).forEach(function (item) {\n          if (task.taskComplete) item.taskComplete = true;\n\n          if (_this12.formatDate(task.task_start) > _this12.formatDate(item.task_end) || _this12.formatDate(task.task_end) < _this12.formatDate(item.task_start)) {\n            _this12.del_task(item);\n          } else {\n            if (_this12.formatDate(task.task_start) > _this12.formatDate(item.task_start)) item.task_start = task.task_start;\n            if (_this12.formatDate(task.task_end) < _this12.formatDate(item.task_end)) item.task_end = task.task_end;\n          }\n\n          item.parent = task;\n        });\n      } else {\n        if (task.parent && !task.taskComplete) this.parents.find(function (item) {\n          return item.id == task.parent.id;\n        }).taskComplete = false;\n      }\n\n      this.task_update('Задача добавлена');\n    },\n    del_task: function del_task(task) {\n      this.project.tasks.splice(this.project.tasks.findIndex(function (item) {\n        return item.id === task.id;\n      }), 1);\n    },\n    task_update: function task_update(message) {\n      var _this13 = this;\n\n      UserService.changeTasks(this.project).then(function (response) {\n        response.data; //not used yet\n\n        _this13.message = message;\n      }, function (error) {\n        _this13.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    }\n  }\n};",{"version":3,"sources":["Project.vue"],"names":[],"mappings":"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","sourcesContent":["<style scoped>\nh3{\n  margin: 0 20px 0 0;\n}\n</style>\n<template>\n  <div class=\"container\">\n\n    <div v-if=\"currentUser\" class=\"user-menu\">\n        <li>\n          <router-link to=\"/today\">To Do</router-link>\n        </li>\n        <li>\n          <router-link to=\"/tasks\">Задачи</router-link>\n        </li>\n        <li>\n          <router-link to=\"/statistics\">Статистика</router-link>\n        </li>\n        <li>\n          <router-link to=\"/projects\" class=\"active\" @click.prevent>Проекты</router-link>\n        </li>\n        <li>\n          <router-link to=\"/profile\">Мой профиль</router-link>\n        </li>\n        <li v-if=\"isUserManager && false\">\n          <router-link to=\"/mod\">Панель модератора</router-link>\n        </li>\n        <li v-if=\"isUserAdmin\">\n          <router-link to=\"/admin\">Панель администратора</router-link>\n        </li>\n      </div>\n\n    <div class=\"content\">\n      <div class=\"action\">\n        <router-link to=\"/profile\">\n          <h2 style=\"margin: 0\">{{ currentUser.username }}</h2>\n        </router-link>\n      </div>\n      <div class=\"form\" style=\"margin-top: 50px\" v-if=\"areAllowed\"> <!--areAllowed if workerInfos are allowed to-->\n        <h2>Проект не найден</h2>\n      </div>\n      <div v-else>\n        <v-taskEdit v-if='!isHidden' v-on:hide=\"isHidden = true\"\n                    :task=\"task\" :post=\"post_task\" :put=\"put_task\" :del=\"del_task\" :option=\"'project'\" :employes=\"this.project.workerInfos\"></v-taskEdit>\n        <div class=\"row\">\n          <input v-bind:disabled=\"!isManager\" type=\"text\" maxlength=\"30\" v-autowidth=\"{maxWidth: '700px', minWidth: '20px', comfortZone: 0}\"\n                 class=\"h1\" style=\"margin-right: 30px; margin-bottom: 0\"\n                 v-model=\"project.name\" v-on:input=\"changeName\" />\n        </div>\n        <div class=\"row\">\n          <div v-if=\"isManager\" @click=\"active = 0\" v-bind:class=\"[active === 0 ? 'button-g' : 'button-b']\">Задачи</div>\n          <div v-if=\"isManager\" @click=\"active = 1\" v-bind:class=\"[active === 1 ? 'button-g' : 'button-b']\">Статистика</div>\n          <div v-if=\"isManager\" @click=\"active = 2\" v-bind:class=\"[active === 2 ? 'button-g' : 'button-b']\">Команда</div>\n        </div>\n        <div v-if=\"content\" class=\"row\">\n          <h3>Упс, {{content}}</h3>\n        </div>\n        <!--Задачи-->\n        <div v-if=\"active === 0\">\n          <div class=\"column\">\n            <div class=\"row\" style=\"margin-bottom: 0\">\n              <input type=\"checkbox\" checked v-model=\"completed\"><h3>Выполненные</h3>\n              <input type=\"checkbox\" checked v-model=\"overdue\"><h3>Просроченные</h3>\n              <input type=\"checkbox\" checked v-model=\"inWork\"><h3>В работе</h3>\n            </div>\n            <div class=\"row\">\n              <h3 style=\"margin-right: 10px\">Показать с: </h3>\n              <input class=\"date\" type=\"date\" v-model=\"interval_start\" min=\"2015-01-01\" max=\"2030-01-01\"/>\n              <h3 style=\"margin-right: 10px\">до: </h3>\n              <input class=\"date\" type=\"date\" v-model=\"interval_end\" min=\"2015-01-01\" max=\"2030-01-01\"/>\n              <div class=\"button-g\" @click=\"interval_start=interval_end=''\">Сбросить</div>\n            </div>\n          </div>\n\n\n          <div class=\"row tasks\" ref=\"tasks\" style=\"align-items: flex-start\">\n            <div class=\"task-table\">\n              <div class=\"row-in-table\"><div class=\"task-in-table\"><h3>Поиск: </h3>\n                <input type=\"text\" maxlength=\"30\" v-autowidth=\"{maxWidth: '200px', minWidth: '100px', comfortZone: 0}\" v-model=\"findTask\" style=\"font-size:16px\"/></div>\n              </div>\n              <div class=\"row-in-table\" v-for=\"task in parents\" :key=\"task.id\">\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\"\n                     v-bind:class=\"[hover === task.id ? 'hover' : '']\" @mouseover='hover = task.id' @mouseout=\"hover = 0\">\n                  <div class=\"arrow-btn\" v-bind:class=\"[children(task).length === 0 ? 'hidden' : '','arrow-btn']\"\n                       v-bind:style=\"{transform: children_open(task).length === 0 ? 'rotate(0.0turn)' : 'rotate(0.25turn)'}\"\n                       @click=\"open(task)\"></div>\n                    <div class=\"task-in-table\" @click=\"openEdit(task)\">\n                      <div>\n                        {{ task.taskName }}\n                      </div>\n                    </div>\n                    <div v-if=\"isManager\" class=\"plus-btn\" @click=\"openEdit({parent: task})\" data-content=\"Добавить подзадачу\"></div>\n\n                </div>\n                <div class=\"task-in-table subtask-in-table\" v-for=\"child_task in children_open(task) \" :key=\"child_task.id\"\n                     v-bind:class=\"[hover === child_task.id ? 'hover' : '']\" @mouseover='hover = child_task.id' @mouseout=\"hover = 0\"\n                     @click=\"openEdit(child_task)\">\n                  {{child_task.taskName}}\n                </div>\n              </div>\n              <div v-if=\"isManager\" class=\"button-s\" @click=\"openEdit(0)\"\n                   style=\"width: auto; margin-right: 0px; margin-left: -1px; border-radius: 0 0 0 5px;\">\n                Добавить задачу\n              </div>\n            </div>\n            <horizontal-scroll class=\"horizontal-scroll\" ref=\"table\" v-bind:style=\"{height: tableHeight + 'px'}\">\n              <div class=\"table\" v-bind:style=\"{width: tableWidth + 'px'}\">\n\n                <div class=\"main-table-row\"><div class=\"table-row\">\n                  <div v-bind:class=\"[date.title == 'Задач не найдено' ? 'row' : 'dates']\" v-for=\"date in datesList\" :key=\"date.id\">\n                    {{ date.title }}\n                    <div>\n                      <div style=\"width: 40px\" v-for=\"day in date.days\" :key=\"day\">{{day}}</div>\n                    </div>\n                  </div>\n                </div></div>\n                <div class=\"main-table-row\" v-for=\"task in parents\" :key=\"task.id\">\n                  <div class=\"table-row\" v-bind:class=\"[hover === task.id ? 'hover' : '']\" @mouseover='hover = task.id' @mouseout=\"hover = 0\">\n                    <div class=\"table-task\" v-bind:style=\"taskProps(task)\" @click=\"openEdit(task)\">{{ task.taskName }}</div>\n                  </div>\n                  <div class=\"table-row table-subrow\" v-for=\"child_task in children_open(task) \" :key=\"child_task.id\"\n                       v-bind:class=\"[hover === child_task.id ? 'hover' : '']\" @mouseover='hover = child_task.id' @mouseout=\"hover = 0\">\n                    <div class=\"table-task\" v-bind:style=\"taskProps(child_task)\" @click=\"openEdit(child_task)\">{{ child_task.taskName }}</div>\n                  </div>\n                </div>\n              </div>\n            </horizontal-scroll>\n          </div>\n        </div>\n        <!--Статистика-->\n        <div v-else-if=\"active === 1\">\n          <v-stat :project=\"project\"></v-stat>\n        </div>\n        <!--Команда-->\n        <div v-else>\n          <div v-if=\"isManager\">\n            <div class=\"row\"><h2 style=\"margin-bottom: 5px\">Приглашения</h2></div>\n            <v-invRow v-for=\"user in project.invitations\" :key=\"user.id\" :user=\"user\" :action=\"delInv\"></v-invRow>\n\n            <div class=\"row\">\n              <div class=\"column\">\n                <input class=\"select\" type=\"text\" maxlength=\"50\" v-autowidth=\"{maxWidth: '400px', minWidth: '300px', comfortZone: 0}\"\n                       v-model=\"findUser\" v-on:input=\"findUsers\" />\n                <select class=\"select\" v-model=\"selected\" multiple v-bind:size=\"users.length > 0 ? users.length < 6 ? users.length : 5: 1\" style=\"margin-top: -2px\">\n                  <option v-for=\"user in users\" :key=\"user.id\">{{user.username}} - {{user.email}}</option>\n                </select>\n              </div>\n              <div class=\"button-b\" style=\"width: auto\" @click=\"addInv\">Пригласить {{selected[0]}}</div>\n            </div>\n          </div>\n          <h2>Сотрудники</h2>\n          <input class=\"select\" type=\"text\" maxlength=\"50\" v-autowidth=\"{maxWidth: '400px', minWidth: '300px', comfortZone: 0}\" v-model=\"sortM\"/>\n          <div class=\"row\" v-for=\"workerInfo in workerInfos\" :key=\"workerInfo.id\">\n            <div class=\"task\" style=\"cursor: auto\">{{workerInfo.username}} - {{workerInfo.email}}</div>\n            <div class=\"button-r\" @click=\"delWorker(workerInfo)\">Удалить</div>\n          </div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\nimport InvRow from \"@/views/components/InvRow\";\nimport TaskEdit from \"@/views/components/TaskEdit\";\nimport Stat from \"@/views/components/Stat\";\nimport HorizontalScroll from 'vue-horizontal-scroll'\nimport 'vue-horizontal-scroll/dist/vue-horizontal-scroll.css'\n\n\nexport default {\n  name: 'Projects',\n  data() {\n    return {\n      content: '',\n      active: 0,\n      hover: 0,\n\n      completed: true,\n      overdue: true,\n      inWork: true,\n      findTask: '',\n      interval_start: '',\n      interval_end: '',\n\n      tasks:[],\n      task:{},\n      openParents: [],\n      isHidden: true,\n\n\n      selected: [],\n      findUser: '',\n      users: [],\n\n      project: {\n        owner: {},\n        managers: [],\n        workerInfos: [],\n        invitations: [],\n      },\n\n      sortW: '',\n      sortM: ''\n    };\n  },\n  components:{\n    'v-invRow' : InvRow,\n    'horizontal-scroll' : HorizontalScroll,\n    'v-taskEdit' : TaskEdit,\n    'v-stat' : Stat\n  },\n  computed: {\n    parents(){\n      if (!this.project.tasks) return [];\n      return this.project.tasks.filter(item => (!item.parent))\n          .filter(item =>\n              (!this.interval_start || new Date(item.task_start).getTime() >= new Date(this.interval_start).getTime()) &&\n              (!this.interval_end || new Date(item.task_end).getTime() <= new Date(this.interval_end).getTime())\n          )\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1})\n          .filter(item=>item.taskName.toLowerCase().includes(this.findTask.toLowerCase()))\n          .filter(item => ((this.completed || !item.taskComplete) && (this.overdue || item.taskComplete || new Date(item.task_end).getTime() > new Date().getTime()) && (this.inWork || item.taskComplete || new Date(item.task_end).getTime() < new Date().getTime())));\n    },\n    children_task(){\n      return this.project.tasks.filter(item => (item.parent))\n          .filter(item => ((this.completed || !item.taskComplete) && (this.overdue || item.taskComplete || new Date(item.task_end).getTime() > new Date().getTime()) && (this.inWork || item.taskComplete || new Date(item.task_end).getTime() < new Date().getTime())))\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1});\n    },\n    /*\n    items () {\n      return this.project.workerInfos.map(function (item) {\n        return {user: item, list: 1}\n      }).concat(this.project.managers.map(function (item) {\n        return {user: item, list: 2}\n      }))\n    },\n    listOne () {\n      return this.items.filter(item => (item.list === 1 && (item.user.username.toLowerCase().includes(this.sortW.toLowerCase()) || item.user.email.toLowerCase().includes(this.sortW.toLowerCase()) )))\n    },\n    listTwo () {\n      return this.items.filter(item => (item.list === 2 && (item.user.username.toLowerCase().includes(this.sortM.toLowerCase()) || item.user.email.toLowerCase().includes(this.sortM.toLowerCase()) )))\n    },\n    */\n    workerInfos(){\n      return this.project.workerInfos.filter(item => (item.username.toLowerCase().includes(this.sortM.toLowerCase()) || item.email.toLowerCase().includes(this.sortM.toLowerCase()) ));\n    },\n    minDate(){\n      return this.parents.length > 0 ? (new Date(this.parents.reduce(function (p, v) {\n        return ( p < v.task_start ? p : v.task_start );\n      }, this.parents[0].task_start))) : 0;\n    },\n    maxDate(){\n      let res = this.parents.length > 0 ? (new Date(this.parents.reduce(function (p, v) {\n        return ( p > v.task_end ? p : v.task_end );\n      }, this.parents[0].task_end))) : 0;\n\n      let buf = 0;\n      if (this.$refs.tasks && res){\n        buf = this.$refs.tasks.clientWidth * 0.7;\n        buf = (buf - buf % 40) / 40;\n        buf -= (res.getTime() - this.minDate.getTime())/86400000;\n        if (buf>0) res.setTime(res.getTime()+buf*86400000);\n      }\n\n      return res;\n    },\n    tableHeight(){\n      return  50*(1+this.parents.length)+ this.openParents.reduce(function (p, v) {\n        return ( v.isOpen && this.parents.find(item => item.id === v.id) ? p+=(this.children_task.filter(item => (item.parent.id === v.id)).length) : p );\n      }.bind(this), 0)*30+17;\n    },\n    tableWidth(){\n      return (((this.maxDate- this.minDate)/86400000+1)*40);\n    },\n    taskProps(){\n      return task => ({\n        width: ((new Date(task.task_end) - new Date(task.task_start))/86400000+1)*40-30 + 'px',\n        left: ((new Date(task.task_start) - this.minDate)/86400000)*40 + 'px',\n        background: task.taskComplete ? '#66cdaa' : (new Date(task.task_end) < new Date() ? '#FF7373' : '#6c7bfe')\n      });\n    },\n    datesList(){\n      if (this.minDate === 0) return [{id: 1, title: 'Задач не найдено', days: []}]\n      let res=[]\n      let id = 1;\n      let i = new Date(this.minDate);\n      for (i; i <= this.maxDate; i.setDate(i.getDate() + 1)) {\n        let obj = {id: 1, title: '', days: []}\n        obj.title = i.toLocaleString('ru', {month: 'short'});\n        if (new Date().getFullYear() != i.getFullYear()) obj.title+=i.getFullYear()\n        while (i <= this.maxDate){\n          obj.days.push(i.getDate());\n          if (i.getDay() === 0) break;\n          i.setDate(i.getDate() + 1);\n        }\n        obj.id = id;\n        id+=1;\n        res.push(obj);\n        //res.push(Object.assign({}, obj));\n      }\n\n      return res;\n    },\n\n    formatDate() {\n      return date => {\n        let formDate = new Date(date);\n        let dd = formDate.getDate();\n        if (dd < 10) dd = '0' + dd;\n        let mm = formDate.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        let yy = formDate.getFullYear();\n        if (yy < 10) yy = '0' + yy;\n        return  yy + '-' + mm + '-' + dd;\n      }\n\n    },\n\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isWorker(){\n      return this.project.workerInfos.findIndex(item => item.id === this.currentUser.id)>=0\n    },\n    isManager(){\n      return this.isUserManager || this.isUserAdmin;\n    },\n    areAllowed(){\n      return !(this.isManager || this.isWorker);\n    },\n    isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n      return false;\n    },\n    isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n      return false;\n    }\n  },\n  mounted() {\n    UserService.getProject(this.$route.params.id).then(\n      response => {\n        this.project = response.data;\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    /*\n    startDrag(evt, item) {\n      if (!this.isManager) return;\n      evt.dataTransfer.dropEffect = 'move'\n      evt.dataTransfer.effectAllowed = 'move'\n      evt.dataTransfer.setData('itemID', item.user.id)\n\n    },\n    onDrop (evt, list) {\n      if (!this.isManager) return;\n      const itemID = evt.dataTransfer.getData('itemID')\n      const item = this.items.find(item => item.user.id == itemID)\n      if (list === 3){\n        if (this.project.workerInfos.find(i => i.id == itemID)){\n          this.project.workerInfos.splice(this.project.workerInfos.findIndex(i => i.id == itemID),1)\n        } else {\n          this.project.managers.splice(this.project.managers.findIndex(i => i.id == itemID),1)\n        }\n        UserService.changeUsers(this.project).then(\n            response => {\n              response.data;//not used yet\n            },\n            error => {\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        );\n      } else if(item.list != list) {\n        if (this.project.workerInfos.find(i => i.id == itemID)){\n          this.project.managers.push(this.project.workerInfos.splice(this.project.workerInfos.findIndex(i => i.id == itemID),1)[0])\n        } else{\n          this.project.workerInfos.push(this.project.managers.splice(this.project.managers.findIndex(i => i.id == itemID),1)[0])\n        }\n        UserService.changeUsers(this.project).then(\n            response => {\n              response.data;//not used yet\n            },\n            error => {\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        );\n      }\n    },\n    */\n    delWorker(workerInfo){\n      if (!this.isManager) return;\n      this.project.workerInfos.splice(this.project.workerInfos.findIndex(i => i.id == workerInfo.id),1)\n      UserService.changeUsers(this.project).then(\n          response => {\n            response.data;//not used yet\n          },\n          error => {\n            this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    },\n    open(task){\n      let parent = this.openParents.find(item => item.id === task.id);\n      if (parent) {\n        parent.isOpen = !parent.isOpen;\n        this.openParents.splice(this.openParents.findIndex(item => item.id === parent.id), 1, parent);\n      } else {\n        this.openParents.push({id: task.id, isOpen: true})\n      }\n    },\n    children(parent){\n      return this.children_task.filter(item => (item.parent.id === parent.id))\n    },\n    children_open(parent){\n      if (this.openParents.find(item => item.id === parent.id) &&\n          this.openParents.find(item => item.id === parent.id).isOpen){\n        return this.children(parent);\n      }\n      else return [];\n    },\n\n    changeName(){\n      if (!this.isManager) return;\n      UserService.changeProjectName(this.project).then(\n          response => {\n            response.data;//not used yet\n          },\n          error => {\n            this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    },\n    findUsers(){\n      if (this.findUser){\n        UserService.getUsersByEmail(this.findUser).then(\n            response => {\n              //if (response.data.findIndex(item => item.email === this.currentUser.email) >= 0){response.data.splice(response.data.findIndex(item => item.email === this.currentUser.email),1)}\n              this.users = response.data.filter( function( el ) {\n                return (this.project.workerInfos.findIndex(item => item.id === el.id) < 0  &&  this.project.invitations.findIndex(item => item.id === el.id) < 0);\n              }, this);\n              this.selected = [];\n            },\n            error => {//probably not needed\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        ).catch(e => {\n          // eslint-disable-next-line no-console\n          console.log(e);\n        });\n      } else{\n        this.users = [];\n      }\n    },\n    addInv(){\n      if (!this.isManager) return;\n      if (this.selected[0]){\n        // eslint-disable-next-line no-console\n        console.log(this.selected[0]);\n        this.project.invitations.push(this.users[this.users.findIndex(item => item.email === this.selected[0].split(' - ')[1])]);\n        this.findUsers();\n        UserService.changeInvitation(this.project).then(\n            response => {\n              response.data;//not used yet\n              this.message = 'Приглашение добавлено!'\n            },\n            error => {\n              this.message =\n                  (error.response && error.response.data && error.response.data.message) ||\n                  error.message ||\n                  error.toString();\n            }\n        );\n      }\n    },\n    delInv(user){\n      if (!this.isManager) return;\n      this.project.invitations.splice(this.project.invitations.findIndex(item => item.id === user.id),1);\n      UserService.changeInvitation(this.project).then(\n          response => {\n            response.data;//not used yet\n            this.message = 'Приглашение удалено!'\n          },\n          error => {\n            this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    },\n    //                        task update\n    //                        task update\n    //                        task update\n    openEdit(task){\n      if (task === 0) {this.task = {}}\n      else {\n        this.task = {}\n        Object.assign(this.task, task);\n      }\n      this.isHidden = false;\n\n    },\n    post_task(task){\n      this.project.tasks.push(task);\n      Object.assign(this.task, task);\n      if (task.parent && !task.taskComplete) this.parents.find(item => item.id == task.parent.id).taskComplete = false;\n      this.task_update('Задача добавлена');\n    },\n    put_task(task){\n      this.project.tasks.splice(this.project.tasks.findIndex(item => item.id == task.id), 1, task); //because otherwise computed property doesnt recomputed\n\n      if (this.children(task).length > 0){\n        this.children(task).forEach(item => {\n          if (task.taskComplete) item.taskComplete = true;\n          if (this.formatDate(task.task_start) > this.formatDate(item.task_end) || this.formatDate(task.task_end) < this.formatDate(item.task_start)) {\n            this.del_task(item);\n          } else {\n            if (this.formatDate(task.task_start) > this.formatDate(item.task_start)) item.task_start = task.task_start;\n            if (this.formatDate(task.task_end) < this.formatDate(item.task_end)) item.task_end = task.task_end;\n          }\n          item.parent = task;\n        })\n      } else {\n        if (task.parent && !task.taskComplete) this.parents.find(item => item.id == task.parent.id).taskComplete = false;\n      }\n\n      this.task_update('Задача добавлена');\n    },\n    del_task(task){\n      this.project.tasks.splice(this.project.tasks.findIndex(item => item.id === task.id),1);\n    },\n    task_update(message){\n      UserService.changeTasks(this.project).then(\n          response => {\n            response.data;//not used yet\n            this.message = message;\n          },\n          error => {\n            this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    }\n  }\n};\n</script>\n\n"],"sourceRoot":"src/views"}]}