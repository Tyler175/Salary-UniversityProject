{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\eslint-loader\\index.js??ref--13-0!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\services\\user.service.js","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\services\\user.service.js","mtime":1638191214949},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\eslint-loader\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import _classCallCheck from \"C:/University/SoftDevTech/Salary/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:/University/SoftDevTech/Salary/frontend/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport axios from 'axios';\nimport authHeader from \"./auth-header\";\nvar API_URL = 'http://localhost:8080/api/';\n\nvar UserService = /*#__PURE__*/function () {\n  function UserService() {\n    _classCallCheck(this, UserService);\n  }\n\n  _createClass(UserService, [{\n    key: \"getAllUsers\",\n    value: function getAllUsers() {\n      return axios.get(API_URL + 'users', {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"getUser\",\n    value: function getUser(user_id) {\n      return axios.get(API_URL + 'users/' + user_id, {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"getUsersByName\",\n    value: function getUsersByName(name) {\n      return axios.get(API_URL + 'users', {\n        headers: authHeader(),\n        params: {\n          name: name\n        }\n      });\n    }\n  }, {\n    key: \"uploadProfilePicture\",\n    value: function uploadProfilePicture(user_id, profilePicture) {\n      var header = {\n        \"Content-Type\": \"multipart/form-data\"\n      };\n      header.Authorization = authHeader().Authorization;\n      return axios.post(API_URL + 'users/upload/' + user_id, profilePicture, {\n        headers: header\n      });\n    }\n  }, {\n    key: \"changePassword\",\n    value: function changePassword(user_id, oldPassword, newPassword) {\n      return axios.put(API_URL + 'users/' + user_id + '/' + oldPassword, {\n        \"password\": newPassword\n      }, {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"changeUser\",\n    value: function changeUser(userId, user) {\n      user.password = 'password';\n      return axios.put(API_URL + 'users/' + userId, user, {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"deleteUser\",\n    value: function deleteUser(userId) {\n      return axios.delete(API_URL + 'users/' + userId, {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"getAbsences\",\n    value: function getAbsences(userId, position, startDate, endDate) {\n      return axios.get(API_URL + 'users/absences', {\n        headers: authHeader(),\n        params: {\n          userId: userId,\n          position: position,\n          startDate: startDate,\n          endDate: endDate\n        }\n      });\n    }\n  }, {\n    key: \"deleteAbsence\",\n    value: function deleteAbsence(absenceId) {\n      return axios.delete(API_URL + 'users/absences/' + absenceId, {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"getPositions\",\n    value: function getPositions() {\n      return axios.get(API_URL + 'positions', {\n        headers: authHeader()\n      });\n    }\n  }, {\n    key: \"getSalary\",\n    value: function getSalary(month) {\n      return axios.get(API_URL + 'salary', {\n        headers: authHeader(),\n        params: {\n          month: month\n        }\n      });\n    }\n  }, {\n    key: \"getBudget\",\n    value: function getBudget(month) {\n      return axios.get(API_URL + 'salary/budget', {\n        headers: authHeader(),\n        params: {\n          month: month\n        }\n      });\n    }\n  }, {\n    key: \"changeAwards\",\n    value: function changeAwards(user) {\n      return axios.put(API_URL + 'salary/awards', user, {\n        headers: authHeader()\n      });\n    }\n  }]);\n\n  return UserService;\n}();\n\nexport default new UserService();",{"version":3,"sources":["C:/University/SoftDevTech/Salary/frontend/src/services/user.service.js"],"names":["axios","authHeader","API_URL","UserService","get","headers","user_id","name","params","profilePicture","header","Authorization","post","oldPassword","newPassword","put","userId","user","password","delete","position","startDate","endDate","absenceId","month"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport authHeader from './auth-header';\n\nconst API_URL = 'http://localhost:8080/api/';\n\nclass UserService {\n  getAllUsers(){\n    return axios.get(API_URL + 'users', {headers: authHeader()});\n  }\n  getUser(user_id) {\n    return axios.get(API_URL + 'users/' + user_id, { headers: authHeader() });\n  }\n  getUsersByName(name){\n    return axios.get(API_URL + 'users', {headers: authHeader(), params:{name: name}});\n  }\n  uploadProfilePicture(user_id, profilePicture){\n    let header = {\n      \"Content-Type\": \"multipart/form-data\"\n    };\n    header.Authorization = authHeader().Authorization;\n    return axios.post(API_URL + 'users/upload/' + user_id, profilePicture, {headers: header});\n  }\n  changePassword(user_id, oldPassword, newPassword){\n    return axios.put(API_URL + 'users/' + user_id + '/' + oldPassword, {\"password\" : newPassword}, { headers: authHeader() });\n  }\n  changeUser(userId, user){\n    user.password = 'password';\n    return axios.put(API_URL + 'users/' + userId, user, { headers: authHeader() });\n  }\n  deleteUser(userId){\n    return axios.delete(API_URL + 'users/' + userId, {headers: authHeader()});\n  }\n\n\n  getAbsences(userId, position, startDate, endDate){\n    return axios.get(API_URL + 'users/absences', {headers: authHeader(), params:{userId: userId, position: position, startDate: startDate, endDate: endDate}});\n  }\n  deleteAbsence(absenceId){\n    return axios.delete(API_URL + 'users/absences/'+absenceId, {headers: authHeader()});\n  }\n\n  getPositions(){\n    return axios.get(API_URL + 'positions', { headers: authHeader() });\n  }\n\n  getSalary(month){\n    return axios.get(API_URL + 'salary', {headers: authHeader(), params:{month: month}});\n  }\n  getBudget(month){\n    return axios.get(API_URL + 'salary/budget', {headers: authHeader(), params:{month: month}});\n  }\n  changeAwards(user){\n    return axios.put(API_URL + 'salary/awards', user,{headers: authHeader()})\n  }\n\n}\n\nexport default new UserService();\n"]}]}