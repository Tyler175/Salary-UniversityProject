{"remainingRequest":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue","mtime":1634772343670},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.string.starts-with\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserService from \"../../services/user.service\";\nexport default {\n  name: 'TaskEdit',\n  props: ['task', 'post', 'put', 'del', 'option', 'employes'],\n  data: function data() {\n    return {\n      message: '',\n      start: '',\n      end: '',\n      workerInfos: [],\n      plans: [],\n      isManager: false,\n      findUser: ''\n    };\n  },\n  computed: {\n    allowToEdit: function allowToEdit() {\n      return !(this.isManager && this.option != 'view');\n    },\n    currentUser: function currentUser() {\n      return this.$store.state.auth.user;\n    },\n    findUsers: function findUsers() {\n      var _this = this;\n\n      if (this.findUser) {\n        return this.employes.filter(function (i) {\n          return (i.email.toLowerCase().startsWith(_this.findUser.toLowerCase()) || i.username.toLowerCase().startsWith(_this.findUser.toLowerCase())) && _this.workerInfos.findIndex(function (item) {\n            return item.id === i.id;\n          }) < 0;\n        });\n      } else {\n        return [];\n      }\n    },\n    formatDate: function formatDate() {\n      return function (date) {\n        var formDate = new Date(date);\n        var dd = formDate.getDate();\n        if (dd < 10) dd = '0' + dd;\n        var mm = formDate.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        var yy = formDate.getFullYear();\n        if (yy < 10) yy = '0' + yy;\n        return yy + '-' + mm + '-' + dd;\n      };\n    },\n    task_start: {\n      get: function get() {\n        return this.formatDate(this.start);\n      },\n      set: function set(value) {\n        this.start = value;\n      }\n    },\n    task_end: {\n      get: function get() {\n        return this.formatDate(this.end);\n      },\n      set: function set(value) {\n        this.end = value;\n      }\n    },\n    dateCompare: function dateCompare() {\n      if (this.end && this.start) {\n        if (this.end < this.start) return 'Задача не может начинаться раньше конца';\n\n        if (this.task.parent) {\n          if (this.formatDate(this.task.parent.task_start) > this.formatDate(this.start)) return 'Подзадача не может начинаться раньше основной';\n          if (this.formatDate(this.task.parent.task_end) < this.formatDate(this.end)) return 'Подзадача не может заканчиваться позже основной';\n        }\n\n        return '';\n      } else return '';\n    }\n  },\n  mounted: function mounted() {\n    var _this2 = this;\n\n    if (this.task.id) UserService.getEditPermissions(this.task.id).then(function (response) {\n      _this2.isManager = response.data;\n    }, function (error) {\n      _this2.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });else this.isManager = true;\n    this.start = this.task.task_start ? this.task.task_start : this.formatDate(new Date());\n    this.end = this.task.task_end ? this.task.task_end : this.formatDate(new Date());\n    this.workerInfos = this.task.workerInfos ? this.task.workerInfos : [];\n    this.plans = this.task.plans ? this.task.plans : [];\n  },\n  methods: {\n    changePlan: function changePlan(plan) {\n      UserService.putPlan(plan, this.task);\n    },\n    save: function save() {\n      var _this3 = this;\n\n      this.$validator.validateAll().then(function (isValid) {\n        if (isValid && !_this3.dateCompare) {\n          _this3.task.task_start = _this3.start;\n          _this3.task.task_end = _this3.end;\n          _this3.task.workerInfos = _this3.workerInfos;\n          _this3.task.plans = _this3.plans;\n          /*not necessary?*/\n\n          if (!_this3.task.task_start && !_this3.task.task_end) {\n            _this3.task.task_end = _this3.task.task_start = _this3.formatDate(new Date());\n          } else if (!_this3.task.task_start) {\n            _this3.task.task_start = _this3.task.task_end;\n          } else if (!_this3.task.task_end) {\n            _this3.task.task_end = _this3.task.task_start;\n          }\n\n          if (_this3.task.id) {\n            if (_this3.option != 'project' && _this3.task.workerInfos.length == 0) _this3.task.workerInfos = [_this3.currentUser];\n            UserService.putTask(_this3.task).then(function (response) {\n              _this3.put(response.data);\n\n              _this3.message = 'Задача сохранена!';\n            }, function (error) {\n              _this3.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n            });\n          } else {\n            if (_this3.option != 'project') _this3.task.workerInfos = [_this3.currentUser];\n            UserService.postTask(_this3.task).then(function (response) {\n              _this3.task.id = response.data.id;\n\n              _this3.post(response.data);\n\n              _this3.message = 'Задача сохранена!';\n            }, function (error) {\n              _this3.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n            });\n          }\n        } else _this3.message = 'Не удалось сохранить задачу';\n      });\n    },\n    delWorker: function delWorker(user) {\n      this.workerInfos.splice(this.workerInfos.findIndex(function (i) {\n        return i.id === user.id;\n      }), 1);\n      UserService.delPlan(this.plans.find(function (i) {\n        return i.id === user.id;\n      }));\n      this.plans.splice(this.plans.findIndex(function (i) {\n        return i.id === user.id;\n      }), 1);\n    },\n    addWorker: function addWorker(user) {\n      this.$set(this.workerInfos, this.workerInfos.length, user);\n      this.plans.push({\n        user: user,\n        plan: ''\n      });\n      UserService.postPlan({\n        user: user,\n        task: this.task,\n        plan: ''\n      });\n    },\n    deleteTask: function deleteTask() {\n      var _this4 = this;\n\n      if (this.task.id) {\n        UserService.delTask(this.task.id).then(function (response) {\n          _this4.del(_this4.task);\n\n          response.data;\n          _this4.message = 'Задача удалена!';\n\n          _this4.$emit('hide');\n        }, function (error) {\n          _this4.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n        });\n      }\n    }\n  }\n};",{"version":3,"sources":["TaskEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwEA,OAAA,WAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,UADA;AAEA,EAAA,KAAA,EAAA,CAAA,MAAA,EAAA,MAAA,EAAA,KAAA,EAAA,KAAA,EAAA,QAAA,EAAA,UAAA,CAFA;AAGA,EAAA,IAHA,kBAGA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,GAAA,EAAA,EAHA;AAIA,MAAA,WAAA,EAAA,EAJA;AAKA,MAAA,KAAA,EAAA,EALA;AAOA,MAAA,SAAA,EAAA,KAPA;AASA,MAAA,QAAA,EAAA;AATA,KAAA;AAWA,GAfA;AAgBA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,EAAA,KAAA,SAAA,IAAA,KAAA,MAAA,IAAA,MAAA,CAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,KANA;AAOA,IAAA,SAPA,uBAOA;AAAA;;AACA,UAAA,KAAA,QAAA,EAAA;AACA,eAAA,KAAA,QAAA,CAAA,MAAA,CAAA,UAAA,CAAA;AAAA,iBACA,CAAA,CAAA,CAAA,KAAA,CAAA,WAAA,GAAA,UAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA,EAAA,KAAA,CAAA,CAAA,QAAA,CAAA,WAAA,GAAA,UAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA,EAAA,CAAA,KACA,KAAA,CAAA,WAAA,CAAA,SAAA,CAAA,UAAA,IAAA;AAAA,mBAAA,IAAA,CAAA,EAAA,KAAA,CAAA,CAAA,EAAA;AAAA,WAAA,IAAA,CAFA;AAAA,SAAA,CAAA;AAIA,OALA,MAKA;AACA,eAAA,EAAA;AACA;AACA,KAhBA;AAiBA,IAAA,UAjBA,wBAiBA;AACA,aAAA,UAAA,IAAA,EAAA;AACA,YAAA,QAAA,GAAA,IAAA,IAAA,CAAA,IAAA,CAAA;AACA,YAAA,EAAA,GAAA,QAAA,CAAA,OAAA,EAAA;AACA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA;AACA,YAAA,EAAA,GAAA,QAAA,CAAA,QAAA,KAAA,CAAA;AACA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA;AACA,YAAA,EAAA,GAAA,QAAA,CAAA,WAAA,EAAA;AACA,YAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,MAAA,EAAA;AACA,eAAA,EAAA,GAAA,GAAA,GAAA,EAAA,GAAA,GAAA,GAAA,EAAA;AACA,OATA;AAWA,KA7BA;AA8BA,IAAA,UAAA,EAAA;AACA,MAAA,GAAA,EAAA,eAAA;AACA,eAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA;AACA,OAHA;AAIA,MAAA,GAAA,EAAA,aAAA,KAAA,EAAA;AACA,aAAA,KAAA,GAAA,KAAA;AACA;AANA,KA9BA;AAsCA,IAAA,QAAA,EAAA;AACA,MAAA,GADA,iBACA;AACA,eAAA,KAAA,UAAA,CAAA,KAAA,GAAA,CAAA;AACA,OAHA;AAIA,MAAA,GAJA,eAIA,KAJA,EAIA;AACA,aAAA,GAAA,GAAA,KAAA;AACA;AANA,KAtCA;AA8CA,IAAA,WA9CA,yBA8CA;AACA,UAAA,KAAA,GAAA,IAAA,KAAA,KAAA,EAAA;AACA,YAAA,KAAA,GAAA,GAAA,KAAA,KAAA,EAAA,OAAA,yCAAA;;AACA,YAAA,KAAA,IAAA,CAAA,MAAA,EAAA;AACA,cAAA,KAAA,UAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,UAAA,IAAA,KAAA,UAAA,CAAA,KAAA,KAAA,CAAA,EAAA,OAAA,+CAAA;AACA,cAAA,KAAA,UAAA,CAAA,KAAA,IAAA,CAAA,MAAA,CAAA,QAAA,IAAA,KAAA,UAAA,CAAA,KAAA,GAAA,CAAA,EAAA,OAAA,iDAAA;AACA;;AAAA,eAAA,EAAA;AACA,OANA,MAMA,OAAA,EAAA;AACA;AAtDA,GAhBA;AAwEA,EAAA,OAxEA,qBAwEA;AAAA;;AACA,QAAA,KAAA,IAAA,CAAA,EAAA,EAAA,WAAA,CAAA,kzFA;AA0FA,EAAA,OAAA,EAAA;AACA,IAAA,UADA,sBACA,IADA,EACA;AACA,MAAA,WAAA,CAAA,OAAA,CAAA,IAAA,EAAA,KAAA,IAAA;AACA,KAHA;AAIA,IAAA,IAJA,kBAIA;AAAA;;AACA,WAAA,UAAA,CAAA,WAAA,GAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,YAAA,OAAA,IAAA,CAAA,MAAA,CAAA,WAAA,EAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA,KAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,GAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,MAAA,CAAA,WAAA;AACA,UAAA,MAAA,CAAA,IAAA,CAAA,KAAA,GAAA,MAAA,CAAA,KAAA;AACA;;AACA,cAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA,UAAA,CAAA,IAAA,IAAA,EAAA,CAAA;AACA,WAFA,MAEA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,UAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,UAAA,GAAA,MAAA,CAAA,IAAA,CAAA,QAAA;AACA,WAFA,MAEA,IAAA,CAAA,MAAA,CAAA,IAAA,CAAA,QAAA,EAAA;AACA,YAAA,MAAA,CAAA,IAAA,CAAA,QAAA,GAAA,MAAA,CAAA,IAAA,CAAA,UAAA;AACA;;AAEA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,EAAA;AACA,gBAAA,MAAA,CAAA,MAAA,IAAA,SAAA,IAAA,MAAA,CAAA,IAAA,CAAA,WAAA,CAAA,MAAA,IAAA,CAAA,EAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,CAAA,MAAA,CAAA,WAAA,CAAA;AACA,YAAA,WAAA,CAAA,OAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,GAAA,CAAA,QAAA,CAAA,IAAA;;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,mBAAA;AACA,aAJA,EAKA,UAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,aAVA;AAYA,WAdA,MAcA;AACA,gBAAA,MAAA,CAAA,MAAA,IAAA,SAAA,EAAA,MAAA,CAAA,IAAA,CAAA,WAAA,GAAA,CAAA,MAAA,CAAA,WAAA,CAAA;AACA,YAAA,WAAA,CAAA,QAAA,CAAA,MAAA,CAAA,IAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,EAAA,GAAA,QAAA,CAAA,IAAA,CAAA,EAAA;;AACA,cAAA,MAAA,CAAA,IAAA,CAAA,QAAA,CAAA,IAAA;;AACA,cAAA,MAAA,CAAA,OAAA,GAAA,mBAAA;AACA,aALA,EAMA,UAAA,KAAA,EAAA;AACA,cAAA,MAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,aAXA;AAaA;AACA,SA5CA,MA4CA,MAAA,CAAA,OAAA,GAAA,6BAAA;AACA,OA9CA;AA+CA,KApDA;AAqDA,IAAA,SArDA,qBAqDA,IArDA,EAqDA;AACA,WAAA,WAAA,CAAA,MAAA,CAAA,KAAA,WAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA,EAAA,CAAA;AACA,MAAA,WAAA,CAAA,OAAA,CAAA,KAAA,KAAA,CAAA,IAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA;AACA,WAAA,KAAA,CAAA,MAAA,CAAA,KAAA,KAAA,CAAA,SAAA,CAAA,UAAA,CAAA;AAAA,eAAA,CAAA,CAAA,EAAA,KAAA,IAAA,CAAA,EAAA;AAAA,OAAA,CAAA,EAAA,CAAA;AACA,KAzDA;AA0DA,IAAA,SA1DA,qBA0DA,IA1DA,EA0DA;AACA,WAAA,IAAA,CAAA,KAAA,WAAA,EAAA,KAAA,WAAA,CAAA,MAAA,EAAA,IAAA;AACA,WAAA,KAAA,CAAA,IAAA,CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,MAAA,WAAA,CAAA,QAAA,CAAA;AAAA,QAAA,IAAA,EAAA,IAAA;AAAA,QAAA,IAAA,EAAA,KAAA,IAAA;AAAA,QAAA,IAAA,EAAA;AAAA,OAAA;AACA,KA9DA;AA+DA,IAAA,UA/DA,wBA+DA;AAAA;;AACA,UAAA,KAAA,IAAA,CAAA,EAAA,EAAA;AACA,QAAA,WAAA,CAAA,OAAA,CAAA,KAAA,IAAA,CAAA,EAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,UAAA,MAAA,CAAA,GAAA,CAAA,MAAA,CAAA,IAAA;;AACA,UAAA,QAAA,CAAA,IAAA;AACA,UAAA,MAAA,CAAA,OAAA,GAAA,iBAAA;;AACA,UAAA,MAAA,CAAA,KAAA,CAAA,MAAA;AACA,SANA,EAOA,UAAA,KAAA,EAAA;AACA,UAAA,MAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,SAZA;AAaA;AACA;AA/EA;AA1FA,CAAA","sourcesContent":["<template>\r\n  <div class=\"cover\">\r\n    <div class = \"editor\">\r\n      <input class=\"close\" type=\"button\" value=\"Х\" v-on:click=\"$emit('hide')\"/>\r\n      <div class = \"fields\" style=\"\">\r\n        <div class=\"row\"><h1>Название задачи</h1><input v-bind:disabled=\"allowToEdit\" class=\"check-mark\" type=\"checkbox\" v-model=\"task.taskComplete\"><h2>Готово</h2></div>\r\n        <input v-bind:disabled=\"allowToEdit\" type=\"text\" name=\"название\" v-model=\"task.taskName\" v-validate=\"'required|max:100'\"/>\r\n        <div\r\n            v-if=\"errors.has('название')\"\r\n            class=\"alert-error\"\r\n        >{{errors.first('название').replace('название ','')}}</div>\r\n      </div>\r\n      <div class = \"fields\" style=\"\">\r\n        <h3>Описание задачи</h3>\r\n        <textarea v-bind:disabled=\"allowToEdit\" v-model=\"task.task_description\"></textarea>\r\n      </div>\r\n      <div class = \"fields\" style=\"max-width: 600px; flex-direction: row;\">\r\n        <div style=\"width: 100%; margin-right: 30px\">\r\n          <h3>Начало</h3>\r\n          <input v-bind:disabled=\"allowToEdit\" type=\"date\" v-model=\"task_start\" min=\"2015-01-01\" max=\"2030-01-01\" style=\"height: 40px\"/>\r\n        </div>\r\n        <div style=\"width: 100%; margin-right: 30px\">\r\n          <h3>Конец</h3>\r\n          <input v-bind:disabled=\"allowToEdit\" type=\"date\" v-model=\"task_end\" min=\"2015-01-01\" max=\"2030-01-01\" style=\"height: 40px\"/>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"dateCompare\" class=\"alert-error\">{{dateCompare}}</div>\r\n      <div v-if=\"option === 'project'\" class=\"row\" style=\"align-items: flex-start\">\r\n        <div>\r\n          <div class=\"row\"><h2 style=\"margin:5px\">Исполнители</h2></div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <div v-if=\"workerInfos.length > 0\" class=\"select\">\r\n                <div v-for=\"user in workerInfos\" :key=\"user.id\" class=\"employes\" >\r\n                  <div>{{ user.username }} - {{ user.email }}</div>\r\n                  <div v-if=\"!allowToEdit\" class=\"cross2\" @click=\"delWorker(user)\">x</div>\r\n                </div>\r\n              </div>\r\n              <input v-bind:disabled=\"allowToEdit\" class=\"select\" type=\"text\" maxlength=\"50\" v-autowidth=\"{maxWidth: '700px', minWidth: '505px', comfortZone: 0}\"\r\n                     v-model=\"findUser\" />\r\n\r\n              <select v-if=\"findUsers.length > 0\" class=\"select\" multiple v-bind:size=\"findUsers.length > 0 ? findUsers.length < 6 ? findUsers.length : 5: 1\" style=\"margin-top: -2px\">\r\n                <option v-for=\"user in findUsers\" :key=\"user.id\" @click=\"addWorker(user)\">{{ user.username }} - {{ user.email }}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"row\"><h2 style=\"margin:5px\">План</h2> (часов)</div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <div v-for=\"plan in plans\" :key=\"plan.user.id\" >\r\n                <input v-bind:disabled=\"allowToEdit\" v-on:input=\"changePlan(plan)\" type=\"number\" class=\"select employes\" v-model=\"plan.plan\" style=\"border:none; width: 60%\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class = \"row\" v-if=\"!allowToEdit\">\r\n        <div class=\"button-g\" @click=\"save\">Сохранить</div>\r\n        <div class=\"button-b\" v-on:click=\"$emit('hide')\">Отменить</div>\r\n        <div class=\"button-r\"  @click=\"deleteTask\" v-if=\"task.id\">Удалить</div>\r\n      </div>\r\n      {{message}}\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport UserService from '../../services/user.service';\r\n\r\nexport default {\r\n  name: 'TaskEdit',\r\n  props: ['task','post','put','del', 'option', 'employes'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n      start: '',\r\n      end: '',\r\n      workerInfos: [],\r\n      plans: [],\r\n\r\n      isManager: false,\r\n\r\n      findUser: ''\r\n    };\r\n  },\r\n  computed: {\r\n    allowToEdit(){\r\n      return !((this.isManager) && this.option!='view');\r\n    },\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    findUsers(){\r\n      if (this.findUser){\r\n        return this.employes.filter(i => (\r\n            (i.email.toLowerCase().startsWith(this.findUser.toLowerCase()) || i.username.toLowerCase().startsWith(this.findUser.toLowerCase())) &&\r\n            this.workerInfos.findIndex(item => item.id === i.id)<0\r\n        ));\r\n      } else{\r\n        return [];\r\n      }\r\n    },\r\n    formatDate() {\r\n      return date => {\r\n        let formDate = new Date(date);\r\n        let dd = formDate.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n        let mm = formDate.getMonth() + 1;\r\n        if (mm < 10) mm = '0' + mm;\r\n        let yy = formDate.getFullYear();\r\n        if (yy < 10) yy = '0' + yy;\r\n        return  yy + '-' + mm + '-' + dd;\r\n      }\r\n\r\n    },\r\n    task_start: {\r\n      get: function () {\r\n        return this.formatDate(this.start);\r\n      },\r\n      set: function (value) {\r\n        this.start = value;\r\n      }\r\n    },\r\n    task_end: {\r\n      get() {\r\n        return this.formatDate(this.end);\r\n      },\r\n      set(value) {\r\n        this.end = value;\r\n      }\r\n    },\r\n    dateCompare(){\r\n      if (this.end && this.start) {\r\n        if (this.end < this.start) return 'Задача не может начинаться раньше конца';\r\n        if(this.task.parent){\r\n          if (this.formatDate(this.task.parent.task_start) > this.formatDate(this.start)) return 'Подзадача не может начинаться раньше основной';\r\n          if (this.formatDate(this.task.parent.task_end) < this.formatDate(this.end)) return 'Подзадача не может заканчиваться позже основной';\r\n        } return '';\r\n      } else return ''\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.task.id) UserService.getEditPermissions(this.task.id).then(\r\n        response => {\r\n          this.isManager = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        });\r\n    else this.isManager = true;\r\n    this.start = this.task.task_start ? this.task.task_start : this.formatDate(new Date());\r\n    this.end = this.task.task_end ? this.task.task_end : this.formatDate(new Date());\r\n    this.workerInfos = this.task.workerInfos ? this.task.workerInfos : [];\r\n    this.plans = this.task.plans ? this.task.plans : [];\r\n\r\n  },\r\n  methods: {\r\n    changePlan(plan){\r\n      UserService.putPlan(plan, this.task);\r\n    },\r\n    save(){\r\n      this.$validator.validateAll().then(isValid => {\r\n        if (isValid && !this.dateCompare) {\r\n          this.task.task_start = this.start;\r\n          this.task.task_end = this.end;\r\n          this.task.workerInfos = this.workerInfos;\r\n          this.task.plans = this.plans;\r\n          /*not necessary?*/\r\n          if (!this.task.task_start && !this.task.task_end) {\r\n            this.task.task_end = this.task.task_start = this.formatDate(new Date());\r\n          } else if (!this.task.task_start) {\r\n            this.task.task_start = this.task.task_end\r\n          } else if (!this.task.task_end) {\r\n            this.task.task_end = this.task.task_start\r\n          }\r\n\r\n          if (this.task.id){\r\n            if (this.option != 'project' && this.task.workerInfos.length == 0)  this.task.workerInfos = [this.currentUser];\r\n            UserService.putTask(this.task).then(\r\n                response => {\r\n                  this.put(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          } else{\r\n            if (this.option != 'project') this.task.workerInfos = [this.currentUser];\r\n            UserService.postTask(this.task).then(\r\n                response => {\r\n                  this.task.id = response.data.id;\r\n                  this.post(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          }\r\n        } else this.message = 'Не удалось сохранить задачу'\r\n      });\r\n    },\r\n    delWorker(user){\r\n      this.workerInfos.splice(this.workerInfos.findIndex(i => i.id === user.id),1);\r\n      UserService.delPlan(this.plans.find(i => i.id === user.id));\r\n      this.plans.splice(this.plans.findIndex(i => i.id === user.id),1);\r\n    },\r\n    addWorker(user){\r\n      this.$set(this.workerInfos, this.workerInfos.length, user);\r\n      this.plans.push({user: user, plan: ''});\r\n      UserService.postPlan({user: user, task: this.task, plan: ''});\r\n    },\r\n    deleteTask(){\r\n      if (this.task.id){\r\n        UserService.delTask(this.task.id).then(\r\n            response => {\r\n              this.del(this.task);\r\n              response.data;\r\n              this.message = 'Задача удалена!'\r\n              this.$emit('hide');\r\n            },\r\n            error => {\r\n              this.message =\r\n                  (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message ||\r\n                  error.toString();\r\n            }\r\n        );}\r\n    }\r\n  }\r\n};\r\n</script>"],"sourceRoot":"src/views/components"}]}