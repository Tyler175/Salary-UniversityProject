{"remainingRequest":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Profile.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Profile.vue","mtime":1637240872677},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es6.function.name\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserService from \"../services/user.service\";\nimport Menu from \"@/views/components/Menu\";\nimport Header from \"@/views/components/Header\";\nimport DatePicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\nimport 'vue2-datepicker/locale/es/ru.js';\nexport default {\n  name: 'Profile',\n  data: function data() {\n    return {\n      message: '',\n      about: '',\n      user: {\n        id: '',\n        email: '',\n        firstName: '',\n        lastName: '',\n        patronymic: '',\n        birthday: new Date(),\n        gender: false,\n        profilePicture: ''\n      },\n      selectedProfilePicture: null,\n      passwordFocus: false,\n      oldPassword: '',\n      newPassword: '',\n      checkedPassword: '',\n      response: ''\n    };\n  },\n  components: {\n    DatePicker: DatePicker,\n    'v-menu': Menu,\n    'v-header': Header\n  },\n  computed: {\n    currentUser: function currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin: function isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserAccountant: function isUserAccountant() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ACCOUNTANT');\n      }\n\n      return false;\n    },\n    hasRole: function hasRole() {\n      if (this.currentUser.roles.includes('ROLE_ADMIN')) return 'Администратор';\n      if (this.currentUser.roles.includes('ROLE_ACCOUNTANT')) return 'Бухгалтер';\n      if (this.currentUser.roles.includes('ROLE_USER')) return 'Сотрудник';\n      return 0;\n    },\n    notSamePasswords: function notSamePasswords() {\n      if (this.newPassword !== '' && this.checkedPassword !== '') {\n        return this.newPassword !== this.checkedPassword;\n      } else {\n        return false;\n      }\n    }\n  },\n  methods: {\n    onImageSelected: function onImageSelected(event) {\n      var formData = new FormData();\n      var file = event.target.files[0];\n      formData.append(\"profilePicture\", file, file.name);\n      console.log(file);\n      console.log(formData);\n      UserService.uploadProfilePicture(this.currentUser.id, formData).then(function (response) {\n        console.log('ok');\n        console.log(response);\n      }, function (error) {\n        console.log(error);\n      });\n    },\n    deactivateFocus: function deactivateFocus() {\n      this.passwordFocus = false;\n    },\n    changePassword: function changePassword() {\n      var _this = this;\n\n      this.passwordFocus = true;\n\n      if (!this.notSamePasswords && this.newPassword !== '' && this.checkedPassword !== '') {\n        this.$validator.validate().then(function (isValid) {\n          if (isValid && !_this.newPassword.includes(' ')) {\n            UserService.isPasswordCorrect(_this.oldPassword).then(function (response) {\n              if (response.data) {\n                UserService.changePassword(_this.currentUser.id, _this.oldPassword, _this.newPassword).then(function () {\n                  _this.response = 'Пароль был изменен';\n                });\n              } else _this.response = 'Неверный старый пароль';\n            });\n          }\n        });\n      } else this.response = 'Заполните все поля';\n    },\n    changeAbout: function changeAbout() {\n      var _this2 = this;\n\n      UserService.changeAbout(this.currentUser.id, this.about).then(function (response) {\n        response.data;\n      }, function (error) {\n        _this2.message = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    logOut: function logOut() {\n      this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    }\n  },\n  mounted: function mounted() {\n    var _this3 = this;\n\n    UserService.getUser(this.currentUser.id).then(function (response) {\n      // eslint-disable-next-line no-console\n      //console.log(response.data);\n      _this3.user = response.data;\n      _this3.user.birthday = new Date(response.data.birthday);\n    }, function (error) {\n      _this3.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  }\n};",{"version":3,"sources":["Profile.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0GA,OAAA,WAAA;AACA,OAAA,IAAA,MAAA,yBAAA;AACA,OAAA,MAAA,MAAA,2BAAA;AAEA,OAAA,UAAA,MAAA,iBAAA;AACA,OAAA,2BAAA;AACA,OAAA,iCAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,SADA;AAEA,EAAA,IAFA,kBAEA;AACA,WAAA;AACA,MAAA,OAAA,EAAA,EADA;AAEA,MAAA,KAAA,EAAA,EAFA;AAGA,MAAA,IAAA,EAAA;AACA,QAAA,EAAA,EAAA,EADA;AAEA,QAAA,KAAA,EAAA,EAFA;AAGA,QAAA,SAAA,EAAA,EAHA;AAIA,QAAA,QAAA,EAAA,EAJA;AAKA,QAAA,UAAA,EAAA,EALA;AAMA,QAAA,QAAA,EAAA,IAAA,IAAA,EANA;AAOA,QAAA,MAAA,EAAA,KAPA;AAQA,QAAA,cAAA,EAAA;AARA,OAHA;AAcA,MAAA,sBAAA,EAAA,IAdA;AAgBA,MAAA,aAAA,EAAA,KAhBA;AAkBA,MAAA,WAAA,EAAA,EAlBA;AAmBA,MAAA,WAAA,EAAA,EAnBA;AAoBA,MAAA,eAAA,EAAA,EApBA;AAqBA,MAAA,QAAA,EAAA;AArBA,KAAA;AAuBA,GA1BA;AA2BA,EAAA,UAAA,EAAA;AACA,IAAA,UAAA,EAAA,UADA;AAEA,cAAA,IAFA;AAGA,gBAAA;AAHA,GA3BA;AAgCA,EAAA,QAAA,EAAA;AACA,IAAA,WADA,yBACA;AACA,aAAA,KAAA,MAAA,CAAA,KAAA,CAAA,IAAA,CAAA,IAAA;AACA,KAHA;AAIA,IAAA,WAJA,yBAIA;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,YAAA,CAAA;AACA;;AAEA,aAAA,KAAA;AACA,KAVA;AAWA,IAAA,gBAXA,8BAWA;AACA,UAAA,KAAA,WAAA,IAAA,KAAA,WAAA,CAAA,KAAA,EAAA;AACA,eAAA,KAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,iBAAA,CAAA;AACA;;AAEA,aAAA,KAAA;AACA,KAjBA;AAkBA,IAAA,OAlBA,qBAkBA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,YAAA,CAAA,EAAA,OAAA,eAAA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,WAAA;AACA,UAAA,KAAA,WAAA,CAAA,KAAA,CAAA,QAAA,CAAA,WAAA,CAAA,EAAA,OAAA,WAAA;AACA,aAAA,CAAA;AAEA,KAxBA;AA2BA,IAAA,gBA3BA,8BA2BA;AACA,UAAA,KAAA,WAAA,KAAA,EAAA,IAAA,KAAA,eAAA,KAAA,EAAA,EAAA;AACA,eAAA,KAAA,WAAA,KAAA,KAAA,eAAA;AACA,OAFA,MAEA;AACA,eAAA,KAAA;AACA;AACA;AAjCA,GAhCA;AAoEA,EAAA,OAAA,EAAA;AACA,IAAA,eADA,2BACA,KADA,EACA;AACA,UAAA,QAAA,GAAA,IAAA,QAAA,EAAA;AACA,UAAA,IAAA,GAAA,KAAA,CAAA,MAAA,CAAA,KAAA,CAAA,CAAA,CAAA;AACA,MAAA,QAAA,CAAA,MAAA,CAAA,gBAAA,EAAA,IAAA,EAAA,IAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,MAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,MAAA,WAAA,CAAA,oBAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EAAA,QAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,IAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,QAAA;AACA,OAJA,EAKA,UAAA,KAAA,EAAA;AACA,QAAA,OAAA,CAAA,GAAA,CAAA,KAAA;AACA,OAPA;AASA,KAhBA;AAkBA,IAAA,eAlBA,6BAkBA;AACA,WAAA,aAAA,GAAA,KAAA;AACA,KApBA;AAqBA,IAAA,cArBA,4BAqBA;AAAA;;AACA,WAAA,aAAA,GAAA,IAAA;;AACA,UAAA,CAAA,KAAA,gBAAA,IAAA,KAAA,WAAA,KAAA,EAAA,IAAA,KAAA,eAAA,KAAA,EAAA,EAAA;AACA,aAAA,UAAA,CAAA,QAAA,GAAA,IAAA,CAAA,UAAA,OAAA,EAAA;AACA,cAAA,OAAA,IAAA,CAAA,KAAA,CAAA,WAAA,CAAA,QAAA,CAAA,GAAA,CAAA,EAAA;AACA,YAAA,WAAA,CAAA,iBAAA,CAAA,KAAA,CAAA,WAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,kBAAA,QAAA,CAAA,IAAA,EAAA;AACA,gBAAA,WAAA,CAAA,cAAA,CAAA,KAAA,CAAA,WAAA,CAAA,EAAA,EAAA,KAAA,CAAA,WAAA,EAAA,KAAA,CAAA,WAAA,EAAA,IAAA,CACA,YAAA;AACA,kBAAA,KAAA,CAAA,QAAA,GAAA,oBAAA;AACA,iBAHA;AAKA,eANA,MAMA,KAAA,CAAA,QAAA,GAAA,wBAAA;AAEA,aAVA;AAYA;AACA,SAfA;AAgBA,OAjBA,MAiBA,KAAA,QAAA,GAAA,oBAAA;AACA,KAzCA;AA0CA,IAAA,WA1CA,yBA0CA;AAAA;;AACA,MAAA,WAAA,CAAA,WAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EAAA,KAAA,KAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA,QAAA,QAAA,CAAA,IAAA;AACA,OAHA,EAIA,UAAA,KAAA,EAAA;AACA,QAAA,MAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,OATA;AAWA,KAtDA;AAuDA,IAAA,MAvDA,oBAuDA;AACA,WAAA,MAAA,CAAA,QAAA,CAAA,aAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AA1DA,GApEA;AAgIA,EAAA,OAhIA,qBAgIA;AAAA;;AACA,IAAA,WAAA,CAAA,OAAA,CAAA,KAAA,WAAA,CAAA,EAAA,EAAA,IAAA,CACA,UAAA,QAAA,EAAA;AACA;AACA;AACA,MAAA,MAAA,CAAA,IAAA,GAAA,QAAA,CAAA,IAAA;AACA,MAAA,MAAA,CAAA,IAAA,CAAA,QAAA,GAAA,IAAA,IAAA,CAAA,QAAA,CAAA,IAAA,CAAA,QAAA,CAAA;AACA,KANA,EAOA,UAAA,KAAA,EAAA;AACA,MAAA,MAAA,CAAA,OAAA,GACA,KAAA,CAAA,QAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,IAAA,KAAA,CAAA,QAAA,CAAA,IAAA,CAAA,OAAA,IACA,KAAA,CAAA,OADA,IAEA,KAAA,CAAA,QAAA,EAHA;AAIA,KAZA;;AAcA,QAAA,CAAA,KAAA,WAAA,EAAA;AACA,WAAA,OAAA,CAAA,IAAA,CAAA,QAAA;AACA;AAEA;AAnJA,CAAA","sourcesContent":["<style scoped>\n.mx-datepicker{\n  width: fit-content;\n}\n.alert-error{\n  text-align: left;\n  padding-left: 15px;\n}\n</style>\n<template>\n  <div v-if=\"currentUser\"><v-header></v-header>\n  <div class=\"container\">\n\n\n    <v-menu></v-menu>\n\n    <div class=\"content\" style=\"max-width: 200px;\">\n      <input type=\"file\"\n             accept=\"image/*\"\n             @change=\"onImageSelected\"\n      />\n      <img class=\"profile-picture\"\n           :src=\"user.profilePicture ?\n           require('../../public/images/'+user.profilePicture) :\n           require('../../public/images/default'+(user.gender ? 'Woman':'Man')+'.png')\" alt=\"profile picture\"/>\n\n      <div class=\"row\" style=\"background-color: #dfe6ed; margin-bottom: 0; padding: 5px; border-radius: 3px; justify-content: center;\">\n        {{hasRole}}\n      </div>\n    </div>\n    <div class=\"content\" style=\"width: calc(80% - 15% - 285px)\">\n      <div>\n        <h1 class=\"h1\">{{user.firstName + ' ' + user.lastName + (user.patronymic ? ' ' + user.patronymic : '')}}</h1>\n        <div class=\"separator\"></div>\n        <div class=\"row\">\n          <div class=\"column\">\n            <div class=\"row user-info\">Почта:</div>\n            <div class=\"row user-info\">День рождения:</div>\n          </div>\n          <div class=\"column\">\n            <div class=\"row\">{{user.email}}</div>\n            <div class=\"row\">\n              <date-picker v-model=\"user.birthday\"\n                         type=\"date\"\n                         format=\"DD MMMM YYYY г.\"\n                         :clearable = \"false\"\n                         :confirm=\"true\"\n                         input-class=\"date-picker\"\n                         placeholder=\"Выбрать\">\n              </date-picker>\n            </div>\n          </div>\n        </div>\n        <div class=\"separator\"></div>\n\n        <div v-click-outside=\"deactivateFocus\" v-bind:class=\"[passwordFocus ? 'active-block' : '', 'column']\">\n\n          <div v-if=\"response && passwordFocus\" class=\"alert-error\">{{response}}</div>\n          <div class=\"row\">\n            <div class=\"user-info\">Старый пароль:</div>\n            <input type=\"password\"\n                   v-on:focus=\"passwordFocus = true\"\n                   v-model=\"oldPassword\"/>\n          </div>\n          <div class=\"row\">\n            <div class=\"user-info\">Новый пароль:</div>\n            <input type=\"password\"\n                   v-on:focus=\"passwordFocus = true\"\n                   v-model=\"newPassword\" name=\"пароль\"\n                   v-validate=\"'required|min:6|max:40'\"/>\n          </div>\n          <div class=\"alert-error\" v-if=\"this.newPassword.includes(' ') && passwordFocus\">Пароль не может содержать пробелы</div>\n          <div\n              v-else-if=\"errors.has('пароль') && passwordFocus\"\n              class=\"alert-error\">\n            {{errors.first('пароль')}}\n          </div>\n          <div class=\"row\">\n            <div class=\"user-info\">Повторите новый пароль:</div>\n            <input type=\"password\"\n                   v-on:focus=\"passwordFocus = true\"\n                   v-model=\"checkedPassword\"/>\n          </div>\n          <div v-if=\"notSamePasswords && passwordFocus\" class=\"alert-error\">Пароли не совпадают</div>\n          <div class=\"row\">\n            <div class=\"user-info\"></div>\n            <div class=\"btn btn-thin\" style=\"margin: 0\" @click=\"changePassword\">Сменить пароль</div>\n          </div>\n\n        </div>\n        <div class=\"separator\"></div>\n      </div>\n      <div class=\"row\">\n        <button class=\"btn\" style=\"margin: 15px\" @click.prevent=\"logOut\">\n          Выйти\n        </button>\n      </div>\n\n        <!-- END -->\n\n      </div>\n  </div>\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\nimport Menu from \"@/views/components/Menu\";\nimport Header from \"@/views/components/Header\";\n\nimport DatePicker from 'vue2-datepicker';\nimport 'vue2-datepicker/index.css';\nimport 'vue2-datepicker/locale/es/ru.js';\n\nexport default {\n  name: 'Profile',\n  data(){\n    return{\n      message: '',\n      about: '',\n      user:{\n        id:'',\n        email:'',\n        firstName:'',\n        lastName:'',\n        patronymic: '',\n        birthday: new Date(),\n        gender: false,\n        profilePicture: ''\n      },\n\n      selectedProfilePicture: null,\n\n      passwordFocus: false,\n\n      oldPassword: '',\n      newPassword: '',\n      checkedPassword: '',\n      response: ''\n    };\n  },\n  components:{\n    DatePicker,\n    'v-menu' : Menu,\n    'v-header': Header\n  },\n  computed: {\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserAccountant() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ACCOUNTANT');\n      }\n\n      return false;\n    },\n    hasRole(){\n      if (this.currentUser.roles.includes('ROLE_ADMIN')) return 'Администратор';\n      if (this.currentUser.roles.includes('ROLE_ACCOUNTANT')) return 'Бухгалтер';\n      if (this.currentUser.roles.includes('ROLE_USER')) return 'Сотрудник';\n      return 0;\n\n    },\n\n\n    notSamePasswords () {\n      if (this.newPassword !== '' && this.checkedPassword !== '') {\n        return (this.newPassword !== this.checkedPassword)\n      } else {\n        return false\n      }\n    },\n  },\n\n  methods: {\n    onImageSelected(event) {\n      let formData = new FormData();\n      let file = event.target.files[0];\n      formData.append(\"profilePicture\", file, file.name);\n      console.log(file);\n      console.log(formData);\n      UserService.uploadProfilePicture(this.currentUser.id, formData).then(\n          response => {\n            console.log('ok');\n            console.log(response);\n          },\n          error => {\n            console.log(error);\n          }\n      );\n    },\n\n    deactivateFocus(){\n      this.passwordFocus=false;\n    },\n    changePassword(){\n      this.passwordFocus = true;\n      if (!this.notSamePasswords && this.newPassword !== '' && this.checkedPassword !== ''){\n        this.$validator.validate().then(isValid => {\n          if (isValid && !this.newPassword.includes(' ')) {\n            UserService.isPasswordCorrect(this.oldPassword).then(\n                response => {\n                  if (response.data) {\n                    UserService.changePassword(this.currentUser.id,this.oldPassword,this.newPassword).then(\n                        () => {\n                          this.response = 'Пароль был изменен';\n                        }\n                    );\n                  } else this.response = 'Неверный старый пароль'\n\n                }\n            )\n          }\n        });\n      } else this.response = 'Заполните все поля'\n    },\n    changeAbout(){\n      UserService.changeAbout(this.currentUser.id, this.about).then(\n          response => {\n            response.data;\n          },\n          error => {\n            this.message =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    },\n    logOut() {\n      this.$store.dispatch('auth/logout');\n      this.$router.push('/login');\n    }\n  },\n  mounted() {\n    UserService.getUser(this.currentUser.id).then(\n        response => {\n          // eslint-disable-next-line no-console\n          //console.log(response.data);\n          this.user = response.data;\n          this.user.birthday = new Date(response.data.birthday);\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n\n  }\n};\n</script>"],"sourceRoot":"src/views"}]}