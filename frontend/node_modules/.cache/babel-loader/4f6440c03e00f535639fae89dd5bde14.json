{"remainingRequest":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Projects.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Projects.vue","mtime":1634772343611},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.array.find-index\";\nimport \"core-js/modules/es6.regexp.to-string\";\nimport \"core-js/modules/es7.array.includes\";\nimport \"core-js/modules/es6.string.includes\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport UserService from \"../services/user.service\";\nexport default {\n  name: 'Projects',\n  data: function data() {\n    return {\n      content: '',\n      invitations: [],\n      projects: []\n    };\n  },\n  computed: {\n    //handle projects duplicates\n\n    /*otherProjects(){\n      return this.projects.filter((item, index) => this.projects.indexOf(item) === index)\n    },*/\n    currentUser: function currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin: function isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserManager: function isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n\n      return false;\n    },\n    isManager: function isManager() {\n      return this.isUserManager || this.isUserAdmin;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n\n    UserService.getInvitations().then(function (response) {\n      _this.invitations = response.data;\n    }, function (error) {\n      _this.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n    UserService.getProjects().then(function (response) {\n      _this.projects = response.data;\n    }, function (error) {\n      _this.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n    });\n\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    link: function link(id) {\n      this.$router.push('/project/' + id);\n    },\n    createProject: function createProject() {\n      var _this2 = this;\n\n      UserService.postProject().then(function (response) {\n        _this2.$router.push('/project/' + response.data.id);\n      }, function (error) {\n        _this2.content = error.response && error.response.data && error.response.data.message || error.message || error.toString();\n      });\n    },\n    acceptInv: function acceptInv(inv) {\n      var _this3 = this;\n\n      var project = this.invitations.splice(this.invitations.findIndex(function (item) {\n        return item.id === inv.id;\n      }), 1)[0];\n      project.invitations.splice(project.invitations.findIndex(function (item) {\n        return item.id === _this3.currentUser.id;\n      }), 1);\n      UserService.changeInvitation(project);\n      UserService.getUser().then(function (response) {\n        project.workerInfos.push(response.data);\n        UserService.changeUsers(project);\n\n        _this3.projects.push(project);\n      });\n    },\n    declineInv: function declineInv(inv) {\n      var _this4 = this;\n\n      var project = this.invitations.splice(this.invitations.findIndex(function (item) {\n        return item.id === inv.id;\n      }), 1)[0];\n      project.invitations.splice(project.invitations.findIndex(function (item) {\n        return item.id === _this4.currentUser.id;\n      }), 1);\n      UserService.changeInvitation(project);\n    },\n    del: function del(id) {\n      this.projects.splice(this.projects.findIndex(function (item) {\n        return item.id == id;\n      }), 1);\n      UserService.delProject(id);\n    },\n    leave: function leave(id) {\n      var project = this.projects.splice(this.projects.findIndex(function (item) {\n        return item.id == id;\n      }), 1)[0];\n      UserService.getUser().then(function (response) {\n        project.workerInfos.splice(project.workerInfos.findIndex(function (item) {\n          return item.id == response.data.id;\n        }), 1);\n        UserService.changeUsers(project);\n      });\n    }\n  }\n};",{"version":3,"sources":["Projects.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"container\">\n\n      <div v-if=\"currentUser\" class=\"user-menu\">\n        <li>\n          <router-link to=\"/today\">To Do</router-link>\n        </li>\n        <li>\n          <router-link to=\"/tasks\">Задачи</router-link>\n        </li>\n        <li>\n          <router-link to=\"/statistics\">Статистика</router-link>\n        </li>\n        <li>\n          <router-link to=\"/projects\" class=\"active\" @click.prevent>Проекты</router-link>\n        </li>\n        <li>\n          <router-link to=\"/profile\">Мой профиль</router-link>\n        </li>\n        <li v-if=\"isUserManager && false\">\n          <router-link to=\"/mod\">Панель модератора</router-link>\n        </li>\n        <li v-if=\"isUserAdmin\">\n          <router-link to=\"/admin\">Панель администратора</router-link>\n        </li>\n      </div>\n    <div class=\"content\">\n      <div class=\"action\">\n        <router-link to=\"/profile\">\n          <h2 style=\"margin: 0\">{{ currentUser.username }}</h2>\n        </router-link>\n      </div>\n      <div>\n\n        <div class=\"row\">\n          <h1>Проекты</h1>\n          <button v-if=\"isManager\" class=\"button-p\" @click=\"createProject\">Новый проект</button>\n        </div>\n        <div v-if=\"invitations.length > 0\" class=\"row\"><h2>Приглашения</h2></div>\n        <div v-for=\"invitation in invitations\" :key=\"invitation.id\" class=\"row\">\n          <div class=\"task\" style=\"cursor: auto\">{{invitation.name}}</div>\n          <button class=\"button-g\" @click=\"acceptInv(invitation)\">Принять</button>\n          <button class=\"button-b\" @click=\"declineInv(invitation)\">Отказать</button>\n        </div>\n        <div v-if=\"invitations.length > 0\" class=\"row\"><h2>Проекты</h2></div>\n        <div v-if=\"projects.length <= 0\" class=\"task\" style=\"cursor: auto\">Пока вы не участвуете в проектах</div>\n        <div class=\"row\" v-for=\"project in projects\" :key=\"project.id\">\n          <div class=\"task\"  @click=\"link(project.id)\">{{ project.name }}</div>\n          <button class=\"button-b\" @click=\"leave(project.id)\" style=\"width: auto\">Покинуть проект</button>\n          <button v-if=\"isManager\" class=\"button-r\" @click=\"del(project.id)\" style=\"width: auto\">Удалить</button>\n        </div>\n        <!-- END -->\n        <h3>{{content}}</h3>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\n\nexport default {\n  name: 'Projects',\n  data() {\n    return {\n      content: '',\n      invitations: [],\n      projects: []\n    };\n  },\n  computed: {\n    //handle projects duplicates\n    /*otherProjects(){\n      return this.projects.filter((item, index) => this.projects.indexOf(item) === index)\n    },*/\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n      return false;\n    },\n    isManager(){\n      return this.isUserManager || this.isUserAdmin;\n    }\n  },\n  mounted() {\n    UserService.getInvitations().then(\n        response => {\n          this.invitations = response.data;\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    UserService.getProjects().then(\n      response => {\n        this.projects = response.data;\n\n      },\n      error => {\n        this.content =\n          (error.response && error.response.data && error.response.data.message) ||\n          error.message ||\n          error.toString();\n      }\n    );\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods:{\n    link(id){\n      this.$router.push('/project/' + id);\n    },\n    createProject(){\n      UserService.postProject().then(\n          response => {\n            this.$router.push('/project/' + response.data.id);\n          },\n          error => {\n            this.content =\n                (error.response && error.response.data && error.response.data.message) ||\n                error.message ||\n                error.toString();\n          }\n      );\n    },\n    acceptInv(inv){\n      let project = this.invitations.splice(this.invitations.findIndex(item => item.id === inv.id), 1)[0];\n      project.invitations.splice(project.invitations.findIndex(item => item.id === this.currentUser.id), 1);\n      UserService.changeInvitation(project);\n      UserService.getUser().then(\n          response => {\n            project.workerInfos.push(response.data);\n            UserService.changeUsers(project);\n            this.projects.push(project);\n          }\n      )\n    },\n    declineInv(inv){\n      let project = this.invitations.splice(this.invitations.findIndex(item => item.id === inv.id), 1)[0];\n      project.invitations.splice(project.invitations.findIndex(item => item.id === this.currentUser.id), 1);\n      UserService.changeInvitation(project);\n    },\n    del(id){\n      this.projects.splice(this.projects.findIndex(item => item.id == id),1);\n      UserService.delProject(id);\n    },\n    leave(id){\n      let project = this.projects.splice(this.projects.findIndex(item => item.id == id),1)[0];\n      UserService.getUser().then(\n          response => {\n            project.workerInfos.splice(project.workerInfos.findIndex(item => item.id == response.data.id),1);\n\n            UserService.changeUsers(project);\n          }\n      )\n    }\n\n  }\n\n};\n</script>\n"],"sourceRoot":"src/views"}]}