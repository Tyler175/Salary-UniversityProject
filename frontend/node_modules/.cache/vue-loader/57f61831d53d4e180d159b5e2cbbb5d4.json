{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Statistics.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Statistics.vue","mtime":1622453899513},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\nimport UserService from '../services/user.service';\nimport TaskEdit from \"@/views/components/TaskEdit.vue\";\nimport WorkEdit from \"@/views/components/WorkEdit\";\nimport HorizontalScroll from 'vue-horizontal-scroll'\nimport 'vue-horizontal-scroll/dist/vue-horizontal-scroll.css'\n\nexport default {\n  name: 'Statistics',\n  data() {\n    return {\n      isHidden: true,\n      isWorkHidden: true,\n      content: '',\n      hover: 0,\n\n      findTask: '',\n      interval_start: '',\n      interval_end: '',\n\n      works: [],\n      work: {},\n\n      openParents: [],\n      tasks: [],\n      task: {}\n    };\n  },\n  components:{\n    'v-taskEdit' : TaskEdit,\n    'v-workEdit' : WorkEdit,\n    'horizontal-scroll' : HorizontalScroll\n  },\n  computed: {\n    formatDate() {\n      return date => {\n        let formDate = new Date(date);\n        let dd = formDate.getDate();\n        if (dd < 10) dd = '0' + dd;\n        let mm = formDate.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        let yy = formDate.getFullYear();\n        if (yy < 10) yy = '0' + yy;\n        return  yy + '-' + mm + '-' + dd;\n      }\n    },\n    taskWorks(){\n      return task => this.works\n          .filter(item => item.task.id === task.id)\n          .filter(item => {\n            if (!this.interval_end) return (new Date(this.formatDate(item.workStart)).getTime() === new Date(this.interval_start ? this.formatDate(this.interval_start): this.formatDate(new Date())).getTime());\n            else return (new Date(this.formatDate(item.workStart)).getTime() >= new Date(this.formatDate(this.interval_start)).getTime() && new Date(this.formatDate(item.workStart)).getTime() <= new Date(this.formatDate(this.interval_end)).getTime());\n          })\n\n    },\n    allTaskWords(){\n      return task => this.works\n          .filter(item => item.task.id === task.id)    //yeah, i know that it kinda duplicate\n    },\n    allQuantity(){ //if it's not broke, don't fix it\n      return task => this.allTaskWords(task).reduce(function (p, v) {\n        return ( p += (new Date(v.workEnd).getTime() - new Date(v.workStart).getTime())/1000/60 );\n      }, 0);\n    },\n    getPlans(){\n      return task => task.plans.reduce(function (p, v) {\n        return p+=v.user.id == this.currentUser.id ? v.plan : 0;\n      }.bind(this), 0);\n    },\n    percentageWidth(){\n      return task => {\n        return this.$refs.taskTable ? this.allQuantity(task)/60/this.getPlans(task)*this.$refs.taskTable.clientWidth : 0;\n      }\n    },\n    parents(){\n      return this.tasks.filter(item => (!item.parent))\n          .filter(item =>(this.taskWorks(item).length>0 || this.children(item).length > 0))\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1})\n          .filter(item=>item.taskName.toLowerCase().includes(this.findTask.toLowerCase()));\n      //can combine filters\n    },\n    children_task(){\n      return this.tasks.filter(item => (item.parent))\n          .filter(item =>(this.taskWorks(item).length>0))\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1});\n    },\n    tableHeight(){\n      return  50*(1+this.parents.length)+ this.openParents.reduce(function (p, v) {\n        return ( v.isOpen && this.parents.find(item => item.id === v.id) ? p+=(this.children_task.filter(item => (item.parent.id === v.id)).length) : p );\n      }.bind(this), 0)*30+17;\n    },\n\n    workProps(){\n      return work => ({\n        width: ((100/3600*(new Date(work.workEnd) - new Date(work.workStart))/1000) >= 5 ? (100/3600*(new Date(work.workEnd) - new Date(work.workStart))/1000) : 0) + 'px',\n        left: (new Date(work.workStart) - new Date (work.workStart).setHours(0,0,0,0))/36/1000 + 'px',\n        background: '#6c7bfe',\n        position: 'absolute'\n      });\n    },\n\n    quantity(){\n      return task => this.taskWorks(task).reduce(function (p, v) {\n        return ( p += (new Date(v.workEnd).getTime() - new Date(v.workStart).getTime())/1000/60 );\n      }, 0);\n    },\n    formateQuantity(){\n      return quant => {\n        let mm = quant%60;\n        if (mm < 10) mm = '0' + mm;\n        let hh = quant/60>>0;\n        if (hh < 10) hh = '0' + hh;\n        // eslint-disable-next-line no-console\n        console.log(hh);\n        return  (hh+'').slice(0,2) + ':' + (mm+'').slice(0,2);\n      }\n    },\n    allTask(){\n      return this.parents.filter(item =>(this.taskWorks(item).length>0)).concat(this.children_task);\n    },\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n\n      return false;\n    }\n  },\n  mounted() {\n    UserService.getTasks().then(\n        response => {\n          this.tasks = response.data;\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    UserService.getWorksByUser(this.currentUser.id).then(\n        response => {\n          this.works = response.data;\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    open(task){\n      let parent = this.openParents.find(item => item.id === task.id);\n      if (parent) {\n        parent.isOpen = !parent.isOpen;\n        this.openParents.splice(this.openParents.findIndex(item => item.id === parent.id), 1, parent);\n      } else {\n        this.openParents.push({id: task.id, isOpen: true})\n      }\n\n    },\n    children(parent){\n      // eslint-disable-next-line no-console\n      console.log();\n\n\n\n      return this.children_task.filter(item => (item.parent.id === parent.id))\n    },\n    children_open(parent){\n      if (this.openParents.find(item => item.id === parent.id) &&\n          this.openParents.find(item => item.id === parent.id).isOpen){\n        return this.children(parent);\n      }\n      else return [];\n    },\n    openWorkEdit(work){\n      if (work === 0) {this.work = {}}\n      else {\n        this.work = {}\n        Object.assign(this.work, work);\n      }\n      this.isWorkHidden = false;\n    },\n    openEdit(task){\n      if (task === 0) {this.task = {}}\n      else {\n        this.task = {}\n        Object.assign(this.task, task);\n      }\n      this.isHidden = false;\n\n    },\n    post(task){\n      this.tasks.push(task);\n      Object.assign(this.task, task);\n    },\n    put(task){\n      this.tasks.splice(this.tasks.findIndex(item => item.id == task.id), 1, task);\n\n    },\n    del(task){\n      this.tasks.splice(this.tasks.findIndex(item => item.id === task.id),1);\n    },\n    workPost(work){\n      this.works.push(work);\n      Object.assign(this.work, work);\n    },\n    workPut(work){\n      this.works.splice(this.works.findIndex(item => item.id == work.id), 1, work);\n\n    },\n    workDel(work){\n      this.works.splice(this.works.findIndex(item => item.id === work.id),1);\n    },\n    test(){\n\n    }\n  }\n};\n",{"version":3,"sources":["Statistics.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"Statistics.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\nh3{\n  margin: 0 20px 0 0;\n}\n</style>\n<template>\n  <div class=\"container\">\n    <v-taskEdit v-if='!isHidden' v-on:hide=\"isHidden = true\"\n                :task=\"task\" :post=\"post\" :put=\"put\" :del=\"del\" :option=\"'view'\"></v-taskEdit>\n    <v-workEdit v-if='!isWorkHidden' v-on:whide=\"isWorkHidden = true\"\n                :work=\"work\" :post=\"workPost\" :put=\"workPut\" :del=\"workDel\"></v-workEdit>\n    <div v-if=\"currentUser\" class=\"user-menu\">\n        <li>\n          <router-link to=\"/today\">To Do</router-link>\n        </li>\n        <li>\n          <router-link to=\"/tasks\">Задачи</router-link>\n        </li>\n        <li>\n          <router-link to=\"/statistics\" class=\"active\" @click.prevent>Статистика</router-link>\n        </li>\n        <li>\n          <router-link to=\"/projects\">Проекты</router-link>\n        </li>\n        <li>\n          <router-link to=\"/profile\">Мой профиль</router-link>\n        </li>\n        <li v-if=\"isUserManager && false\">\n          <router-link to=\"/mod\">Панель модератора</router-link>\n        </li>\n        <li v-if=\"isUserAdmin\">\n          <router-link to=\"/admin\">Панель администратора</router-link>\n        </li>\n      </div>\n    <div class=\"content\">\n      <div class=\"action\">\n        <router-link to=\"/profile\">\n          <h2 style=\"margin: 0\">{{ currentUser.username }}</h2>\n        </router-link>\n      </div>\n      <h1>Статистика</h1>\n      <div v-if=\"content\" class=\"row\">\n        Упс, {{content}}\n      </div>\n      <div class=\"column\">\n        <div class=\"row\" style=\"margin-bottom: 0\" v-if=\"false\"> <!--not needed yet-->\n          <input type=\"checkbox\" checked v-model=\"completed\"><h3>Выполненные</h3>\n          <input type=\"checkbox\" checked v-model=\"overdue\"><h3>Просроченные</h3>\n          <input type=\"checkbox\" checked v-model=\"inWork\"><h3>В работе</h3>\n        </div>\n        <div class=\"row\">\n          <h3 style=\"margin-right: 10px\">{{ interval_start ? 'Показать с:' : 'Показать за' }} </h3>\n          <input class=\"date\" type=\"date\" v-model=\"interval_start\" min=\"2015-01-01\" max=\"2030-01-01\"/>\n          <h3 v-if=\"interval_start\" style=\"margin-right: 10px\">до: </h3>\n          <input v-if=\"interval_start\" class=\"date\" type=\"date\" v-model=\"interval_end\" min=\"2015-01-01\" max=\"2030-01-01\"/>\n          <div class=\"button-g\" @click=\"interval_start=interval_end=''\">Сбросить</div>\n        </div>\n      </div>\n      <div v-if=\"interval_end\">\n        <div class=\"row\" v-for=\"task in allTask\" :key=\"task.id\">\n          <div class=\"task\" style=\"cursor: auto\" >{{task.taskName}} - {{formateQuantity(quantity(task))}}</div>\n        </div>\n      </div>\n      <!--   WATERFALL-->\n      <div v-else class=\"row tasks\" ref=\"tasks\" style=\"align-items: flex-start\">\n        <div class=\"task-table\" ref=\"taskTable\">\n          <div class=\"row-in-table\"><div class=\"task-in-table\"><h3>Поиск: </h3>\n            <input type=\"text\" maxlength=\"30\" v-autowidth=\"{maxWidth: '200px', minWidth: '100px', comfortZone: 0}\" v-model=\"findTask\" style=\"font-size:16px\"/></div>\n          </div>\n          <div class=\"row-in-table\" v-for=\"task in parents\" :key=\"task.id\">\n            <div v-bind:class=\"[hover === task.id ? 'hover' : '']\" @mouseover='hover = task.id' @mouseout=\"hover = 0\">\n\n              <div class=\"column\" style=\"width: 100%\">\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n\n                  <div class=\"arrow-btn\" v-bind:class=\"[children(task).length === 0 ? 'hidden' : '','arrow-btn']\"\n                       v-bind:style=\"{transform: children_open(task).length === 0 ? 'rotate(0.0turn)' : 'rotate(0.25turn)'}\"\n                       @click=\"open(task)\"></div>\n\n                  <div class=\"task-in-table\" @click=\"openEdit(task)\">\n                    <div>\n                      {{ task.taskName }} - {{formateQuantity(quantity(task))}}\n                    </div>\n                  </div>\n\n                  <div class=\"plus-btn\" @click=\"openWorkEdit({task: task})\" data-content=\"Добавить время работы\"></div>\n\n                </div>\n                <div v-if=\"getPlans(task)>0\" class=\"pop-up\" style=\"top: 45px\" v-bind:data-content=\"Number(allQuantity(task)/60).toFixed(2) + ' из ' + getPlans(task) + (getPlans(task)%10 == 1 ? ' часа':' часов')\">\n                  <div class=\"progress\">\n                    <div class=\"percentage\" v-bind:style=\"{width: percentageWidth(task)+'px'}\"></div>\n                  </div>\n                </div>\n              </div>\n\n            </div>\n            <div v-for=\"child_task in children_open(task) \" :key=\"child_task.id\" style=\"display: flex; align-items: center\"\n                 v-bind:class=\"[hover === child_task.id ? 'hover' : '']\" @mouseover='hover = child_task.id' @mouseout=\"hover = 0\">\n              <div class=\"column\" style=\"width: 100%\">\n                <div style=\"display: flex; justify-content: space-between; align-items: center;\">\n                  <div class=\"task-in-table subtask-in-table\"\n                       @click=\"openEdit(child_task)\">\n                    {{child_task.taskName}} - {{formateQuantity(quantity(child_task))}}\n                  </div>\n                  <div class=\"plus-btn\" @click=\"openWorkEdit({task: child_task})\" data-content=\"Добавить время работы\"></div>\n                </div>\n                <div v-if=\"getPlans(child_task)>0\" class=\"pop-up\" style=\"bottom: 0\" v-bind:data-content=\"Number(allQuantity(child_task)/60).toFixed(2) + ' из ' + getPlans(child_task) + (getPlans(child_task)%10 == 1 ? ' часа':' часов')\">\n                  <div class=\"progress\">\n                    <div class=\"percentage\" v-bind:style=\"{width: percentageWidth(child_task)+'px'}\"></div>\n                  </div>\n                </div>\n              </div>\n            </div>\n\n          </div>\n          <div class=\"button-s\" @click=\"openWorkEdit(0)\"\n               style=\"width: auto; margin-right: 0px; margin-left: -1px; border-radius: 0 0 0 5px;\">\n            Добавить время работы\n          </div>\n        </div>\n        <horizontal-scroll class=\"horizontal-scroll\" ref=\"table\" v-bind:style=\"{height: tableHeight + 'px'}\">\n          <div class=\"table\" v-bind:style=\"{width: 100*24 + 'px'}\">\n            <!--dates row-->\n            <div class=\"main-table-row\"><div class=\"table-row\">\n              <div class=\"dates\" v-for=\"date in Array.from({length: 24}, (v, k) => k)\" :key=\"date\" style=\"width: 100px; flex-direction: row;\">\n                <div style=\"padding-left: 5px\"> {{date &lt; 10 ? '0' + date : date}}:00 </div>\n              </div>\n            </div></div>\n            <!--content rows-->\n            <div class=\"main-table-row\" v-for=\"task in parents\" :key=\"task.id\">\n              <div class=\"table-row\" v-bind:class=\"[hover === task.id ? 'hover' : '']\" @mouseover='hover = task.id' @mouseout=\"hover = 0\">\n                <div class=\"table-task\" style=\"height: 20px; padding: 5px 0\"\n                     v-for=\"work in taskWorks(task)\" :key=\"work.id\"\n                     v-bind:style=\"workProps(work)\" @click=\"openWorkEdit(work)\"></div>\n              </div>\n              <div class=\"table-row table-subrow\" style=\"height: 20px; padding: 5px 0\"\n                   v-for=\"child_task in children_open(task) \" :key=\"child_task.id\"\n                   v-bind:class=\"[hover === child_task.id ? 'hover' : '']\" @mouseover='hover = child_task.id' @mouseout=\"hover = 0\">\n                <div class=\"table-task\" style=\"height: 20px\"\n                     v-for=\"child_work in taskWorks(child_task)\" :key=\"child_work.id\"\n                     v-bind:style=\"workProps(child_work)\" @click=\"openWorkEdit(child_work)\"></div>\n              </div>\n            </div>\n          </div>\n        </horizontal-scroll>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\nimport UserService from '../services/user.service';\nimport TaskEdit from \"@/views/components/TaskEdit.vue\";\nimport WorkEdit from \"@/views/components/WorkEdit\";\nimport HorizontalScroll from 'vue-horizontal-scroll'\nimport 'vue-horizontal-scroll/dist/vue-horizontal-scroll.css'\n\nexport default {\n  name: 'Statistics',\n  data() {\n    return {\n      isHidden: true,\n      isWorkHidden: true,\n      content: '',\n      hover: 0,\n\n      findTask: '',\n      interval_start: '',\n      interval_end: '',\n\n      works: [],\n      work: {},\n\n      openParents: [],\n      tasks: [],\n      task: {}\n    };\n  },\n  components:{\n    'v-taskEdit' : TaskEdit,\n    'v-workEdit' : WorkEdit,\n    'horizontal-scroll' : HorizontalScroll\n  },\n  computed: {\n    formatDate() {\n      return date => {\n        let formDate = new Date(date);\n        let dd = formDate.getDate();\n        if (dd < 10) dd = '0' + dd;\n        let mm = formDate.getMonth() + 1;\n        if (mm < 10) mm = '0' + mm;\n        let yy = formDate.getFullYear();\n        if (yy < 10) yy = '0' + yy;\n        return  yy + '-' + mm + '-' + dd;\n      }\n    },\n    taskWorks(){\n      return task => this.works\n          .filter(item => item.task.id === task.id)\n          .filter(item => {\n            if (!this.interval_end) return (new Date(this.formatDate(item.workStart)).getTime() === new Date(this.interval_start ? this.formatDate(this.interval_start): this.formatDate(new Date())).getTime());\n            else return (new Date(this.formatDate(item.workStart)).getTime() >= new Date(this.formatDate(this.interval_start)).getTime() && new Date(this.formatDate(item.workStart)).getTime() <= new Date(this.formatDate(this.interval_end)).getTime());\n          })\n\n    },\n    allTaskWords(){\n      return task => this.works\n          .filter(item => item.task.id === task.id)    //yeah, i know that it kinda duplicate\n    },\n    allQuantity(){ //if it's not broke, don't fix it\n      return task => this.allTaskWords(task).reduce(function (p, v) {\n        return ( p += (new Date(v.workEnd).getTime() - new Date(v.workStart).getTime())/1000/60 );\n      }, 0);\n    },\n    getPlans(){\n      return task => task.plans.reduce(function (p, v) {\n        return p+=v.user.id == this.currentUser.id ? v.plan : 0;\n      }.bind(this), 0);\n    },\n    percentageWidth(){\n      return task => {\n        return this.$refs.taskTable ? this.allQuantity(task)/60/this.getPlans(task)*this.$refs.taskTable.clientWidth : 0;\n      }\n    },\n    parents(){\n      return this.tasks.filter(item => (!item.parent))\n          .filter(item =>(this.taskWorks(item).length>0 || this.children(item).length > 0))\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1})\n          .filter(item=>item.taskName.toLowerCase().includes(this.findTask.toLowerCase()));\n      //can combine filters\n    },\n    children_task(){\n      return this.tasks.filter(item => (item.parent))\n          .filter(item =>(this.taskWorks(item).length>0))\n          .sort(function(f, s) {return f.task_start > s.task_start ? 1 : -1});\n    },\n    tableHeight(){\n      return  50*(1+this.parents.length)+ this.openParents.reduce(function (p, v) {\n        return ( v.isOpen && this.parents.find(item => item.id === v.id) ? p+=(this.children_task.filter(item => (item.parent.id === v.id)).length) : p );\n      }.bind(this), 0)*30+17;\n    },\n\n    workProps(){\n      return work => ({\n        width: ((100/3600*(new Date(work.workEnd) - new Date(work.workStart))/1000) >= 5 ? (100/3600*(new Date(work.workEnd) - new Date(work.workStart))/1000) : 0) + 'px',\n        left: (new Date(work.workStart) - new Date (work.workStart).setHours(0,0,0,0))/36/1000 + 'px',\n        background: '#6c7bfe',\n        position: 'absolute'\n      });\n    },\n\n    quantity(){\n      return task => this.taskWorks(task).reduce(function (p, v) {\n        return ( p += (new Date(v.workEnd).getTime() - new Date(v.workStart).getTime())/1000/60 );\n      }, 0);\n    },\n    formateQuantity(){\n      return quant => {\n        let mm = quant%60;\n        if (mm < 10) mm = '0' + mm;\n        let hh = quant/60>>0;\n        if (hh < 10) hh = '0' + hh;\n        // eslint-disable-next-line no-console\n        console.log(hh);\n        return  (hh+'').slice(0,2) + ':' + (mm+'').slice(0,2);\n      }\n    },\n    allTask(){\n      return this.parents.filter(item =>(this.taskWorks(item).length>0)).concat(this.children_task);\n    },\n    currentUser() {\n      return this.$store.state.auth.user;\n    },\n    isUserAdmin() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_ADMIN');\n      }\n\n      return false;\n    },\n    isUserManager() {\n      if (this.currentUser && this.currentUser.roles) {\n        return this.currentUser.roles.includes('ROLE_MANAGER');\n      }\n\n      return false;\n    }\n  },\n  mounted() {\n    UserService.getTasks().then(\n        response => {\n          this.tasks = response.data;\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    UserService.getWorksByUser(this.currentUser.id).then(\n        response => {\n          this.works = response.data;\n        },\n        error => {\n          this.content =\n              (error.response && error.response.data && error.response.data.message) ||\n              error.message ||\n              error.toString();\n        }\n    );\n    if (!this.currentUser) {\n      this.$router.push('/login');\n    }\n  },\n  methods: {\n    open(task){\n      let parent = this.openParents.find(item => item.id === task.id);\n      if (parent) {\n        parent.isOpen = !parent.isOpen;\n        this.openParents.splice(this.openParents.findIndex(item => item.id === parent.id), 1, parent);\n      } else {\n        this.openParents.push({id: task.id, isOpen: true})\n      }\n\n    },\n    children(parent){\n      // eslint-disable-next-line no-console\n      console.log();\n\n\n\n      return this.children_task.filter(item => (item.parent.id === parent.id))\n    },\n    children_open(parent){\n      if (this.openParents.find(item => item.id === parent.id) &&\n          this.openParents.find(item => item.id === parent.id).isOpen){\n        return this.children(parent);\n      }\n      else return [];\n    },\n    openWorkEdit(work){\n      if (work === 0) {this.work = {}}\n      else {\n        this.work = {}\n        Object.assign(this.work, work);\n      }\n      this.isWorkHidden = false;\n    },\n    openEdit(task){\n      if (task === 0) {this.task = {}}\n      else {\n        this.task = {}\n        Object.assign(this.task, task);\n      }\n      this.isHidden = false;\n\n    },\n    post(task){\n      this.tasks.push(task);\n      Object.assign(this.task, task);\n    },\n    put(task){\n      this.tasks.splice(this.tasks.findIndex(item => item.id == task.id), 1, task);\n\n    },\n    del(task){\n      this.tasks.splice(this.tasks.findIndex(item => item.id === task.id),1);\n    },\n    workPost(work){\n      this.works.push(work);\n      Object.assign(this.work, work);\n    },\n    workPut(work){\n      this.works.splice(this.works.findIndex(item => item.id == work.id), 1, work);\n\n    },\n    workDel(work){\n      this.works.splice(this.works.findIndex(item => item.id === work.id),1);\n    },\n    test(){\n\n    }\n  }\n};\n</script>"]}]}