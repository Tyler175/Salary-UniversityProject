{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue?vue&type=template&id=3e0f15fe&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue","mtime":1634772343670},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"cover\" }, [\n    _c(\"div\", { staticClass: \"editor\" }, [\n      _c(\"input\", {\n        staticClass: \"close\",\n        attrs: { type: \"button\", value: \"Х\" },\n        on: {\n          click: function($event) {\n            return _vm.$emit(\"hide\")\n          }\n        }\n      }),\n      _c(\"div\", { staticClass: \"fields\" }, [\n        _c(\"div\", { staticClass: \"row\" }, [\n          _c(\"h1\", [_vm._v(\"Название задачи\")]),\n          _c(\"input\", {\n            directives: [\n              {\n                name: \"model\",\n                rawName: \"v-model\",\n                value: _vm.task.taskComplete,\n                expression: \"task.taskComplete\"\n              }\n            ],\n            staticClass: \"check-mark\",\n            attrs: { disabled: _vm.allowToEdit, type: \"checkbox\" },\n            domProps: {\n              checked: Array.isArray(_vm.task.taskComplete)\n                ? _vm._i(_vm.task.taskComplete, null) > -1\n                : _vm.task.taskComplete\n            },\n            on: {\n              change: function($event) {\n                var $$a = _vm.task.taskComplete,\n                  $$el = $event.target,\n                  $$c = $$el.checked ? true : false\n                if (Array.isArray($$a)) {\n                  var $$v = null,\n                    $$i = _vm._i($$a, $$v)\n                  if ($$el.checked) {\n                    $$i < 0 &&\n                      _vm.$set(_vm.task, \"taskComplete\", $$a.concat([$$v]))\n                  } else {\n                    $$i > -1 &&\n                      _vm.$set(\n                        _vm.task,\n                        \"taskComplete\",\n                        $$a.slice(0, $$i).concat($$a.slice($$i + 1))\n                      )\n                  }\n                } else {\n                  _vm.$set(_vm.task, \"taskComplete\", $$c)\n                }\n              }\n            }\n          }),\n          _c(\"h2\", [_vm._v(\"Готово\")])\n        ]),\n        _c(\"input\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.task.taskName,\n              expression: \"task.taskName\"\n            },\n            {\n              name: \"validate\",\n              rawName: \"v-validate\",\n              value: \"required|max:100\",\n              expression: \"'required|max:100'\"\n            }\n          ],\n          attrs: { disabled: _vm.allowToEdit, type: \"text\", name: \"название\" },\n          domProps: { value: _vm.task.taskName },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.task, \"taskName\", $event.target.value)\n            }\n          }\n        }),\n        _vm.errors.has(\"название\")\n          ? _c(\"div\", { staticClass: \"alert-error\" }, [\n              _vm._v(\n                _vm._s(_vm.errors.first(\"название\").replace(\"название \", \"\"))\n              )\n            ])\n          : _vm._e()\n      ]),\n      _c(\"div\", { staticClass: \"fields\" }, [\n        _c(\"h3\", [_vm._v(\"Описание задачи\")]),\n        _c(\"textarea\", {\n          directives: [\n            {\n              name: \"model\",\n              rawName: \"v-model\",\n              value: _vm.task.task_description,\n              expression: \"task.task_description\"\n            }\n          ],\n          attrs: { disabled: _vm.allowToEdit },\n          domProps: { value: _vm.task.task_description },\n          on: {\n            input: function($event) {\n              if ($event.target.composing) {\n                return\n              }\n              _vm.$set(_vm.task, \"task_description\", $event.target.value)\n            }\n          }\n        })\n      ]),\n      _c(\n        \"div\",\n        {\n          staticClass: \"fields\",\n          staticStyle: { \"max-width\": \"600px\", \"flex-direction\": \"row\" }\n        },\n        [\n          _c(\n            \"div\",\n            { staticStyle: { width: \"100%\", \"margin-right\": \"30px\" } },\n            [\n              _c(\"h3\", [_vm._v(\"Начало\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.task_start,\n                    expression: \"task_start\"\n                  }\n                ],\n                staticStyle: { height: \"40px\" },\n                attrs: {\n                  disabled: _vm.allowToEdit,\n                  type: \"date\",\n                  min: \"2015-01-01\",\n                  max: \"2030-01-01\"\n                },\n                domProps: { value: _vm.task_start },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.task_start = $event.target.value\n                  }\n                }\n              })\n            ]\n          ),\n          _c(\n            \"div\",\n            { staticStyle: { width: \"100%\", \"margin-right\": \"30px\" } },\n            [\n              _c(\"h3\", [_vm._v(\"Конец\")]),\n              _c(\"input\", {\n                directives: [\n                  {\n                    name: \"model\",\n                    rawName: \"v-model\",\n                    value: _vm.task_end,\n                    expression: \"task_end\"\n                  }\n                ],\n                staticStyle: { height: \"40px\" },\n                attrs: {\n                  disabled: _vm.allowToEdit,\n                  type: \"date\",\n                  min: \"2015-01-01\",\n                  max: \"2030-01-01\"\n                },\n                domProps: { value: _vm.task_end },\n                on: {\n                  input: function($event) {\n                    if ($event.target.composing) {\n                      return\n                    }\n                    _vm.task_end = $event.target.value\n                  }\n                }\n              })\n            ]\n          )\n        ]\n      ),\n      _vm.dateCompare\n        ? _c(\"div\", { staticClass: \"alert-error\" }, [\n            _vm._v(_vm._s(_vm.dateCompare))\n          ])\n        : _vm._e(),\n      _vm.option === \"project\"\n        ? _c(\n            \"div\",\n            {\n              staticClass: \"row\",\n              staticStyle: { \"align-items\": \"flex-start\" }\n            },\n            [\n              _c(\"div\", [\n                _vm._m(0),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\"div\", { staticClass: \"column\" }, [\n                    _vm.workerInfos.length > 0\n                      ? _c(\n                          \"div\",\n                          { staticClass: \"select\" },\n                          _vm._l(_vm.workerInfos, function(user) {\n                            return _c(\n                              \"div\",\n                              { key: user.id, staticClass: \"employes\" },\n                              [\n                                _c(\"div\", [\n                                  _vm._v(\n                                    _vm._s(user.username) +\n                                      \" - \" +\n                                      _vm._s(user.email)\n                                  )\n                                ]),\n                                !_vm.allowToEdit\n                                  ? _c(\n                                      \"div\",\n                                      {\n                                        staticClass: \"cross2\",\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.delWorker(user)\n                                          }\n                                        }\n                                      },\n                                      [_vm._v(\"x\")]\n                                    )\n                                  : _vm._e()\n                              ]\n                            )\n                          }),\n                          0\n                        )\n                      : _vm._e(),\n                    _c(\"input\", {\n                      directives: [\n                        {\n                          name: \"autowidth\",\n                          rawName: \"v-autowidth\",\n                          value: {\n                            maxWidth: \"700px\",\n                            minWidth: \"505px\",\n                            comfortZone: 0\n                          },\n                          expression:\n                            \"{maxWidth: '700px', minWidth: '505px', comfortZone: 0}\"\n                        },\n                        {\n                          name: \"model\",\n                          rawName: \"v-model\",\n                          value: _vm.findUser,\n                          expression: \"findUser\"\n                        }\n                      ],\n                      staticClass: \"select\",\n                      attrs: {\n                        disabled: _vm.allowToEdit,\n                        type: \"text\",\n                        maxlength: \"50\"\n                      },\n                      domProps: { value: _vm.findUser },\n                      on: {\n                        input: function($event) {\n                          if ($event.target.composing) {\n                            return\n                          }\n                          _vm.findUser = $event.target.value\n                        }\n                      }\n                    }),\n                    _vm.findUsers.length > 0\n                      ? _c(\n                          \"select\",\n                          {\n                            staticClass: \"select\",\n                            staticStyle: { \"margin-top\": \"-2px\" },\n                            attrs: {\n                              multiple: \"\",\n                              size:\n                                _vm.findUsers.length > 0\n                                  ? _vm.findUsers.length < 6\n                                    ? _vm.findUsers.length\n                                    : 5\n                                  : 1\n                            }\n                          },\n                          _vm._l(_vm.findUsers, function(user) {\n                            return _c(\n                              \"option\",\n                              {\n                                key: user.id,\n                                on: {\n                                  click: function($event) {\n                                    return _vm.addWorker(user)\n                                  }\n                                }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(user.username) +\n                                    \" - \" +\n                                    _vm._s(user.email)\n                                )\n                              ]\n                            )\n                          }),\n                          0\n                        )\n                      : _vm._e()\n                  ])\n                ])\n              ]),\n              _c(\"div\", [\n                _vm._m(1),\n                _c(\"div\", { staticClass: \"row\" }, [\n                  _c(\n                    \"div\",\n                    { staticClass: \"column\" },\n                    _vm._l(_vm.plans, function(plan) {\n                      return _c(\"div\", { key: plan.user.id }, [\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: plan.plan,\n                              expression: \"plan.plan\"\n                            }\n                          ],\n                          staticClass: \"select employes\",\n                          staticStyle: { border: \"none\", width: \"60%\" },\n                          attrs: { disabled: _vm.allowToEdit, type: \"number\" },\n                          domProps: { value: plan.plan },\n                          on: {\n                            input: [\n                              function($event) {\n                                if ($event.target.composing) {\n                                  return\n                                }\n                                _vm.$set(plan, \"plan\", $event.target.value)\n                              },\n                              function($event) {\n                                return _vm.changePlan(plan)\n                              }\n                            ]\n                          }\n                        })\n                      ])\n                    }),\n                    0\n                  )\n                ])\n              ])\n            ]\n          )\n        : _vm._e(),\n      !_vm.allowToEdit\n        ? _c(\"div\", { staticClass: \"row\" }, [\n            _c(\"div\", { staticClass: \"button-g\", on: { click: _vm.save } }, [\n              _vm._v(\"Сохранить\")\n            ]),\n            _c(\n              \"div\",\n              {\n                staticClass: \"button-b\",\n                on: {\n                  click: function($event) {\n                    return _vm.$emit(\"hide\")\n                  }\n                }\n              },\n              [_vm._v(\"Отменить\")]\n            ),\n            _vm.task.id\n              ? _c(\n                  \"div\",\n                  { staticClass: \"button-r\", on: { click: _vm.deleteTask } },\n                  [_vm._v(\"Удалить\")]\n                )\n              : _vm._e()\n          ])\n        : _vm._e(),\n      _vm._v(\"\\n    \" + _vm._s(_vm.message) + \"\\n\\n  \")\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"h2\", { staticStyle: { margin: \"5px\" } }, [_vm._v(\"Исполнители\")])\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"h2\", { staticStyle: { margin: \"5px\" } }, [_vm._v(\"План\")]),\n      _vm._v(\" (часов)\")\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}