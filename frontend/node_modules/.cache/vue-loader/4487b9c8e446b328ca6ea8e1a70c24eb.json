{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\absenceEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\absenceEditor.vue","mtime":1637971833262},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport DatePicker from 'vue2-datepicker';\r\nimport 'vue2-datepicker/index.css';\r\nimport 'vue2-datepicker/locale/es/ru.js';\r\nimport UserService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  name: \"absenceEditor\",\r\n  props: ['absence', 'userToEdit', 'success', 'close', 'isUserAccountant'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n\r\n      selectedDates: [],\r\n\r\n      selectedWorker: '',\r\n      selectedWorkerId: '',\r\n      workerFocus: false,\r\n      workers:[],\r\n\r\n      user:{},\r\n\r\n      lang: {\r\n        formatLocale: {\r\n          months: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\r\n        }\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    DatePicker\r\n  },\r\n  computed:{\r\n    isCreate(){\r\n      return !(this.absence && this.absence.id)\r\n    },\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    }\r\n  },\r\n  methods:{\r\n    deactivateWorkerFocus(){\r\n      this.selectedWorker =\r\n          this.workers.length && this.selectedWorker ? this.workers[0].lastName + ' ' + this.workers[0].firstName + ' ' + this.workers[0].patronymic\r\n          : (this.user.id ? this.user.lastName + ' ' + this.user.firstName + ' ' + this.user.patronymic : '');\r\n      this.selectedWorkerId = this.workers.length && this.selectedWorker ? this.workers[0].id : (this.user ? this.user.id : '');\r\n      this.workerFocus = false;\r\n    },\r\n    changeUser(){\r\n\r\n      if (!this.user.id){\r\n        this.workers.find(i => i.id === this.selectedWorkerId).workerInfo.absences = [this.absence];\r\n        this.user = this.isUserAccountant ? this.workers.find(i => i.id === this.selectedWorkerId) : this.currentUser;\r\n      } else {\r\n        this.user.workerInfo.absences  = [this.absence];\r\n      }\r\n\r\n\r\n      //you need validate form first\r\n      //set id after save new one and change method to edit OR close window\r\n      //show message after successful post/put\r\n      //also you forgot about update list when you add new absence of edit existing\r\n      UserService.changeUser(this.user.id, this.user).then(\r\n          response => {\r\n\r\n            this.success(response.data.id, response.data.workerInfo.absences.find(i => new Date(i.startDate).getTime() === new Date(this.absence.startDate).getTime()));\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n    getUsersByName(){\r\n      UserService.getUsersByName(this.selectedWorker).then(\r\n          response => {\r\n            this.workers = response.data.filter(i => i.workerInfo);\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n    if (this.userToEdit || !this.isUserAccountant){\r\n      UserService.getUser(this.userToEdit ? this.userToEdit : this.currentUser.id).then(\r\n          response => {\r\n            this.user = response.data;\r\n            if (this.absence.id){\r\n              this.selectedDates = [new Date(this.absence.startDate),new Date(this.absence.endDate)];\r\n              this.selectedWorker = this.user.lastName + ' ' + this.user.firstName + ' ' + this.user.patronymic;\r\n              this.selectedWorkerId = this.user.id;\r\n            }\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n}\r\n",{"version":3,"sources":["absenceEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA","file":"absenceEditor.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\r\n  <div>\r\n    <div class=\"cover\" @click=\"close()\"></div>\r\n\r\n    <div class=\"absence-editor\">\r\n      <div>\r\n        {{isCreate ? 'Добавить' : 'Изменить'}} информацию о пропуске\r\n        <span class=\"material-icons close-icon\" @click=\"close()\">close</span>\r\n      </div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"column\">\r\n          <div class=\"row user-info\">Период пропуска:</div>\r\n          <div v-if=\"isUserAccountant\" class=\"row user-info\">Сотрудник:</div>\r\n        </div>\r\n        <div class=\"column\">\r\n          <div class=\"row\" style=\"margin: 8px 0\">\r\n            <date-picker v-model=\"selectedDates\"\r\n                         @change=\"absence.startDate = selectedDates[0];\r\n                                    absence.endDate = selectedDates[1];\"\r\n                         style=\"outline: 0;\r\n                              width: 280px;\r\n                              border: 1px solid #dce1e6;\r\n                              border-radius: 3px;\r\n                              padding: 6px 12px;\"\r\n                         type=\"date\"\r\n                         :range=true\r\n                         range-separator = \" - \"\r\n                         format=\"DD MMMM YYYY\"\r\n                         :lang=\"lang\"\r\n                         :clearable = \"false\"\r\n                         input-class=\"date-picker kludge\"\r\n                         placeholder=\"Выбрать\">\r\n            </date-picker>\r\n          </div>\r\n          <div v-if=\"isUserAccountant\" class=\"row\" v-click-outside=\"deactivateWorkerFocus\" style=\"margin: 8px 0; position: relative\">\r\n            <div style=\"position: relative; width: 100%\">\r\n              <input v-on:focus=\"workerFocus = true\" type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedWorker\" @input=\"getUsersByName()\">\r\n              <span class=\"material-icons close-icon\" @click=\"selectedWorker=''; selectedWorkerId='';\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n            </div>\r\n\r\n            <div v-if=\"selectedWorker && workerFocus && workers.length\" class=\"input-select\">\r\n              <div v-for=\"worker in workers\" :key=\"worker.id\" @click=\"selectedWorker=worker.firstName+worker.lastName+worker.patronymic; selectedWorkerId=worker.id; workerFocus=false;\">\r\n                {{worker.lastName}} {{worker.firstName}} {{worker.patronymic}}\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n      <div class=\"row\" style=\"align-items: flex-start\">\r\n        <div class=\"column\">\r\n          <div class=\"row user-info\" style=\"margin: 0\">Причина:</div>\r\n        </div>\r\n        <div class=\"column\" style=\"width: 100%\">\r\n          <textarea v-model=\"absence.reason\" class=\"border-input\"></textarea>\r\n        </div>\r\n      </div>\r\n      <div>\r\n        <div class=\"btn btn-thin\" @click=\"changeUser()\" style=\"margin: 0\">{{isCreate ? 'Добавить' : 'Изменить'}}</div> {{message}}\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport DatePicker from 'vue2-datepicker';\r\nimport 'vue2-datepicker/index.css';\r\nimport 'vue2-datepicker/locale/es/ru.js';\r\nimport UserService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  name: \"absenceEditor\",\r\n  props: ['absence', 'userToEdit', 'success', 'close', 'isUserAccountant'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n\r\n      selectedDates: [],\r\n\r\n      selectedWorker: '',\r\n      selectedWorkerId: '',\r\n      workerFocus: false,\r\n      workers:[],\r\n\r\n      user:{},\r\n\r\n      lang: {\r\n        formatLocale: {\r\n          months: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\r\n        }\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    DatePicker\r\n  },\r\n  computed:{\r\n    isCreate(){\r\n      return !(this.absence && this.absence.id)\r\n    },\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    }\r\n  },\r\n  methods:{\r\n    deactivateWorkerFocus(){\r\n      this.selectedWorker =\r\n          this.workers.length && this.selectedWorker ? this.workers[0].lastName + ' ' + this.workers[0].firstName + ' ' + this.workers[0].patronymic\r\n          : (this.user.id ? this.user.lastName + ' ' + this.user.firstName + ' ' + this.user.patronymic : '');\r\n      this.selectedWorkerId = this.workers.length && this.selectedWorker ? this.workers[0].id : (this.user ? this.user.id : '');\r\n      this.workerFocus = false;\r\n    },\r\n    changeUser(){\r\n\r\n      if (!this.user.id){\r\n        this.workers.find(i => i.id === this.selectedWorkerId).workerInfo.absences = [this.absence];\r\n        this.user = this.isUserAccountant ? this.workers.find(i => i.id === this.selectedWorkerId) : this.currentUser;\r\n      } else {\r\n        this.user.workerInfo.absences  = [this.absence];\r\n      }\r\n\r\n\r\n      //you need validate form first\r\n      //set id after save new one and change method to edit OR close window\r\n      //show message after successful post/put\r\n      //also you forgot about update list when you add new absence of edit existing\r\n      UserService.changeUser(this.user.id, this.user).then(\r\n          response => {\r\n\r\n            this.success(response.data.id, response.data.workerInfo.absences.find(i => new Date(i.startDate).getTime() === new Date(this.absence.startDate).getTime()));\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n    getUsersByName(){\r\n      UserService.getUsersByName(this.selectedWorker).then(\r\n          response => {\r\n            this.workers = response.data.filter(i => i.workerInfo);\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    }\r\n  },\r\n  mounted() {\r\n\r\n    if (this.userToEdit || !this.isUserAccountant){\r\n      UserService.getUser(this.userToEdit ? this.userToEdit : this.currentUser.id).then(\r\n          response => {\r\n            this.user = response.data;\r\n            if (this.absence.id){\r\n              this.selectedDates = [new Date(this.absence.startDate),new Date(this.absence.endDate)];\r\n              this.selectedWorker = this.user.lastName + ' ' + this.user.firstName + ' ' + this.user.patronymic;\r\n              this.selectedWorkerId = this.user.id;\r\n            }\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      )\r\n    }\r\n\r\n\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>"]}]}