{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Users.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Users.vue","mtime":1638119261720},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\nimport Menu from \"@/views/components/Menu\";\r\nimport Header from \"@/views/components/Header\";\r\nimport UserService from \"@/services/user.service\";\r\nimport userEditor from \"@/views/components/userEditor\";\r\n\r\n\r\nexport default {\r\n  name: \"Users\",\r\n  data(){\r\n    return{\r\n      message: '',\r\n\r\n      users: [],\r\n\r\n      selectedWorker: '',\r\n\r\n      selectedPosition: '',\r\n      selectedPositionId: '',\r\n      positionFocus: false,\r\n\r\n      workers:[],\r\n      positions:[],\r\n\r\n      isEditorActive: false,\r\n      userToEdit:{},\r\n      success: 0,\r\n\r\n      user: {\r\n        firstName: '',\r\n        profilePicture: '',\r\n        gender: false\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    'v-menu' : Menu,\r\n    'v-header': Header,\r\n    'v-userEdit': userEditor\r\n  },\r\n  computed: {\r\n    filteredUsers(){\r\n      return this.users\r\n          .filter(\r\n              i => i.workerInfo.position.name.startsWith(this.selectedPosition)\r\n              && (\r\n                      i.firstName.startsWith(this.selectedWorker)\r\n                      || i.lastName.startsWith(this.selectedWorker)\r\n                      || i.patronymic.startsWith(this.selectedWorker)\r\n                      || i.email.startsWith(this.selectedWorker)\r\n\r\n                  )\r\n          )\r\n    },\r\n\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    isUserAdmin() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ADMIN');\r\n      }\r\n\r\n      return false;\r\n    },\r\n    isUserAccountant() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ACCOUNTANT');\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    openEditor(user){\r\n      this.userToEdit = user.id;\r\n      this.isEditorActive = true;\r\n    },\r\n    closeEditor(){\r\n      this.isEditorActive = false;\r\n    },\r\n    async scrollToUser(number_slide){\r\n      let slide = this.$refs['user'+number_slide][0]\r\n\r\n      let count = 100;\r\n      let top = window.scrollY + slide.getBoundingClientRect().y;\r\n      let start_top = window.scrollY;\r\n\r\n      let delta = (top - start_top) / count;\r\n      for (let i=0;i<count; i++) {\r\n        await new Promise(resolve => {\r\n          window.setTimeout(function () {\r\n            resolve()\r\n          }, 1000 / count)\r\n        })\r\n        window.scrollTo(0, start_top + i*delta)\r\n      }\r\n    },\r\n    successEdit(user){\r\n      this.closeEditor();\r\n      let index = this.users.findIndex(i => i.id === user.id);\r\n      if (index === -1 && user.workerInfo) this.users.push(user);//if you want show SUCCESS message after add ACCOUNTANT, do it here\r\n      else this.users[index] = user;\r\n\r\n\r\n      this.success = user.id;\r\n      setTimeout(()=>this.success=0,1500)\r\n    },\r\n\r\n\r\n\r\n    deactivatePositionFocus(){\r\n      this.selectedPosition = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).name : ''\r\n      this.selectedPositionId = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).id : ''\r\n      this.positionFocus = false;\r\n    },\r\n\r\n    changeUser(){\r\n      UserService.changeUser(this.currentUser.id, this.user).then(\r\n          response => {\r\n            response.data;\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n    deleteUser(userId){\r\n      UserService.deleteUser(userId).then(\r\n          response => {\r\n            response.data;\r\n            let index = this.users.findIndex(i => i.id === userId);\r\n            this.users.splice(index, 1);\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      )\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.currentUser) {\r\n      this.$router.push('/login');\r\n    }\r\n    UserService.getUser(this.currentUser.id).then(\r\n        response => {\r\n          this.user = response.data;\r\n          this.user.birthday = new Date(response.data.birthday);\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n    UserService.getAllUsers().then(\r\n        response => {\r\n          this.users = response.data.filter(i => i.workerInfo);\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n    UserService.getPositions().then(\r\n        response => {\r\n          this.positions = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n  },\r\n  updated(){\r\n    if (this.success){\r\n      this.scrollToUser(this.success);\r\n    }\r\n  }\r\n}\r\n",{"version":3,"sources":["Users.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiFA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Users.vue","sourceRoot":"src/views","sourcesContent":["<template>\r\n  <div v-if=\"currentUser\">\r\n    <v-header\r\n        v-bind:user=\"{\r\n        firstName: user.firstName,\r\n        profilePicture: user.profilePicture,\r\n        gender: user.gender\r\n      }\">\r\n    </v-header>\r\n\r\n    <v-userEdit v-if=\"isEditorActive\"\r\n                   :userToEdit = \"userToEdit\"\r\n                   :success = \"successEdit\"\r\n                   :close=\"closeEditor\"></v-userEdit>\r\n\r\n    <div class=\"container\">\r\n      <v-menu></v-menu>\r\n\r\n      <div class=\"content\" style=\"width: calc(80% - 15% - 285px + 245px)\">\r\n\r\n        <h1 class=\"h1\">Список пользователей</h1>\r\n        <div class=\"separator\"></div>\r\n        <div class=\"row\" style=\"align-items: flex-start;\">\r\n          <div class=\"column\">\r\n            <div class=\"row user-info\">Должность:</div>\r\n            <div class=\"row user-info\">Имя пользователя:</div>\r\n          </div>\r\n          <div class=\"column\" style=\"width: 300px\">\r\n            <div class=\"row\"  v-click-outside=\"deactivatePositionFocus\" style=\"margin: 8px 0; position: relative\">\r\n              <div style=\"position: relative; width: 100%\">\r\n                <input v-on:focus=\"positionFocus = true\" type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedPosition\">\r\n                <span class=\"material-icons close-icon\" @click=\"selectedPosition=''; selectedPositionId='';\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n              </div>\r\n\r\n              <div v-if=\"positionFocus && positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase())).length\" class=\"input-select\">\r\n                <div v-for=\"position in positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase()))\" :key=\"position.id\" @click=\"selectedPosition=position.name; selectedPositionId=position.id; positionFocus=false; getAbsences()\">{{position.name}}</div>\r\n              </div>\r\n            </div>\r\n            <div class=\"row\" style=\"margin: 8px 0;\">\r\n              <div style=\"position: relative; width: 100%\">\r\n                <input type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedWorker\">\r\n                <span class=\"material-icons close-icon\" @click=\"selectedWorker=''\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" style=\"margin: 10px 15px 10px auto\"><div class=\"btn btn-thin\" style=\"margin: 0\" @click=\"openEditor({})\">Добавить пользователя</div></div>\r\n        </div>\r\n        <div class=\"separator\"></div>\r\n        <div class=\"row\">\r\n          <div v-if=\"users.length\" style=\"width: 100%;\">\r\n\r\n            <div class=\"userAbsences\" @click=\"openEditor(user)\"\r\n                 v-bind:style=\"success === user.id ? 'box-shadow: 0 2px 0 0 #a3dba8, 0 0 0 2px #b3eec1;': 'box-shadow: 0 1px 0 0 #dce1e6, 0 0 0 1px #e7e8ec;'\"\r\n                 :ref=\"'user'+user.id\"\r\n                 v-for=\"user in filteredUsers\" :key=\"user.id\">\r\n\r\n              <img :src=\"user.profilePicture ?\r\n                             require('../../public/images/store/'+user.profilePicture) :\r\n                             require('../../public/images/default'+(user.gender ? 'Woman':'Man')+'.png')\"\r\n                   v-bind:alt=\"user.firstName\"/>\r\n\r\n              <div class=\"column\" style=\"justify-content: space-between\">\r\n                <div style=\"margin-bottom: 12px; width: max-content\">{{user.lastName}} {{user.firstName}} {{user.patronymic}}</div>\r\n                <div style=\"width: max-content\">{{user.workerInfo ? user.workerInfo.position.name : 'Бухгалтер'}}</div>\r\n              </div>\r\n\r\n              <div style=\"margin-left: auto;\">\r\n                <span v-on:click.stop=\"deleteUser(user.id)\" class=\"material-icons close-icon\">close</span>\r\n              </div>\r\n            </div>\r\n\r\n          </div>\r\n          <div style=\"padding-left: 15px\" v-else>По выбранным критериям пользователей не найдено</div>\r\n        </div>\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Menu from \"@/views/components/Menu\";\r\nimport Header from \"@/views/components/Header\";\r\nimport UserService from \"@/services/user.service\";\r\nimport userEditor from \"@/views/components/userEditor\";\r\n\r\n\r\nexport default {\r\n  name: \"Users\",\r\n  data(){\r\n    return{\r\n      message: '',\r\n\r\n      users: [],\r\n\r\n      selectedWorker: '',\r\n\r\n      selectedPosition: '',\r\n      selectedPositionId: '',\r\n      positionFocus: false,\r\n\r\n      workers:[],\r\n      positions:[],\r\n\r\n      isEditorActive: false,\r\n      userToEdit:{},\r\n      success: 0,\r\n\r\n      user: {\r\n        firstName: '',\r\n        profilePicture: '',\r\n        gender: false\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    'v-menu' : Menu,\r\n    'v-header': Header,\r\n    'v-userEdit': userEditor\r\n  },\r\n  computed: {\r\n    filteredUsers(){\r\n      return this.users\r\n          .filter(\r\n              i => i.workerInfo.position.name.startsWith(this.selectedPosition)\r\n              && (\r\n                      i.firstName.startsWith(this.selectedWorker)\r\n                      || i.lastName.startsWith(this.selectedWorker)\r\n                      || i.patronymic.startsWith(this.selectedWorker)\r\n                      || i.email.startsWith(this.selectedWorker)\r\n\r\n                  )\r\n          )\r\n    },\r\n\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    isUserAdmin() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ADMIN');\r\n      }\r\n\r\n      return false;\r\n    },\r\n    isUserAccountant() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ACCOUNTANT');\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    openEditor(user){\r\n      this.userToEdit = user.id;\r\n      this.isEditorActive = true;\r\n    },\r\n    closeEditor(){\r\n      this.isEditorActive = false;\r\n    },\r\n    async scrollToUser(number_slide){\r\n      let slide = this.$refs['user'+number_slide][0]\r\n\r\n      let count = 100;\r\n      let top = window.scrollY + slide.getBoundingClientRect().y;\r\n      let start_top = window.scrollY;\r\n\r\n      let delta = (top - start_top) / count;\r\n      for (let i=0;i<count; i++) {\r\n        await new Promise(resolve => {\r\n          window.setTimeout(function () {\r\n            resolve()\r\n          }, 1000 / count)\r\n        })\r\n        window.scrollTo(0, start_top + i*delta)\r\n      }\r\n    },\r\n    successEdit(user){\r\n      this.closeEditor();\r\n      let index = this.users.findIndex(i => i.id === user.id);\r\n      if (index === -1 && user.workerInfo) this.users.push(user);//if you want show SUCCESS message after add ACCOUNTANT, do it here\r\n      else this.users[index] = user;\r\n\r\n\r\n      this.success = user.id;\r\n      setTimeout(()=>this.success=0,1500)\r\n    },\r\n\r\n\r\n\r\n    deactivatePositionFocus(){\r\n      this.selectedPosition = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).name : ''\r\n      this.selectedPositionId = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).id : ''\r\n      this.positionFocus = false;\r\n    },\r\n\r\n    changeUser(){\r\n      UserService.changeUser(this.currentUser.id, this.user).then(\r\n          response => {\r\n            response.data;\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n    deleteUser(userId){\r\n      UserService.deleteUser(userId).then(\r\n          response => {\r\n            response.data;\r\n            let index = this.users.findIndex(i => i.id === userId);\r\n            this.users.splice(index, 1);\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      )\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.currentUser) {\r\n      this.$router.push('/login');\r\n    }\r\n    UserService.getUser(this.currentUser.id).then(\r\n        response => {\r\n          this.user = response.data;\r\n          this.user.birthday = new Date(response.data.birthday);\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n    UserService.getAllUsers().then(\r\n        response => {\r\n          this.users = response.data.filter(i => i.workerInfo);\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n    UserService.getPositions().then(\r\n        response => {\r\n          this.positions = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n  },\r\n  updated(){\r\n    if (this.success){\r\n      this.scrollToUser(this.success);\r\n    }\r\n  }\r\n}\r\n</script>"]}]}