{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Absences.vue?vue&type=style&index=0&id=246c7d10&scoped=true&lang=css&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\Absences.vue","mtime":1638120451113},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\css-loader\\index.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n.mx-datepicker{\n  width: fit-content;\n}\n.user-info{\n  width: fit-content;\n  margin-right: 15px;\n}\n\n",{"version":3,"sources":["Absences.vue"],"names":[],"mappings":";AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"Absences.vue","sourceRoot":"src/views","sourcesContent":["<style scoped>\r\n  .mx-datepicker{\r\n    width: fit-content;\r\n  }\r\n  .user-info{\r\n    width: fit-content;\r\n    margin-right: 15px;\r\n  }\r\n\r\n</style>\r\n<template>\r\n  <div v-if=\"currentUser\">\r\n    <v-header\r\n        v-bind:user=\"{\r\n        firstName: user.firstName,\r\n        profilePicture: user.profilePicture,\r\n        gender: user.gender\r\n      }\">\r\n    </v-header>\r\n\r\n    <v-absenceEdit v-if=\"isEditorActive\"\r\n                   :absence=\"absenceToEdit\"\r\n                   :userToEdit = \"userToEdit\"\r\n                   :success = \"successEdit\"\r\n                   :close=\"closeEditor\"\r\n                   :isUserAccountant=\"isUserAccountant\"></v-absenceEdit>\r\n\r\n    <div class=\"container\">\r\n      <v-menu></v-menu>\r\n\r\n      <div class=\"content\" style=\"width: calc(80% - 15% - 285px + 245px);\">\r\n        <h1 class=\"h1\">Пропуски работы</h1>\r\n        <div class=\"separator\"></div>\r\n        <div class=\"row\" style=\"align-items: flex-start\">\r\n          <div class=\"column\">\r\n            <div class=\"row user-info\">Показать пропуски за период:</div>\r\n            <div v-if=\"isUserAccountant\" class=\"row user-info\">Сотрудник:</div>\r\n            <div v-if=\"isUserAccountant\" class=\"row user-info\">Должность:</div>\r\n          </div>\r\n          <div class=\"column\">\r\n            <div class=\"row\" style=\"margin: 8px 0\">\r\n              <date-picker v-model=\"selectedDates\"\r\n                           @change=\"getAbsences\"\r\n                           style=\"outline: 0;\r\n                              width: 280px;\r\n                              border: 1px solid #dce1e6;\r\n                              border-radius: 3px;\r\n                              padding: 6px 12px;\"\r\n                           type=\"month\"\r\n                           :range=true\r\n                           range-separator = \" - \"\r\n                           format=\"MMMM YYYY\"\r\n                           :lang=\"lang\"\r\n                           :clearable = \"false\"\r\n                           input-class=\"date-picker kludge\"\r\n                           placeholder=\"Выбрать\">\r\n              </date-picker>\r\n            </div>\r\n            <!-- it should be the component because you copy paste this fragment at least three times-->\r\n            <div v-if=\"isUserAccountant\" class=\"row\" v-click-outside=\"deactivateWorkerFocus\" style=\"margin: 8px 0; position: relative\">\r\n              <div style=\"position: relative; width: 100%\">\r\n                <input v-on:focus=\"workerFocus = true\" type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedWorker\" @input=\"getUsersByName()\">\r\n                <span class=\"material-icons close-icon\" @click=\"selectedWorker=''; selectedWorkerId=''; getAbsences()\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n              </div>\r\n\r\n              <div v-if=\"selectedWorker && workerFocus && workers.length\" class=\"input-select\">\r\n                <div v-for=\"worker in workers\" :key=\"worker.id\" @click=\"selectedWorker=worker.firstName+worker.lastName+worker.patronymic; selectedWorkerId=worker.id; workerFocus=false; getAbsences()\">\r\n                  {{worker.lastName}} {{worker.firstName}} {{worker.patronymic}}\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div v-if=\"isUserAccountant\" class=\"row\" v-click-outside=\"deactivatePositionFocus\" style=\"margin: 8px 0; position: relative\">\r\n              <div style=\"position: relative; width: 100%\">\r\n                <input v-on:focus=\"positionFocus = true\" type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedPosition\">\r\n                <span class=\"material-icons close-icon\" @click=\"selectedPosition=''; selectedPositionId=''; getAbsences()\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n              </div>\r\n\r\n              <div v-if=\"positionFocus && positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase())).length\" class=\"input-select\">\r\n                <div v-for=\"position in positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase()))\" :key=\"position.id\" @click=\"selectedPosition=position.name; selectedPositionId=position.id; positionFocus=false; getAbsences()\">{{position.name}}</div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div class=\"row\" style=\"margin: 10px 15px 10px auto\"><div class=\"btn btn-thin\" style=\"margin: 0\" @click=\"openEditor({})\">Добавить информацию о пропусках</div></div>\r\n        </div>\r\n\r\n        <div class=\"separator\"></div>\r\n        <div class=\"row\">\r\n          <div v-if=\"usersAbsences.length\" style=\"width: 100%;\">\r\n            <div v-for=\"userAbsences in usersAbsences\" :key=\"userAbsences.id\">\r\n              <div class=\"userAbsences\" @click=\"openEditor(absence, userAbsences)\"\r\n                   v-bind:style=\"success === absence.id ? 'box-shadow: 0 2px 0 0 #a3dba8, 0 0 0 2px #b3eec1;': 'box-shadow: 0 1px 0 0 #dce1e6, 0 0 0 1px #e7e8ec;'\"\r\n                   :ref=\"'absence'+absence.id\"\r\n                   v-for=\"absence in userAbsences.workerInfo.absences\" :key=\"absence.id\">\r\n\r\n                <img :src=\"userAbsences.profilePicture ?\r\n                             require('../../public/images/store/'+userAbsences.profilePicture) :\r\n                             require('../../public/images/default'+(userAbsences.gender ? 'Woman':'Man')+'.png')\"\r\n                     v-bind:alt=\"userAbsences.firstName\"/>\r\n\r\n                <div class=\"column\" style=\"justify-content: space-between\">\r\n                  <div style=\"margin-bottom: 12px; width: max-content\">{{userAbsences.lastName}} {{userAbsences.firstName}} {{userAbsences.patronymic}}</div>\r\n                  <div style=\"width: max-content\">{{new Date(absence.startDate).toLocaleDateString()}} - {{new Date(absence.endDate).toLocaleDateString()}}</div>\r\n                </div>\r\n                <div style=\"margin-left: 30px\">Причина:</div>\r\n                <div style=\"margin-left: 10px; white-space: pre\">{{absence.reason}}</div>\r\n                <div style=\"margin-left: auto;\">\r\n                  <span v-on:click.stop=\"deleteAbsence(userAbsences.id,absence.id)\" class=\"material-icons close-icon\">close</span>\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n          <div style=\"padding-left: 15px\" v-else>За данный период пропусков не было</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport Menu from \"@/views/components/Menu\";\r\nimport Header from \"@/views/components/Header\";\r\nimport UserService from \"@/services/user.service\";\r\nimport absenceEditor from \"@/views/components/absenceEditor\";\r\n\r\nimport DatePicker from 'vue2-datepicker';\r\nimport 'vue2-datepicker/index.css';\r\nimport 'vue2-datepicker/locale/es/ru.js';\r\n\r\n\r\nexport default {\r\n  name: \"Absences\",\r\n  data(){\r\n    return{\r\n      message: '',\r\n      test: '',\r\n\r\n      selectedDates: [new Date(new Date()),new Date(new Date())],\r\n\r\n      isEditorActive: false,\r\n      absenceToEdit: {},\r\n      userToEdit:{},\r\n      success: 0,\r\n\r\n      selectedWorker: '',\r\n      selectedWorkerId: '',\r\n      workerFocus: false,\r\n\r\n      selectedPosition: '',\r\n      selectedPositionId: '',\r\n      positionFocus: false,\r\n\r\n      workers:[],\r\n      positions:[],\r\n      usersAbsences: [],\r\n\r\n      user:{\r\n        firstName: '',\r\n        profilePicture: '',\r\n        gender: false\r\n      },\r\n\r\n      lang: {\r\n        formatLocale: {\r\n          months: ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'],\r\n        }\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    DatePicker,\r\n    'v-menu' : Menu,\r\n    'v-header': Header,\r\n    'v-absenceEdit': absenceEditor\r\n  },\r\n  computed: {\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    isUserAdmin() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ADMIN');\r\n      }\r\n\r\n      return false;\r\n    },\r\n    isUserAccountant() {\r\n      if (this.currentUser && this.currentUser.roles) {\r\n        return this.currentUser.roles.includes('ROLE_ACCOUNTANT');\r\n      }\r\n\r\n      return false;\r\n    }\r\n  },\r\n  methods: {\r\n    deactivateWorkerFocus(){\r\n      this.selectedWorker = this.workers.length && this.selectedWorker ? this.workers[0].lastName + ' ' + this.workers[0].firstName + ' ' + this.workers[0].patronymic : '';\r\n      this.selectedWorkerId = this.workers.length && this.selectedWorker ? this.workers[0].id : '';\r\n      this.workerFocus = false;\r\n    },\r\n    deactivatePositionFocus(){\r\n      this.selectedPosition = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).name : ''\r\n      this.selectedPositionId = this.selectedPosition && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())) ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase())).id : ''\r\n      this.positionFocus = false;\r\n    },\r\n\r\n    openEditor(absence, user){\r\n      this.absenceToEdit = absence;\r\n      this.userToEdit = user ? user.id : '';\r\n      this.isEditorActive = true;\r\n    },\r\n    closeEditor(){\r\n      this.isEditorActive = false;\r\n    },\r\n    async scrollToAbsence(number_slide){\r\n      let slide = this.$refs['absence'+number_slide][0]\r\n\r\n      let count = 100;\r\n      let top = window.scrollY + slide.getBoundingClientRect().y;\r\n      let start_top = window.scrollY;\r\n\r\n      let delta = (top - start_top) / count;\r\n      for (let i=0;i<count; i++) {\r\n        await new Promise(resolve => {\r\n          window.setTimeout(function () {\r\n            resolve()\r\n          }, 1000 / count)\r\n        })\r\n        window.scrollTo(0, start_top + i*delta)\r\n      }\r\n    },\r\n    successEdit(userId, absence){\r\n      this.closeEditor();\r\n      let changedAbsences = this.usersAbsences.find(i => i.id === userId).workerInfo.absences;\r\n      if (!changedAbsences.find(i => i.id === absence.id)) changedAbsences.push(absence);\r\n\r\n\r\n      this.success = absence.id;\r\n      setTimeout(()=>this.success=0,1500)\r\n    },\r\n\r\n\r\n    getUsersByName(){\r\n      UserService.getUsersByName(this.selectedWorker).then(\r\n          response => {\r\n            this.workers = response.data.filter(i => i.workerInfo);\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n\r\n    getAbsences(){\r\n      UserService.getAbsences(this.isUserAccountant ? this.selectedWorkerId : this.currentUser.id, this.selectedPositionId, this.selectedDates[0], this.selectedDates[1]).then(\r\n          response => {\r\n            this.usersAbsences = response.data;\r\n            this.usersAbsences.forEach(i => i.workerInfo.absences.sort((a1, a2) => new Date(a1.startDate).getTime() - new Date(a2.startDate).getTime()))\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n    },\r\n    deleteAbsence(userId, absenceId){\r\n      UserService.deleteAbsence(absenceId).then(\r\n          response => {\r\n            response.data;\r\n            let index = this.usersAbsences.find(i => i.id === userId).workerInfo.absences.findIndex(i => i.id === absenceId);\r\n            this.usersAbsences.find(i => i.id === userId).workerInfo.absences.splice(index, 1);\r\n\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      )\r\n    }\r\n\r\n  },\r\n  mounted() {\r\n    if (!this.currentUser) {\r\n      this.$router.push('/login');\r\n    }\r\n    UserService.getUser(this.currentUser.id).then(\r\n        response => {\r\n          this.user = response.data;\r\n          this.user.birthday = new Date(response.data.birthday);\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n    UserService.getPositions().then(\r\n      response => {\r\n        this.positions = response.data;\r\n      },\r\n      error => {\r\n        this.message =\r\n            (error.response && error.response.data && error.response.data.message) ||\r\n            error.message ||\r\n            error.toString();\r\n      }\r\n    );\r\n    this.getAbsences();\r\n  },\r\n  updated(){\r\n    if (this.success){\r\n      this.scrollToAbsence(this.success);\r\n    }\r\n  }\r\n}\r\n</script>"]}]}