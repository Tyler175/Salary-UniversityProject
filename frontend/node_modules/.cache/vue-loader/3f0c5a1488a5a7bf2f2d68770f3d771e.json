{"remainingRequest":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\userEditor.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\src\\views\\components\\userEditor.vue","mtime":1638119093752},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\University\\SoftDevTech\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport DatePicker from 'vue2-datepicker';\r\nimport 'vue2-datepicker/index.css';\r\nimport 'vue2-datepicker/locale/es/ru.js';\r\nimport UserService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  name: \"userEditor\",\r\n  props: ['userToEdit', 'success', 'close'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n\r\n      newPassword: '',\r\n      checkedPassword: '',\r\n      successful: false,\r\n\r\n      selectFocus: false,\r\n      positionFocus: false,\r\n\r\n      selectedPosition: '',\r\n\r\n      positions:[],\r\n\r\n      user:{\r\n        id:'',\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        patronymic: '',\r\n\r\n        birthday: '',\r\n        gender: false,\r\n        profilePicture: '',\r\n\r\n        workerInfo: {\r\n          position: {},\r\n          maritalStatus: 0,\r\n          children: 0,\r\n        },\r\n\r\n        roles: [\r\n          {\r\n            id: 1,\r\n            name: 'ROLE_USER'\r\n          }\r\n        ]\r\n      },\r\n\r\n      lang: {\r\n        formatLocale: {\r\n          months: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\r\n        }\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    DatePicker\r\n  },\r\n  computed:{\r\n    isCreate(){\r\n      return !(this.userToEdit)\r\n    },\r\n\r\n    maritalStatus(){\r\n      return [\r\n        this.user.gender ? 'Не замужем': 'Не женат',\r\n        this.user.gender ? 'Замужем': 'Женат',\r\n        this.user.gender ? 'Разведена': 'Разведен'\r\n      ]\r\n    },\r\n\r\n\r\n    notSamePasswords () {\r\n      if (this.newPassword !== '') {\r\n        return (this.newPassword !== this.checkedPassword)\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n  },\r\n  methods:{\r\n    deactivateSelectFocus(){\r\n      this.selectFocus=false;\r\n    },\r\n    deactivatePositionFocus(){\r\n\r\n      this.user.workerInfo.position =\r\n          this.selectedPosition && this.positions.length && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase()))\r\n              ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase()))\r\n              : {};\r\n      this.positionFocus = false;\r\n    },\r\n\r\n    changeUser(){\r\n\r\n      if (this.isCreate){\r\n        this.user.password = this.newPassword;\r\n\r\n        if (this.user.roles.find(i => i.name==='ROLE_ACCOUNTANT')){\r\n          this.user.workerInfo = null;\r\n        }\r\n\r\n        this.$validator.validate().then(isValid => {\r\n          if (isValid && !this.notSamePasswords) {\r\n            this.$store.dispatch('auth/register', this.user).then(\r\n                data => {\r\n                  this.success(data);\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        UserService.changeUser(this.user.id, this.user).then(\r\n            response => {\r\n              this.success(response.data);\r\n            },\r\n            error => {\r\n              this.message =\r\n                  (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message ||\r\n                  error.toString();\r\n            }\r\n        );\r\n      }\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.isCreate){\r\n      UserService.getUser(this.userToEdit).then(\r\n          response => {\r\n            this.user = response.data;\r\n            this.user.birthday = new Date(this.user.birthday);\r\n            this.selectedPosition = this.user.workerInfo.position.name;\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n\r\n    }\r\n    UserService.getPositions().then(\r\n        response => {\r\n          this.positions = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n  }\r\n}\r\n",{"version":3,"sources":["userEditor.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2NA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"userEditor.vue","sourceRoot":"src/views/components","sourcesContent":["<style scoped>\r\n  input{\r\n    min-width: 300px;\r\n  }\r\n  .alert-error{\r\n    margin-left: 15px;\r\n  }\r\n</style>\r\n<template>\r\n  <div>\r\n    <div class=\"cover\" @click=\"close()\"></div>\r\n\r\n    <form class=\"absence-editor\" @submit.prevent=\"changeUser\">\r\n      <div>\r\n        {{isCreate ? 'Добавить пользователя' : 'Изменить информацию о пользователе'}}\r\n        <span class=\"material-icons close-icon\" @click=\"close()\">close</span>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"column\">\r\n          <div class=\"row user-info\">Фамилия пользователя:</div>\r\n          <div class=\"row user-info\">Имя пользователя:</div>\r\n          <div class=\"row user-info\">Отчество пользователя:</div>\r\n        </div>\r\n        <div class=\"column\">\r\n          <div class=\"row\" style=\"margin: 8px 0\">\r\n            <input class=\"border-input\" v-model=\"user.lastName\" v-validate=\"'required|max:30'\" name=\"фамилия\"/>\r\n          </div>\r\n          <div class=\"row\" style=\"margin: 8px 0\">\r\n            <input class=\"border-input\" v-model=\"user.firstName\" v-validate=\"'required|max:30'\" name=\"имя\"/>\r\n          </div>\r\n          <div class=\"row\" style=\"margin: 8px 0\">\r\n            <input class=\"border-input\" v-model=\"user.patronymic\" v-validate=\"'max:30'\" name=\"отчество\"/>\r\n          </div>\r\n\r\n        </div>\r\n      </div>\r\n\r\n\r\n      <div\r\n          v-if=\"errors.has('фамилия')\"\r\n          class=\"row alert-error\"\r\n      >{{errors.first('фамилия')}}</div>\r\n      <div\r\n          v-if=\"errors.has('имя')\"\r\n          class=\"row alert-error\"\r\n      >{{errors.first('имя')}}</div>\r\n\r\n\r\n\r\n      <div class=\"separator\"></div>\r\n\r\n      <div class=\"row\">\r\n        <div class=\"column\">\r\n          <div class=\"row user-info\">Email пользователя:</div>\r\n          <div class=\"row user-info\">День рождения:</div>\r\n          <div class=\"row user-info\">Пол:</div>\r\n        </div>\r\n        <div class=\"column\">\r\n          <div class=\"row\"  style=\"margin: 8px 0;\">\r\n            <input\r\n                v-model=\"user.email\"\r\n                v-validate=\"'required|email|max:50'\"\r\n                type=\"email\"\r\n                class=\"border-input\"\r\n                name=\"email\"\r\n            />\r\n          </div>\r\n          <div class=\"row\">\r\n            <date-picker v-model=\"user.birthday\"\r\n                         style=\"outline: 0;\r\n                              width: 274px;\r\n                              border: 1px solid #dce1e6;\r\n                              border-radius: 3px;\r\n                              padding: 6px 12px;\"\r\n                         type=\"date\"\r\n                         name = \"день рождения\"\r\n                         v-validate=\"'required'\"\r\n                         format=\"DD MMMM YYYY г.\" :lang=\"lang\"\r\n                         :clearable = \"false\"\r\n                         :confirm=\"true\"\r\n                         input-class=\"date-picker\"\r\n                         placeholder=\"Выбрать\">\r\n            </date-picker>\r\n          </div>\r\n          <div class=\"row\" style=\"margin: calc(15px - 5px) 0; text-align: center;\">\r\n              <span v-bind:style=\"[user.gender ? {'background': 'none'} : {'background': 'rgb(223, 230, 237)'}]\"\r\n                    @click=\"user.gender=false;\"\r\n                    class=\"material-icons square-border-button\">\r\n                man\r\n              </span>\r\n            <div style=\"width: 100px;\">{{user.gender ? 'Женский' : 'Мужской'}}</div>\r\n            <span v-bind:style=\"[user.gender ? {'background': 'rgb(223, 230, 237)'} : {'background': 'none'}]\"\r\n                  @click=\"user.gender=true;\"\r\n                  class=\"material-icons square-border-button\">\r\n                woman\r\n              </span>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div\r\n          v-if=\"errors.has('email')\"\r\n          class=\"row alert-error\"\r\n      >{{errors.first('email')}}</div>\r\n\r\n      <div\r\n          v-if=\"errors.has('день рождения')\"\r\n          class=\"row alert-error\"\r\n      >{{errors.first('день рождения')}}</div>\r\n\r\n      <div class=\"separator\"></div>\r\n      <div class=\"row\" v-if=\"user.roles\">\r\n        <div class=\"user-info\">Роль:</div>\r\n        <div class=\"row\" style=\"margin: calc(15px - 5px) 0; text-align: center;\">\r\n              <span v-bind:style=\"[user.roles.find(i => i.name==='ROLE_ACCOUNTANT') ? {'background': 'rgb(223, 230, 237)'} : {'background': 'none'}]\"\r\n                    @click=\"user.roles=[{id: 1, name: 'ROLE_USER'}, {id: 2, name: 'ROLE_ACCOUNTANT'}];\"\r\n\r\n                    class=\"material-icons square-border-button\">\r\n                account_balance\r\n              </span>\r\n          <div style=\"width: 100px;\">{{user.roles.find(i => i.name==='ROLE_ACCOUNTANT') ? 'Бухгалтер' : 'Сотрудник'}}</div>\r\n          <span v-bind:style=\"[user.roles.find(i => i.name==='ROLE_ACCOUNTANT') ? {'background': 'none'} : {'background': 'rgb(223, 230, 237)'}]\"\r\n                @click=\"user.roles=[{id: 1, name: 'ROLE_USER'}];\"\r\n                class=\"material-icons square-border-button\">\r\n                school\r\n              </span>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"user.workerInfo && !user.roles.find(i => i.name==='ROLE_ACCOUNTANT')\">\r\n        <div class=\"row\">\r\n          <div class=\"user-info\">Должность:</div>\r\n          <div class=\"row\"  v-click-outside=\"deactivatePositionFocus\" style=\"margin: 8px 0; position: relative\">\r\n            <div style=\"position: relative; width: 100%\">\r\n              <input v-on:focus=\"positionFocus = true\" type=\"text\" class=\"border-input\" style=\"width: 100%\" v-model=\"selectedPosition\">\r\n              <span class=\"material-icons close-icon\" @click=\"selectedPosition=''; selectedPositionId='';\" style=\"position: absolute; top:calc(50% - 10px); right:18px;\">close</span>\r\n            </div>\r\n\r\n            <div v-if=\"positionFocus && positions.length && positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase())).length\" class=\"input-select\">\r\n              <div v-for=\"position in positions.filter(i => i.name.toLowerCase().startsWith(selectedPosition.toLowerCase()))\" :key=\"position.id\" @click=\"selectedPosition=position.name; selectedPositionId=position.id; positionFocus=false;\">{{position.name}}</div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"user-info\">Семейное положение:</div>\r\n          <div class=\"row\">\r\n            <div v-click-outside=\"deactivateSelectFocus\" style=\"position: relative; width: fit-content; min-width: 6em; padding-right: 20px\">\r\n              <div @click=\"selectFocus=!selectFocus\" style=\"display: flex; justify-content: space-between;\">\r\n                <div style=\"margin-right: 5px\">{{maritalStatus[user.workerInfo ? (user.workerInfo.maritalStatus % 3):0]}}</div>\r\n                <span class=\"material-icons\" v-bind:style=\"{ 'padding-right': '0px', transform: 'rotate('+ (selectFocus ? '90':'0')+'deg)'}\">chevron_right</span>\r\n              </div>\r\n              <div class=\"select\" v-bind:style=\"[selectFocus ? {display:'block'} : {display: 'none'}]\">\r\n                <div @click=\"selectFocus=!selectFocus\">Placeholder</div>\r\n                <div v-for=\"(status, index) in maritalStatus\" :key=\"index\"\r\n                     @click=\"()=>{user.workerInfo.maritalStatus=index; deactivateSelectFocus();}\">\r\n                  {{status}}\r\n                </div>\r\n              </div>\r\n\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"user-info\">Количество детей:</div>\r\n          <div class=\"row\" style=\"padding-right: 20px\">\r\n            <div><span\r\n                style=\"display: block; background-color: rgb(223, 230, 237); border-radius: 3px; padding: 0; cursor: pointer\"\r\n                @click=\"()=>{if(user.workerInfo.children > 0) {user.workerInfo.children-=1;}}\"\r\n                class=\"material-icons unselectable\">remove</span>\r\n            </div>\r\n            <div style=\"padding: 0 10px; width: 100%; text-align: center\">{{user.workerInfo.children}}</div>\r\n            <div><span\r\n                style=\"display: block; background-color: rgb(223, 230, 237); border-radius: 3px; padding: 0; cursor: pointer\"\r\n                @click=\"()=>{if(user.workerInfo.children < 10) {user.workerInfo.children+=1;}}\"\r\n                class=\"material-icons unselectable\">add</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div v-if=\"isCreate\">\r\n        <div class=\"separator\"></div>\r\n\r\n        <div class=\"row\">\r\n          <div class=\"user-info\">Новый пароль:</div>\r\n          <input type=\"password\"\r\n                 class=\"border-input\"\r\n                 v-model=\"newPassword\" name=\"пароль\"\r\n                 v-validate=\"'required|min:6|max:40'\"/>\r\n        </div>\r\n        <div class=\"alert-error\" v-if=\"this.newPassword.includes(' ') && passwordFocus\">Пароль не может содержать пробелы</div>\r\n        <div\r\n            v-if=\"errors.has('пароль')\"\r\n            class=\"alert-error\"\r\n        >{{errors.first('пароль')}}</div>\r\n        <div\r\n            v-else-if=\"errors.has('пароль')\"\r\n            class=\"alert-error\">\r\n          {{errors.first('пароль')}}\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"user-info\">Повторите новый пароль:</div>\r\n          <input type=\"password\"\r\n                 class=\"border-input\"\r\n                 v-model=\"checkedPassword\"/>\r\n        </div>\r\n        <div v-if=\"notSamePasswords\" class=\"alert-error\">Пароли не совпадают</div>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div>\r\n        <button class=\"btn btn-thin\" style=\"margin: 0\">{{isCreate ? 'Добавить пользователя' : 'Изменить'}}</button> {{message}}\r\n      </div>\r\n    </form>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport DatePicker from 'vue2-datepicker';\r\nimport 'vue2-datepicker/index.css';\r\nimport 'vue2-datepicker/locale/es/ru.js';\r\nimport UserService from \"@/services/user.service\";\r\n\r\nexport default {\r\n  name: \"userEditor\",\r\n  props: ['userToEdit', 'success', 'close'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n\r\n      newPassword: '',\r\n      checkedPassword: '',\r\n      successful: false,\r\n\r\n      selectFocus: false,\r\n      positionFocus: false,\r\n\r\n      selectedPosition: '',\r\n\r\n      positions:[],\r\n\r\n      user:{\r\n        id:'',\r\n        email: '',\r\n        password: '',\r\n        firstName: '',\r\n        lastName: '',\r\n        patronymic: '',\r\n\r\n        birthday: '',\r\n        gender: false,\r\n        profilePicture: '',\r\n\r\n        workerInfo: {\r\n          position: {},\r\n          maritalStatus: 0,\r\n          children: 0,\r\n        },\r\n\r\n        roles: [\r\n          {\r\n            id: 1,\r\n            name: 'ROLE_USER'\r\n          }\r\n        ]\r\n      },\r\n\r\n      lang: {\r\n        formatLocale: {\r\n          months: ['января', 'февраля', 'марта', 'апреля', 'мая', 'июня', 'июля', 'августа', 'сентября', 'октября', 'ноября', 'декабря'],\r\n        }\r\n      }\r\n    };\r\n  },\r\n  components:{\r\n    DatePicker\r\n  },\r\n  computed:{\r\n    isCreate(){\r\n      return !(this.userToEdit)\r\n    },\r\n\r\n    maritalStatus(){\r\n      return [\r\n        this.user.gender ? 'Не замужем': 'Не женат',\r\n        this.user.gender ? 'Замужем': 'Женат',\r\n        this.user.gender ? 'Разведена': 'Разведен'\r\n      ]\r\n    },\r\n\r\n\r\n    notSamePasswords () {\r\n      if (this.newPassword !== '') {\r\n        return (this.newPassword !== this.checkedPassword)\r\n      } else {\r\n        return false\r\n      }\r\n    },\r\n  },\r\n  methods:{\r\n    deactivateSelectFocus(){\r\n      this.selectFocus=false;\r\n    },\r\n    deactivatePositionFocus(){\r\n\r\n      this.user.workerInfo.position =\r\n          this.selectedPosition && this.positions.length && this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase()))\r\n              ? this.positions.find(i => i.name.toLowerCase().startsWith(this.selectedPosition.toLowerCase()))\r\n              : {};\r\n      this.positionFocus = false;\r\n    },\r\n\r\n    changeUser(){\r\n\r\n      if (this.isCreate){\r\n        this.user.password = this.newPassword;\r\n\r\n        if (this.user.roles.find(i => i.name==='ROLE_ACCOUNTANT')){\r\n          this.user.workerInfo = null;\r\n        }\r\n\r\n        this.$validator.validate().then(isValid => {\r\n          if (isValid && !this.notSamePasswords) {\r\n            this.$store.dispatch('auth/register', this.user).then(\r\n                data => {\r\n                  this.success(data);\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          }\r\n        });\r\n      } else {\r\n        UserService.changeUser(this.user.id, this.user).then(\r\n            response => {\r\n              this.success(response.data);\r\n            },\r\n            error => {\r\n              this.message =\r\n                  (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message ||\r\n                  error.toString();\r\n            }\r\n        );\r\n      }\r\n\r\n    }\r\n  },\r\n  mounted() {\r\n    if (!this.isCreate){\r\n      UserService.getUser(this.userToEdit).then(\r\n          response => {\r\n            this.user = response.data;\r\n            this.user.birthday = new Date(this.user.birthday);\r\n            this.selectedPosition = this.user.workerInfo.position.name;\r\n          },\r\n          error => {\r\n            this.message =\r\n                (error.response && error.response.data && error.response.data.message) ||\r\n                error.message ||\r\n                error.toString();\r\n          }\r\n      );\r\n\r\n    }\r\n    UserService.getPositions().then(\r\n        response => {\r\n          this.positions = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        }\r\n    );\r\n  }\r\n}\r\n</script>\r\n\r\n"]}]}