{"remainingRequest":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Project.vue?vue&type=template&id=55fa6d4f&scoped=true&","dependencies":[{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\Project.vue","mtime":1634772343679},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"div\", { staticClass: \"container\" }, [\n    _vm.currentUser\n      ? _c(\"div\", { staticClass: \"user-menu\" }, [\n          _c(\n            \"li\",\n            [_c(\"router-link\", { attrs: { to: \"/today\" } }, [_vm._v(\"To Do\")])],\n            1\n          ),\n          _c(\n            \"li\",\n            [\n              _c(\"router-link\", { attrs: { to: \"/tasks\" } }, [_vm._v(\"Задачи\")])\n            ],\n            1\n          ),\n          _c(\n            \"li\",\n            [\n              _c(\"router-link\", { attrs: { to: \"/statistics\" } }, [\n                _vm._v(\"Статистика\")\n              ])\n            ],\n            1\n          ),\n          _c(\n            \"li\",\n            [\n              _c(\n                \"router-link\",\n                {\n                  staticClass: \"active\",\n                  attrs: { to: \"/projects\" },\n                  on: {\n                    click: function($event) {\n                      $event.preventDefault()\n                    }\n                  }\n                },\n                [_vm._v(\"Проекты\")]\n              )\n            ],\n            1\n          ),\n          _c(\n            \"li\",\n            [\n              _c(\"router-link\", { attrs: { to: \"/profile\" } }, [\n                _vm._v(\"Мой профиль\")\n              ])\n            ],\n            1\n          ),\n          _vm.isUserManager && false\n            ? _c(\n                \"li\",\n                [\n                  _c(\"router-link\", { attrs: { to: \"/mod\" } }, [\n                    _vm._v(\"Панель модератора\")\n                  ])\n                ],\n                1\n              )\n            : _vm._e(),\n          _vm.isUserAdmin\n            ? _c(\n                \"li\",\n                [\n                  _c(\"router-link\", { attrs: { to: \"/admin\" } }, [\n                    _vm._v(\"Панель администратора\")\n                  ])\n                ],\n                1\n              )\n            : _vm._e()\n        ])\n      : _vm._e(),\n    _c(\"div\", { staticClass: \"content\" }, [\n      _c(\n        \"div\",\n        { staticClass: \"action\" },\n        [\n          _c(\"router-link\", { attrs: { to: \"/profile\" } }, [\n            _c(\"h2\", { staticStyle: { margin: \"0\" } }, [\n              _vm._v(_vm._s(_vm.currentUser.username))\n            ])\n          ])\n        ],\n        1\n      ),\n      _vm.areAllowed\n        ? _c(\n            \"div\",\n            { staticClass: \"form\", staticStyle: { \"margin-top\": \"50px\" } },\n            [_c(\"h2\", [_vm._v(\"Проект не найден\")])]\n          )\n        : _c(\n            \"div\",\n            [\n              !_vm.isHidden\n                ? _c(\"v-taskEdit\", {\n                    attrs: {\n                      task: _vm.task,\n                      post: _vm.post_task,\n                      put: _vm.put_task,\n                      del: _vm.del_task,\n                      option: \"project\",\n                      employes: this.project.workerInfos\n                    },\n                    on: {\n                      hide: function($event) {\n                        _vm.isHidden = true\n                      }\n                    }\n                  })\n                : _vm._e(),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _c(\"input\", {\n                  directives: [\n                    {\n                      name: \"autowidth\",\n                      rawName: \"v-autowidth\",\n                      value: {\n                        maxWidth: \"700px\",\n                        minWidth: \"20px\",\n                        comfortZone: 0\n                      },\n                      expression:\n                        \"{maxWidth: '700px', minWidth: '20px', comfortZone: 0}\"\n                    },\n                    {\n                      name: \"model\",\n                      rawName: \"v-model\",\n                      value: _vm.project.name,\n                      expression: \"project.name\"\n                    }\n                  ],\n                  staticClass: \"h1\",\n                  staticStyle: { \"margin-right\": \"30px\", \"margin-bottom\": \"0\" },\n                  attrs: {\n                    disabled: !_vm.isManager,\n                    type: \"text\",\n                    maxlength: \"30\"\n                  },\n                  domProps: { value: _vm.project.name },\n                  on: {\n                    input: [\n                      function($event) {\n                        if ($event.target.composing) {\n                          return\n                        }\n                        _vm.$set(_vm.project, \"name\", $event.target.value)\n                      },\n                      _vm.changeName\n                    ]\n                  }\n                })\n              ]),\n              _c(\"div\", { staticClass: \"row\" }, [\n                _vm.isManager\n                  ? _c(\n                      \"div\",\n                      {\n                        class: [_vm.active === 0 ? \"button-g\" : \"button-b\"],\n                        on: {\n                          click: function($event) {\n                            _vm.active = 0\n                          }\n                        }\n                      },\n                      [_vm._v(\"Задачи\")]\n                    )\n                  : _vm._e(),\n                _vm.isManager\n                  ? _c(\n                      \"div\",\n                      {\n                        class: [_vm.active === 1 ? \"button-g\" : \"button-b\"],\n                        on: {\n                          click: function($event) {\n                            _vm.active = 1\n                          }\n                        }\n                      },\n                      [_vm._v(\"Статистика\")]\n                    )\n                  : _vm._e(),\n                _vm.isManager\n                  ? _c(\n                      \"div\",\n                      {\n                        class: [_vm.active === 2 ? \"button-g\" : \"button-b\"],\n                        on: {\n                          click: function($event) {\n                            _vm.active = 2\n                          }\n                        }\n                      },\n                      [_vm._v(\"Команда\")]\n                    )\n                  : _vm._e()\n              ]),\n              _vm.content\n                ? _c(\"div\", { staticClass: \"row\" }, [\n                    _c(\"h3\", [_vm._v(\"Упс, \" + _vm._s(_vm.content))])\n                  ])\n                : _vm._e(),\n              _vm.active === 0\n                ? _c(\"div\", [\n                    _c(\"div\", { staticClass: \"column\" }, [\n                      _c(\n                        \"div\",\n                        {\n                          staticClass: \"row\",\n                          staticStyle: { \"margin-bottom\": \"0\" }\n                        },\n                        [\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.completed,\n                                expression: \"completed\"\n                              }\n                            ],\n                            attrs: { type: \"checkbox\", checked: \"\" },\n                            domProps: {\n                              checked: Array.isArray(_vm.completed)\n                                ? _vm._i(_vm.completed, null) > -1\n                                : _vm.completed\n                            },\n                            on: {\n                              change: function($event) {\n                                var $$a = _vm.completed,\n                                  $$el = $event.target,\n                                  $$c = $$el.checked ? true : false\n                                if (Array.isArray($$a)) {\n                                  var $$v = null,\n                                    $$i = _vm._i($$a, $$v)\n                                  if ($$el.checked) {\n                                    $$i < 0 &&\n                                      (_vm.completed = $$a.concat([$$v]))\n                                  } else {\n                                    $$i > -1 &&\n                                      (_vm.completed = $$a\n                                        .slice(0, $$i)\n                                        .concat($$a.slice($$i + 1)))\n                                  }\n                                } else {\n                                  _vm.completed = $$c\n                                }\n                              }\n                            }\n                          }),\n                          _c(\"h3\", [_vm._v(\"Выполненные\")]),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.overdue,\n                                expression: \"overdue\"\n                              }\n                            ],\n                            attrs: { type: \"checkbox\", checked: \"\" },\n                            domProps: {\n                              checked: Array.isArray(_vm.overdue)\n                                ? _vm._i(_vm.overdue, null) > -1\n                                : _vm.overdue\n                            },\n                            on: {\n                              change: function($event) {\n                                var $$a = _vm.overdue,\n                                  $$el = $event.target,\n                                  $$c = $$el.checked ? true : false\n                                if (Array.isArray($$a)) {\n                                  var $$v = null,\n                                    $$i = _vm._i($$a, $$v)\n                                  if ($$el.checked) {\n                                    $$i < 0 && (_vm.overdue = $$a.concat([$$v]))\n                                  } else {\n                                    $$i > -1 &&\n                                      (_vm.overdue = $$a\n                                        .slice(0, $$i)\n                                        .concat($$a.slice($$i + 1)))\n                                  }\n                                } else {\n                                  _vm.overdue = $$c\n                                }\n                              }\n                            }\n                          }),\n                          _c(\"h3\", [_vm._v(\"Просроченные\")]),\n                          _c(\"input\", {\n                            directives: [\n                              {\n                                name: \"model\",\n                                rawName: \"v-model\",\n                                value: _vm.inWork,\n                                expression: \"inWork\"\n                              }\n                            ],\n                            attrs: { type: \"checkbox\", checked: \"\" },\n                            domProps: {\n                              checked: Array.isArray(_vm.inWork)\n                                ? _vm._i(_vm.inWork, null) > -1\n                                : _vm.inWork\n                            },\n                            on: {\n                              change: function($event) {\n                                var $$a = _vm.inWork,\n                                  $$el = $event.target,\n                                  $$c = $$el.checked ? true : false\n                                if (Array.isArray($$a)) {\n                                  var $$v = null,\n                                    $$i = _vm._i($$a, $$v)\n                                  if ($$el.checked) {\n                                    $$i < 0 && (_vm.inWork = $$a.concat([$$v]))\n                                  } else {\n                                    $$i > -1 &&\n                                      (_vm.inWork = $$a\n                                        .slice(0, $$i)\n                                        .concat($$a.slice($$i + 1)))\n                                  }\n                                } else {\n                                  _vm.inWork = $$c\n                                }\n                              }\n                            }\n                          }),\n                          _c(\"h3\", [_vm._v(\"В работе\")])\n                        ]\n                      ),\n                      _c(\"div\", { staticClass: \"row\" }, [\n                        _c(\"h3\", { staticStyle: { \"margin-right\": \"10px\" } }, [\n                          _vm._v(\"Показать с: \")\n                        ]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.interval_start,\n                              expression: \"interval_start\"\n                            }\n                          ],\n                          staticClass: \"date\",\n                          attrs: {\n                            type: \"date\",\n                            min: \"2015-01-01\",\n                            max: \"2030-01-01\"\n                          },\n                          domProps: { value: _vm.interval_start },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.interval_start = $event.target.value\n                            }\n                          }\n                        }),\n                        _c(\"h3\", { staticStyle: { \"margin-right\": \"10px\" } }, [\n                          _vm._v(\"до: \")\n                        ]),\n                        _c(\"input\", {\n                          directives: [\n                            {\n                              name: \"model\",\n                              rawName: \"v-model\",\n                              value: _vm.interval_end,\n                              expression: \"interval_end\"\n                            }\n                          ],\n                          staticClass: \"date\",\n                          attrs: {\n                            type: \"date\",\n                            min: \"2015-01-01\",\n                            max: \"2030-01-01\"\n                          },\n                          domProps: { value: _vm.interval_end },\n                          on: {\n                            input: function($event) {\n                              if ($event.target.composing) {\n                                return\n                              }\n                              _vm.interval_end = $event.target.value\n                            }\n                          }\n                        }),\n                        _c(\n                          \"div\",\n                          {\n                            staticClass: \"button-g\",\n                            on: {\n                              click: function($event) {\n                                _vm.interval_start = _vm.interval_end = \"\"\n                              }\n                            }\n                          },\n                          [_vm._v(\"Сбросить\")]\n                        )\n                      ])\n                    ]),\n                    _c(\n                      \"div\",\n                      {\n                        ref: \"tasks\",\n                        staticClass: \"row tasks\",\n                        staticStyle: { \"align-items\": \"flex-start\" }\n                      },\n                      [\n                        _c(\n                          \"div\",\n                          { staticClass: \"task-table\" },\n                          [\n                            _c(\"div\", { staticClass: \"row-in-table\" }, [\n                              _c(\"div\", { staticClass: \"task-in-table\" }, [\n                                _c(\"h3\", [_vm._v(\"Поиск: \")]),\n                                _c(\"input\", {\n                                  directives: [\n                                    {\n                                      name: \"autowidth\",\n                                      rawName: \"v-autowidth\",\n                                      value: {\n                                        maxWidth: \"200px\",\n                                        minWidth: \"100px\",\n                                        comfortZone: 0\n                                      },\n                                      expression:\n                                        \"{maxWidth: '200px', minWidth: '100px', comfortZone: 0}\"\n                                    },\n                                    {\n                                      name: \"model\",\n                                      rawName: \"v-model\",\n                                      value: _vm.findTask,\n                                      expression: \"findTask\"\n                                    }\n                                  ],\n                                  staticStyle: { \"font-size\": \"16px\" },\n                                  attrs: { type: \"text\", maxlength: \"30\" },\n                                  domProps: { value: _vm.findTask },\n                                  on: {\n                                    input: function($event) {\n                                      if ($event.target.composing) {\n                                        return\n                                      }\n                                      _vm.findTask = $event.target.value\n                                    }\n                                  }\n                                })\n                              ])\n                            ]),\n                            _vm._l(_vm.parents, function(task) {\n                              return _c(\n                                \"div\",\n                                { key: task.id, staticClass: \"row-in-table\" },\n                                [\n                                  _c(\n                                    \"div\",\n                                    {\n                                      class: [\n                                        _vm.hover === task.id ? \"hover\" : \"\"\n                                      ],\n                                      staticStyle: {\n                                        display: \"flex\",\n                                        \"justify-content\": \"space-between\",\n                                        \"align-items\": \"center\"\n                                      },\n                                      on: {\n                                        mouseover: function($event) {\n                                          _vm.hover = task.id\n                                        },\n                                        mouseout: function($event) {\n                                          _vm.hover = 0\n                                        }\n                                      }\n                                    },\n                                    [\n                                      _c(\"div\", {\n                                        staticClass: \"arrow-btn\",\n                                        class: [\n                                          _vm.children(task).length === 0\n                                            ? \"hidden\"\n                                            : \"\",\n                                          \"arrow-btn\"\n                                        ],\n                                        style: {\n                                          transform:\n                                            _vm.children_open(task).length === 0\n                                              ? \"rotate(0.0turn)\"\n                                              : \"rotate(0.25turn)\"\n                                        },\n                                        on: {\n                                          click: function($event) {\n                                            return _vm.open(task)\n                                          }\n                                        }\n                                      }),\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"task-in-table\",\n                                          on: {\n                                            click: function($event) {\n                                              return _vm.openEdit(task)\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\"div\", [\n                                            _vm._v(\n                                              \"\\n                      \" +\n                                                _vm._s(task.taskName) +\n                                                \"\\n                    \"\n                                            )\n                                          ])\n                                        ]\n                                      ),\n                                      _vm.isManager\n                                        ? _c(\"div\", {\n                                            staticClass: \"plus-btn\",\n                                            attrs: {\n                                              \"data-content\":\n                                                \"Добавить подзадачу\"\n                                            },\n                                            on: {\n                                              click: function($event) {\n                                                return _vm.openEdit({\n                                                  parent: task\n                                                })\n                                              }\n                                            }\n                                          })\n                                        : _vm._e()\n                                    ]\n                                  ),\n                                  _vm._l(_vm.children_open(task), function(\n                                    child_task\n                                  ) {\n                                    return _c(\n                                      \"div\",\n                                      {\n                                        key: child_task.id,\n                                        staticClass:\n                                          \"task-in-table subtask-in-table\",\n                                        class: [\n                                          _vm.hover === child_task.id\n                                            ? \"hover\"\n                                            : \"\"\n                                        ],\n                                        on: {\n                                          mouseover: function($event) {\n                                            _vm.hover = child_task.id\n                                          },\n                                          mouseout: function($event) {\n                                            _vm.hover = 0\n                                          },\n                                          click: function($event) {\n                                            return _vm.openEdit(child_task)\n                                          }\n                                        }\n                                      },\n                                      [\n                                        _vm._v(\n                                          \"\\n                \" +\n                                            _vm._s(child_task.taskName) +\n                                            \"\\n              \"\n                                        )\n                                      ]\n                                    )\n                                  })\n                                ],\n                                2\n                              )\n                            }),\n                            _vm.isManager\n                              ? _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"button-s\",\n                                    staticStyle: {\n                                      width: \"auto\",\n                                      \"margin-right\": \"0px\",\n                                      \"margin-left\": \"-1px\",\n                                      \"border-radius\": \"0 0 0 5px\"\n                                    },\n                                    on: {\n                                      click: function($event) {\n                                        return _vm.openEdit(0)\n                                      }\n                                    }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"\\n              Добавить задачу\\n            \"\n                                    )\n                                  ]\n                                )\n                              : _vm._e()\n                          ],\n                          2\n                        ),\n                        _c(\n                          \"horizontal-scroll\",\n                          {\n                            ref: \"table\",\n                            staticClass: \"horizontal-scroll\",\n                            style: { height: _vm.tableHeight + \"px\" }\n                          },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"table\",\n                                style: { width: _vm.tableWidth + \"px\" }\n                              },\n                              [\n                                _c(\"div\", { staticClass: \"main-table-row\" }, [\n                                  _c(\n                                    \"div\",\n                                    { staticClass: \"table-row\" },\n                                    _vm._l(_vm.datesList, function(date) {\n                                      return _c(\n                                        \"div\",\n                                        {\n                                          key: date.id,\n                                          class: [\n                                            date.title == \"Задач не найдено\"\n                                              ? \"row\"\n                                              : \"dates\"\n                                          ]\n                                        },\n                                        [\n                                          _vm._v(\n                                            \"\\n                  \" +\n                                              _vm._s(date.title) +\n                                              \"\\n                  \"\n                                          ),\n                                          _c(\n                                            \"div\",\n                                            _vm._l(date.days, function(day) {\n                                              return _c(\n                                                \"div\",\n                                                {\n                                                  key: day,\n                                                  staticStyle: { width: \"40px\" }\n                                                },\n                                                [_vm._v(_vm._s(day))]\n                                              )\n                                            }),\n                                            0\n                                          )\n                                        ]\n                                      )\n                                    }),\n                                    0\n                                  )\n                                ]),\n                                _vm._l(_vm.parents, function(task) {\n                                  return _c(\n                                    \"div\",\n                                    {\n                                      key: task.id,\n                                      staticClass: \"main-table-row\"\n                                    },\n                                    [\n                                      _c(\n                                        \"div\",\n                                        {\n                                          staticClass: \"table-row\",\n                                          class: [\n                                            _vm.hover === task.id ? \"hover\" : \"\"\n                                          ],\n                                          on: {\n                                            mouseover: function($event) {\n                                              _vm.hover = task.id\n                                            },\n                                            mouseout: function($event) {\n                                              _vm.hover = 0\n                                            }\n                                          }\n                                        },\n                                        [\n                                          _c(\n                                            \"div\",\n                                            {\n                                              staticClass: \"table-task\",\n                                              style: _vm.taskProps(task),\n                                              on: {\n                                                click: function($event) {\n                                                  return _vm.openEdit(task)\n                                                }\n                                              }\n                                            },\n                                            [_vm._v(_vm._s(task.taskName))]\n                                          )\n                                        ]\n                                      ),\n                                      _vm._l(_vm.children_open(task), function(\n                                        child_task\n                                      ) {\n                                        return _c(\n                                          \"div\",\n                                          {\n                                            key: child_task.id,\n                                            staticClass:\n                                              \"table-row table-subrow\",\n                                            class: [\n                                              _vm.hover === child_task.id\n                                                ? \"hover\"\n                                                : \"\"\n                                            ],\n                                            on: {\n                                              mouseover: function($event) {\n                                                _vm.hover = child_task.id\n                                              },\n                                              mouseout: function($event) {\n                                                _vm.hover = 0\n                                              }\n                                            }\n                                          },\n                                          [\n                                            _c(\n                                              \"div\",\n                                              {\n                                                staticClass: \"table-task\",\n                                                style: _vm.taskProps(\n                                                  child_task\n                                                ),\n                                                on: {\n                                                  click: function($event) {\n                                                    return _vm.openEdit(\n                                                      child_task\n                                                    )\n                                                  }\n                                                }\n                                              },\n                                              [\n                                                _vm._v(\n                                                  _vm._s(child_task.taskName)\n                                                )\n                                              ]\n                                            )\n                                          ]\n                                        )\n                                      })\n                                    ],\n                                    2\n                                  )\n                                })\n                              ],\n                              2\n                            )\n                          ]\n                        )\n                      ],\n                      1\n                    )\n                  ])\n                : _vm.active === 1\n                ? _c(\n                    \"div\",\n                    [_c(\"v-stat\", { attrs: { project: _vm.project } })],\n                    1\n                  )\n                : _c(\n                    \"div\",\n                    [\n                      _vm.isManager\n                        ? _c(\n                            \"div\",\n                            [\n                              _vm._m(0),\n                              _vm._l(_vm.project.invitations, function(user) {\n                                return _c(\"v-invRow\", {\n                                  key: user.id,\n                                  attrs: { user: user, action: _vm.delInv }\n                                })\n                              }),\n                              _c(\"div\", { staticClass: \"row\" }, [\n                                _c(\"div\", { staticClass: \"column\" }, [\n                                  _c(\"input\", {\n                                    directives: [\n                                      {\n                                        name: \"autowidth\",\n                                        rawName: \"v-autowidth\",\n                                        value: {\n                                          maxWidth: \"400px\",\n                                          minWidth: \"300px\",\n                                          comfortZone: 0\n                                        },\n                                        expression:\n                                          \"{maxWidth: '400px', minWidth: '300px', comfortZone: 0}\"\n                                      },\n                                      {\n                                        name: \"model\",\n                                        rawName: \"v-model\",\n                                        value: _vm.findUser,\n                                        expression: \"findUser\"\n                                      }\n                                    ],\n                                    staticClass: \"select\",\n                                    attrs: { type: \"text\", maxlength: \"50\" },\n                                    domProps: { value: _vm.findUser },\n                                    on: {\n                                      input: [\n                                        function($event) {\n                                          if ($event.target.composing) {\n                                            return\n                                          }\n                                          _vm.findUser = $event.target.value\n                                        },\n                                        _vm.findUsers\n                                      ]\n                                    }\n                                  }),\n                                  _c(\n                                    \"select\",\n                                    {\n                                      directives: [\n                                        {\n                                          name: \"model\",\n                                          rawName: \"v-model\",\n                                          value: _vm.selected,\n                                          expression: \"selected\"\n                                        }\n                                      ],\n                                      staticClass: \"select\",\n                                      staticStyle: { \"margin-top\": \"-2px\" },\n                                      attrs: {\n                                        multiple: \"\",\n                                        size:\n                                          _vm.users.length > 0\n                                            ? _vm.users.length < 6\n                                              ? _vm.users.length\n                                              : 5\n                                            : 1\n                                      },\n                                      on: {\n                                        change: function($event) {\n                                          var $$selectedVal = Array.prototype.filter\n                                            .call(\n                                              $event.target.options,\n                                              function(o) {\n                                                return o.selected\n                                              }\n                                            )\n                                            .map(function(o) {\n                                              var val =\n                                                \"_value\" in o\n                                                  ? o._value\n                                                  : o.value\n                                              return val\n                                            })\n                                          _vm.selected = $event.target.multiple\n                                            ? $$selectedVal\n                                            : $$selectedVal[0]\n                                        }\n                                      }\n                                    },\n                                    _vm._l(_vm.users, function(user) {\n                                      return _c(\"option\", { key: user.id }, [\n                                        _vm._v(\n                                          _vm._s(user.username) +\n                                            \" - \" +\n                                            _vm._s(user.email)\n                                        )\n                                      ])\n                                    }),\n                                    0\n                                  )\n                                ]),\n                                _c(\n                                  \"div\",\n                                  {\n                                    staticClass: \"button-b\",\n                                    staticStyle: { width: \"auto\" },\n                                    on: { click: _vm.addInv }\n                                  },\n                                  [\n                                    _vm._v(\n                                      \"Пригласить \" + _vm._s(_vm.selected[0])\n                                    )\n                                  ]\n                                )\n                              ])\n                            ],\n                            2\n                          )\n                        : _vm._e(),\n                      _c(\"h2\", [_vm._v(\"Сотрудники\")]),\n                      _c(\"input\", {\n                        directives: [\n                          {\n                            name: \"autowidth\",\n                            rawName: \"v-autowidth\",\n                            value: {\n                              maxWidth: \"400px\",\n                              minWidth: \"300px\",\n                              comfortZone: 0\n                            },\n                            expression:\n                              \"{maxWidth: '400px', minWidth: '300px', comfortZone: 0}\"\n                          },\n                          {\n                            name: \"model\",\n                            rawName: \"v-model\",\n                            value: _vm.sortM,\n                            expression: \"sortM\"\n                          }\n                        ],\n                        staticClass: \"select\",\n                        attrs: { type: \"text\", maxlength: \"50\" },\n                        domProps: { value: _vm.sortM },\n                        on: {\n                          input: function($event) {\n                            if ($event.target.composing) {\n                              return\n                            }\n                            _vm.sortM = $event.target.value\n                          }\n                        }\n                      }),\n                      _vm._l(_vm.workerInfos, function(workerInfo) {\n                        return _c(\n                          \"div\",\n                          { key: workerInfo.id, staticClass: \"row\" },\n                          [\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"task\",\n                                staticStyle: { cursor: \"auto\" }\n                              },\n                              [\n                                _vm._v(\n                                  _vm._s(workerInfo.username) +\n                                    \" - \" +\n                                    _vm._s(workerInfo.email)\n                                )\n                              ]\n                            ),\n                            _c(\n                              \"div\",\n                              {\n                                staticClass: \"button-r\",\n                                on: {\n                                  click: function($event) {\n                                    return _vm.delWorker(workerInfo)\n                                  }\n                                }\n                              },\n                              [_vm._v(\"Удалить\")]\n                            )\n                          ]\n                        )\n                      })\n                    ],\n                    2\n                  )\n            ],\n            1\n          )\n    ])\n  ])\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"row\" }, [\n      _c(\"h2\", { staticStyle: { \"margin-bottom\": \"5px\" } }, [\n        _vm._v(\"Приглашения\")\n      ])\n    ])\n  }\n]\nrender._withStripped = true\n\nexport { render, staticRenderFns }"]}