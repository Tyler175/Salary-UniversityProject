{"remainingRequest":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\src\\views\\components\\TaskEdit.vue","mtime":1634772343670},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Вуз\\ТехнРазПО\\Salary\\frontend\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\r\n\r\nimport UserService from '../../services/user.service';\r\n\r\nexport default {\r\n  name: 'TaskEdit',\r\n  props: ['task','post','put','del', 'option', 'employes'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n      start: '',\r\n      end: '',\r\n      workerInfos: [],\r\n      plans: [],\r\n\r\n      isManager: false,\r\n\r\n      findUser: ''\r\n    };\r\n  },\r\n  computed: {\r\n    allowToEdit(){\r\n      return !((this.isManager) && this.option!='view');\r\n    },\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    findUsers(){\r\n      if (this.findUser){\r\n        return this.employes.filter(i => (\r\n            (i.email.toLowerCase().startsWith(this.findUser.toLowerCase()) || i.username.toLowerCase().startsWith(this.findUser.toLowerCase())) &&\r\n            this.workerInfos.findIndex(item => item.id === i.id)<0\r\n        ));\r\n      } else{\r\n        return [];\r\n      }\r\n    },\r\n    formatDate() {\r\n      return date => {\r\n        let formDate = new Date(date);\r\n        let dd = formDate.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n        let mm = formDate.getMonth() + 1;\r\n        if (mm < 10) mm = '0' + mm;\r\n        let yy = formDate.getFullYear();\r\n        if (yy < 10) yy = '0' + yy;\r\n        return  yy + '-' + mm + '-' + dd;\r\n      }\r\n\r\n    },\r\n    task_start: {\r\n      get: function () {\r\n        return this.formatDate(this.start);\r\n      },\r\n      set: function (value) {\r\n        this.start = value;\r\n      }\r\n    },\r\n    task_end: {\r\n      get() {\r\n        return this.formatDate(this.end);\r\n      },\r\n      set(value) {\r\n        this.end = value;\r\n      }\r\n    },\r\n    dateCompare(){\r\n      if (this.end && this.start) {\r\n        if (this.end < this.start) return 'Задача не может начинаться раньше конца';\r\n        if(this.task.parent){\r\n          if (this.formatDate(this.task.parent.task_start) > this.formatDate(this.start)) return 'Подзадача не может начинаться раньше основной';\r\n          if (this.formatDate(this.task.parent.task_end) < this.formatDate(this.end)) return 'Подзадача не может заканчиваться позже основной';\r\n        } return '';\r\n      } else return ''\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.task.id) UserService.getEditPermissions(this.task.id).then(\r\n        response => {\r\n          this.isManager = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        });\r\n    else this.isManager = true;\r\n    this.start = this.task.task_start ? this.task.task_start : this.formatDate(new Date());\r\n    this.end = this.task.task_end ? this.task.task_end : this.formatDate(new Date());\r\n    this.workerInfos = this.task.workerInfos ? this.task.workerInfos : [];\r\n    this.plans = this.task.plans ? this.task.plans : [];\r\n\r\n  },\r\n  methods: {\r\n    changePlan(plan){\r\n      UserService.putPlan(plan, this.task);\r\n    },\r\n    save(){\r\n      this.$validator.validateAll().then(isValid => {\r\n        if (isValid && !this.dateCompare) {\r\n          this.task.task_start = this.start;\r\n          this.task.task_end = this.end;\r\n          this.task.workerInfos = this.workerInfos;\r\n          this.task.plans = this.plans;\r\n          /*not necessary?*/\r\n          if (!this.task.task_start && !this.task.task_end) {\r\n            this.task.task_end = this.task.task_start = this.formatDate(new Date());\r\n          } else if (!this.task.task_start) {\r\n            this.task.task_start = this.task.task_end\r\n          } else if (!this.task.task_end) {\r\n            this.task.task_end = this.task.task_start\r\n          }\r\n\r\n          if (this.task.id){\r\n            if (this.option != 'project' && this.task.workerInfos.length == 0)  this.task.workerInfos = [this.currentUser];\r\n            UserService.putTask(this.task).then(\r\n                response => {\r\n                  this.put(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          } else{\r\n            if (this.option != 'project') this.task.workerInfos = [this.currentUser];\r\n            UserService.postTask(this.task).then(\r\n                response => {\r\n                  this.task.id = response.data.id;\r\n                  this.post(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          }\r\n        } else this.message = 'Не удалось сохранить задачу'\r\n      });\r\n    },\r\n    delWorker(user){\r\n      this.workerInfos.splice(this.workerInfos.findIndex(i => i.id === user.id),1);\r\n      UserService.delPlan(this.plans.find(i => i.id === user.id));\r\n      this.plans.splice(this.plans.findIndex(i => i.id === user.id),1);\r\n    },\r\n    addWorker(user){\r\n      this.$set(this.workerInfos, this.workerInfos.length, user);\r\n      this.plans.push({user: user, plan: ''});\r\n      UserService.postPlan({user: user, task: this.task, plan: ''});\r\n    },\r\n    deleteTask(){\r\n      if (this.task.id){\r\n        UserService.delTask(this.task.id).then(\r\n            response => {\r\n              this.del(this.task);\r\n              response.data;\r\n              this.message = 'Задача удалена!'\r\n              this.$emit('hide');\r\n            },\r\n            error => {\r\n              this.message =\r\n                  (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message ||\r\n                  error.toString();\r\n            }\r\n        );}\r\n    }\r\n  }\r\n};\r\n",{"version":3,"sources":["TaskEdit.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwfile":"TaskEdit.vue","sourceRoot":"src/views/components","sourcesContent":["<template>\r\n  <div class=\"cover\">\r\n    <div class = \"editor\">\r\n      <input class=\"close\" type=\"button\" value=\"Х\" v-on:click=\"$emit('hide')\"/>\r\n      <div class = \"fields\" style=\"\">\r\n        <div class=\"row\"><h1>Название задачи</h1><input v-bind:disabled=\"allowToEdit\" class=\"check-mark\" type=\"checkbox\" v-model=\"task.taskComplete\"><h2>Готово</h2></div>\r\n        <input v-bind:disabled=\"allowToEdit\" type=\"text\" name=\"название\" v-model=\"task.taskName\" v-validate=\"'required|max:100'\"/>\r\n        <div\r\n            v-if=\"errors.has('название')\"\r\n            class=\"alert-error\"\r\n        >{{errors.first('название').replace('название ','')}}</div>\r\n      </div>\r\n      <div class = \"fields\" style=\"\">\r\n        <h3>Описание задачи</h3>\r\n        <textarea v-bind:disabled=\"allowToEdit\" v-model=\"task.task_description\"></textarea>\r\n      </div>\r\n      <div class = \"fields\" style=\"max-width: 600px; flex-direction: row;\">\r\n        <div style=\"width: 100%; margin-right: 30px\">\r\n          <h3>Начало</h3>\r\n          <input v-bind:disabled=\"allowToEdit\" type=\"date\" v-model=\"task_start\" min=\"2015-01-01\" max=\"2030-01-01\" style=\"height: 40px\"/>\r\n        </div>\r\n        <div style=\"width: 100%; margin-right: 30px\">\r\n          <h3>Конец</h3>\r\n          <input v-bind:disabled=\"allowToEdit\" type=\"date\" v-model=\"task_end\" min=\"2015-01-01\" max=\"2030-01-01\" style=\"height: 40px\"/>\r\n        </div>\r\n      </div>\r\n      <div v-if=\"dateCompare\" class=\"alert-error\">{{dateCompare}}</div>\r\n      <div v-if=\"option === 'project'\" class=\"row\" style=\"align-items: flex-start\">\r\n        <div>\r\n          <div class=\"row\"><h2 style=\"margin:5px\">Исполнители</h2></div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <div v-if=\"workerInfos.length > 0\" class=\"select\">\r\n                <div v-for=\"user in workerInfos\" :key=\"user.id\" class=\"employes\" >\r\n                  <div>{{ user.username }} - {{ user.email }}</div>\r\n                  <div v-if=\"!allowToEdit\" class=\"cross2\" @click=\"delWorker(user)\">x</div>\r\n                </div>\r\n              </div>\r\n              <input v-bind:disabled=\"allowToEdit\" class=\"select\" type=\"text\" maxlength=\"50\" v-autowidth=\"{maxWidth: '700px', minWidth: '505px', comfortZone: 0}\"\r\n                     v-model=\"findUser\" />\r\n\r\n              <select v-if=\"findUsers.length > 0\" class=\"select\" multiple v-bind:size=\"findUsers.length > 0 ? findUsers.length < 6 ? findUsers.length : 5: 1\" style=\"margin-top: -2px\">\r\n                <option v-for=\"user in findUsers\" :key=\"user.id\" @click=\"addWorker(user)\">{{ user.username }} - {{ user.email }}</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div class=\"row\"><h2 style=\"margin:5px\">План</h2> (часов)</div>\r\n          <div class=\"row\">\r\n            <div class=\"column\">\r\n              <div v-for=\"plan in plans\" :key=\"plan.user.id\" >\r\n                <input v-bind:disabled=\"allowToEdit\" v-on:input=\"changePlan(plan)\" type=\"number\" class=\"select employes\" v-model=\"plan.plan\" style=\"border:none; width: 60%\"/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n      </div>\r\n      <div class = \"row\" v-if=\"!allowToEdit\">\r\n        <div class=\"button-g\" @click=\"save\">Сохранить</div>\r\n        <div class=\"button-b\" v-on:click=\"$emit('hide')\">Отменить</div>\r\n        <div class=\"button-r\"  @click=\"deleteTask\" v-if=\"task.id\">Удалить</div>\r\n      </div>\r\n      {{message}}\r\n\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport UserService from '../../services/user.service';\r\n\r\nexport default {\r\n  name: 'TaskEdit',\r\n  props: ['task','post','put','del', 'option', 'employes'],\r\n  data() {\r\n    return {\r\n      message: '',\r\n      start: '',\r\n      end: '',\r\n      workerInfos: [],\r\n      plans: [],\r\n\r\n      isManager: false,\r\n\r\n      findUser: ''\r\n    };\r\n  },\r\n  computed: {\r\n    allowToEdit(){\r\n      return !((this.isManager) && this.option!='view');\r\n    },\r\n    currentUser() {\r\n      return this.$store.state.auth.user;\r\n    },\r\n    findUsers(){\r\n      if (this.findUser){\r\n        return this.employes.filter(i => (\r\n            (i.email.toLowerCase().startsWith(this.findUser.toLowerCase()) || i.username.toLowerCase().startsWith(this.findUser.toLowerCase())) &&\r\n            this.workerInfos.findIndex(item => item.id === i.id)<0\r\n        ));\r\n      } else{\r\n        return [];\r\n      }\r\n    },\r\n    formatDate() {\r\n      return date => {\r\n        let formDate = new Date(date);\r\n        let dd = formDate.getDate();\r\n        if (dd < 10) dd = '0' + dd;\r\n        let mm = formDate.getMonth() + 1;\r\n        if (mm < 10) mm = '0' + mm;\r\n        let yy = formDate.getFullYear();\r\n        if (yy < 10) yy = '0' + yy;\r\n        return  yy + '-' + mm + '-' + dd;\r\n      }\r\n\r\n    },\r\n    task_start: {\r\n      get: function () {\r\n        return this.formatDate(this.start);\r\n      },\r\n      set: function (value) {\r\n        this.start = value;\r\n      }\r\n    },\r\n    task_end: {\r\n      get() {\r\n        return this.formatDate(this.end);\r\n      },\r\n      set(value) {\r\n        this.end = value;\r\n      }\r\n    },\r\n    dateCompare(){\r\n      if (this.end && this.start) {\r\n        if (this.end < this.start) return 'Задача не может начинаться раньше конца';\r\n        if(this.task.parent){\r\n          if (this.formatDate(this.task.parent.task_start) > this.formatDate(this.start)) return 'Подзадача не может начинаться раньше основной';\r\n          if (this.formatDate(this.task.parent.task_end) < this.formatDate(this.end)) return 'Подзадача не может заканчиваться позже основной';\r\n        } return '';\r\n      } else return ''\r\n    }\r\n  },\r\n  mounted() {\r\n    if (this.task.id) UserService.getEditPermissions(this.task.id).then(\r\n        response => {\r\n          this.isManager = response.data;\r\n        },\r\n        error => {\r\n          this.message =\r\n              (error.response && error.response.data && error.response.data.message) ||\r\n              error.message ||\r\n              error.toString();\r\n        });\r\n    else this.isManager = true;\r\n    this.start = this.task.task_start ? this.task.task_start : this.formatDate(new Date());\r\n    this.end = this.task.task_end ? this.task.task_end : this.formatDate(new Date());\r\n    this.workerInfos = this.task.workerInfos ? this.task.workerInfos : [];\r\n    this.plans = this.task.plans ? this.task.plans : [];\r\n\r\n  },\r\n  methods: {\r\n    changePlan(plan){\r\n      UserService.putPlan(plan, this.task);\r\n    },\r\n    save(){\r\n      this.$validator.validateAll().then(isValid => {\r\n        if (isValid && !this.dateCompare) {\r\n          this.task.task_start = this.start;\r\n          this.task.task_end = this.end;\r\n          this.task.workerInfos = this.workerInfos;\r\n          this.task.plans = this.plans;\r\n          /*not necessary?*/\r\n          if (!this.task.task_start && !this.task.task_end) {\r\n            this.task.task_end = this.task.task_start = this.formatDate(new Date());\r\n          } else if (!this.task.task_start) {\r\n            this.task.task_start = this.task.task_end\r\n          } else if (!this.task.task_end) {\r\n            this.task.task_end = this.task.task_start\r\n          }\r\n\r\n          if (this.task.id){\r\n            if (this.option != 'project' && this.task.workerInfos.length == 0)  this.task.workerInfos = [this.currentUser];\r\n            UserService.putTask(this.task).then(\r\n                response => {\r\n                  this.put(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          } else{\r\n            if (this.option != 'project') this.task.workerInfos = [this.currentUser];\r\n            UserService.postTask(this.task).then(\r\n                response => {\r\n                  this.task.id = response.data.id;\r\n                  this.post(response.data);\r\n                  this.message = 'Задача сохранена!'\r\n                },\r\n                error => {\r\n                  this.message =\r\n                      (error.response && error.response.data && error.response.data.message) ||\r\n                      error.message ||\r\n                      error.toString();\r\n                }\r\n            );\r\n          }\r\n        } else this.message = 'Не удалось сохранить задачу'\r\n      });\r\n    },\r\n    delWorker(user){\r\n      this.workerInfos.splice(this.workerInfos.findIndex(i => i.id === user.id),1);\r\n      UserService.delPlan(this.plans.find(i => i.id === user.id));\r\n      this.plans.splice(this.plans.findIndex(i => i.id === user.id),1);\r\n    },\r\n    addWorker(user){\r\n      this.$set(this.workerInfos, this.workerInfos.length, user);\r\n      this.plans.push({user: user, plan: ''});\r\n      UserService.postPlan({user: user, task: this.task, plan: ''});\r\n    },\r\n    deleteTask(){\r\n      if (this.task.id){\r\n        UserService.delTask(this.task.id).then(\r\n            response => {\r\n              this.del(this.task);\r\n              response.data;\r\n              this.message = 'Задача удалена!'\r\n              this.$emit('hide');\r\n            },\r\n            error => {\r\n              this.message =\r\n                  (error.response && error.response.data && error.response.data.message) ||\r\n                  error.message ||\r\n                  error.toString();\r\n            }\r\n        );}\r\n    }\r\n  }\r\n};\r\n</script>"]}]}